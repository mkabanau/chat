{"version":3,"file":"tinode.dev.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVA,QAAQ,4CAA4C,EAAE,mBAAO,CAAC,wEAAqB;AACnF,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,kEAAkB;AACzC,QAAQ,yBAAyB,EAAE,mBAAO,CAAC,gDAAS;AACpD,YAAY,mBAAO,CAAC,0CAAK;AACzB,gBAAgB,mBAAO,CAAC,kEAAiB;AACzC,eAAe,mBAAO,CAAC,4EAAc;AACrC,kBAAkB,mBAAO,CAAC,kFAAiB;;AAE3C;AACA;;AAEA;AACA,gDAAgD;AAChD,YAAY,uBAAuB;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C,sBAAsB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AC/eA,QAAQ,SAAS,EAAE,mBAAO,CAAC,gDAAS;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvEA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,cAAc,mBAAO,CAAC,8DAAgB;AACtC,cAAc,mBAAO,CAAC,gEAAiB;AACvC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,4DAA4D,OAAO;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7EA,cAAc,mBAAO,CAAC,oDAAa;AACnC,eAAe,mBAAO,CAAC,sDAAc;AACrC,YAAY,mBAAO,CAAC,gDAAW;AAC/B,aAAa,mBAAO,CAAC,kDAAY;AACjC,gBAAgB,mBAAO,CAAC,wDAAe;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;;AAEA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,gCAAgC,OAAO;AACvC;AACA;;AAEA,SAAS,SAAS;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,6BAA6B,QAAQ;AACrC;;AAEA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,SAAS;;AAE3B;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/eA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9BA;;AAEA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,gCAAgC,OAAO;AACvC;AACA;;AAEA,SAAS,SAAS;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClDA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,aAAa;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvCA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAE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;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACrJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,gBAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3HA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA,aAAa,mBAAO,CAAC,sDAAY;AACjC,UAAU,mBAAO,CAAC,0CAAK;;AAEvB;AACA,wDAAwD,mBAAO,CAAC,yDAAW;AAC3E;AACA,CAAC;;AAED;AACA;;AAEA;AACA,gBAAgB,wBAAwB;AACxC,gBAAgB,wBAAwB;AACxC,YAAY,oBAAoB;AAChC,mBAAmB,2BAA2B;AAC9C,mBAAmB,2BAA2B;AAC9C,eAAe,uBAAuB;AACtC,gBAAgB,wBAAwB;AACxC,oBAAoB,4BAA4B;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACrIA,aAAa,mBAAO,CAAC,sDAAY;AACjC,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,cAAc;;AAErE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,6BAA6B;AAC7B;AACA,GAAG;AACH;;AAEA,6BAA6B;AAC7B,0BAA0B;;AAE1B,gBAAgB,wBAAwB;AACxC,gBAAgB,wBAAwB;AACxC,YAAY,oBAAoB;AAChC,mBAAmB,2BAA2B;AAC9C,mBAAmB,2BAA2B;AAC9C,eAAe,uBAAuB;AACtC,gBAAgB,wBAAwB;AACxC,oBAAoB,4BAA4B;;AAEhD;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA;AACA,CAAC;;;;;;;;;;;;AClUD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,MAAM;AACZ,WAAW,MAAM;AACjB,IAAI;AACJ,eAAe,MAAM;AACrB;AACA;;AAEA;;;;;;;;;;;;AChBA,iBAAiB,mBAAO,CAAC,wDAAa;AACtC,kBAAkB,mBAAO,CAAC,wEAAqB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,MAAM;AACZ,WAAW,MAAM;AACjB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC/BA;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA;;AAEA,cAAc,MAAM,SAAS,MAAM,gBAAgB,MAAM;;AAEzD;;AAEA;AACA,IAAI;AACJ;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,MAAM;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,MAAM;AACpB;;AAEA,MAAM,MAAM;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,oDAAW;AAChC,cAAc,mBAAO,CAAC,gDAAS;;AAE/B,cAAc;AACd,kBAAkB;AAClB,yBAAyB;;AAEzB;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oDAAoD;AAC1E;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yBAAyB,QAAQ;AACjC;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChvDA,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,YAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,IAAI;;AAEvB,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACtIA,WAAW,UAAU;;AAErB,UAAU;;;;;;;;;;;ACFV,YAAY,mBAAO,CAAC,0CAAK;;AAEzB,QAAQ,KAAK,EAAE,mBAAO,CAAC,2DAAU;;AAEjC,aAAa;AACb,WAAW;AACX;;AAEA,YAAY,wFAA8B;;AAE1C,aAAa,YAAY;AACzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,aAAa;AAC3B;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX,YAAY;AACZ,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;;AAEb,iGAAoC;;AAEpC,eAAe;AACf;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC,mBAAmB;AACnB,mBAAmB;;AAEnB,iBAAiB;AACjB,kBAAkB;AAClB,kBAAkB;;AAElB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc,GAAG,YAAY;AAC1C,aAAa;AACb,WAAW;AACX,cAAc;AACd,YAAY,GAAG,eAAe;;AAE9B,YAAY;AACZ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,cAAc,aAAa;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf,eAAe;;AAEf,YAAY;AACZ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC,KAAK;AACL;AACA;AACA,sBAAsB,iBAAiB;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AC/fA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;;;;;;;;;;;ACjHA,YAAY,mBAAO,CAAC,0CAAK;;AAEzB,QAAQ,KAAK,EAAE,mBAAO,CAAC,2DAAU;;AAEjC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;AAC7B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC,mBAAmB;AACnB,mBAAmB;;AAEnB,iBAAiB;AACjB,kBAAkB;AAClB,kBAAkB;;AAElB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc,GAAG,YAAY;AAC1C,aAAa;AACb,WAAW;AACX,cAAc;AACd,YAAY,GAAG,eAAe;;AAE9B,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;ACnJA,QAAQ,eAAe,EAAE,mBAAO,CAAC,+CAAQ;AACzC,oBAAoB,mBAAO,CAAC,0DAAc;AAC1C,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,kEAAkB;AACzC,kBAAkB,mBAAO,CAAC,oDAAW;AACrC,cAAc,mBAAO,CAAC,4CAAO;AAC7B,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;;AAEA,uDAAuD,mEAAmE;AAC1H;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,kBAAkB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY,8BAA8B;AAC1C;;AAEA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,iCAAiC,eAAe;AAChD;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA,KAAK;;AAEL;AACA;AACA,+BAA+B,eAAe;AAC9C;;AAEA,2BAA2B;AAC3B;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA,0BAA0B,qDAAqD;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,2BAA2B;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACnaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,wDAAU;;AAEjC,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACxDA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;;AAEA,gBAAgB,WAAW;AAC3B;;AAEA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;;AAEA,gBAAgB,WAAW;AAC3B,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;;;;;AChfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AChCA,kBAAkB,mBAAO,CAAC,4DAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACnCA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,aAAa;AACb;AACA;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9PA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,UAAU,mBAAO,CAAC,kEAAkB;AACpC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;;AAEA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA,EAAE,YAAY;AACd;AACA;AACA,EAAE;AACF,EAAE,YAAY;AACd;;AAEA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;;;;;;;;;;;AClIA,QAAQ,eAAe,EAAE,mBAAO,CAAC,+CAAQ;AACzC,YAAY,mBAAO,CAAC,wEAAoB;AACxC,kBAAkB,mBAAO,CAAC,sDAAY;AACtC,wBAAwB,mBAAO,CAAC,kEAAkB;AAClD,UAAU,mBAAO,CAAC,kEAAkB;AACpC,YAAY,mBAAO,CAAC,0CAAK;AACzB,cAAc,mBAAO,CAAC,4CAAO;AAC7B,0BAA0B,mBAAO,CAAC,oFAA2B;AAC7D,iBAAiB,mBAAO,CAAC,kDAAU;AACnC,YAAY,mBAAO,CAAC,wCAAK;;AAEzB,mBAAmB,mBAAO,CAAC,oEAAkB;AAC7C,aAAa,mBAAO,CAAC,wDAAY;AACjC,wBAAwB,mBAAO,CAAC,gFAAwB;AACxD,aAAa,mBAAO,CAAC,wDAAY;AACjC,iBAAiB,mBAAO,CAAC,gEAAgB;AACzC,QAAQ,0BAA0B,EAAE,mBAAO,CAAC,8DAAe;AAC3D,QAAQ,6EAA6E,EAAE,mBAAO,CAAC,4DAAc;;AAE7G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,2BAA2B;;AAE9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6BAA6B,mDAAmD;AAChF;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,yBAAyB;AACnD;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA,UAAU;AACV;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,mBAAmB;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,0BAA0B;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,uBAAuB;AACxsBAAsB,mBAAmB;AACzC;AACA;AACA;;AAEA,kDAAkD,WAAW;AAC7D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACr8BA,uBAAuB,mBAAO,CAAC,kEAAkB;AACjD,YAAY,mBAAO,CAAC,0CAAK;AACzB,iBAAiB,wFAA4B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,oBAAoB,uBAAuB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtZA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,UAAU,mBAAO,CAAC,kEAAkB;AACpC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,mCAAmC;AACzD,sBAAsB,iCAAiC;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,iCAAiC;;AAEvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnEA,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;;;;;;;;;;AC5DA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,kEAAkB;AACzC,YAAY,mBAAO,CAAC,0CAAK;AACzB,UAAU,mBAAO,CAAC,kEAAkB;;AAEpC;AACA;;AAEA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/BA;AACA;AACA,eAAe,mBAAO,CAAC,yEAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,kFAA6B;AAClD;AACA,gBAAgB;;;;;;;;;;;ACVhB,wBAAwB,mBAAO,CAAC,kEAAkB;AAClD,YAAY,mBAAO,CAAC,0CAAK;AACzB,cAAc,mBAAO,CAAC,sDAAS;AAC/B,cAAc,mBAAO,CAAC,sDAAS;AAC/B,mBAAmB,mBAAO,CAAC,kEAAe;AAC1C,mBAAmB,mBAAO,CAAC,kEAAe;AAC1C,iBAAiB,mBAAO,CAAC,4DAAY;AACrC,QAAQ,mEAAmE,EAAE,mBAAO,CAAC,wDAAU;AAC/F,UAAU,mBAAO,CAAC,4DAAY;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,+BAA+B,sBAAsB,WAAW;AAChE,+CAA+C,sBAAsB;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,UAAU,kBAAkB;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,qDAAqD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mDAAmD,wBAAwB;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA,2DAA2D;AAC3D;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,eAAe;AACf,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,sBAAsB,qBAAqB;AAC3C,gBAAgB,+BAA+B;;AAE/C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,kDAAkD;AAC7E;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,6DAA6D;AAC3E;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;ACvnBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrBA;AACA;AACA,aAAa,KAAK,IAAI,IAAI;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;;;;;;;;;;ACpDA,aAAa,mBAAO,CAAC,oDAAW;AAChC,eAAe,mBAAO,CAAC,kEAAkB;AACzC,UAAU,mBAAO,CAAC,kEAAkB;AACpC,cAAc,mBAAO,CAAC,4CAAO;AAC7B,YAAY,mBAAO,CAAC,0CAAK;AACzB,aAAa,mBAAO,CAAC,oDAAQ;AAC7B,QAAQ,mEAAmE,EAAE,mBAAO,CAAC,wDAAU;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,kCAAkC;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,sBAAsB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA,QAAQ;AACR;AACA,UAAU;AACV;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B,eAAe;AACzC;;AAEA;AACA;;AAEA;AACA;;AAEA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,kBAAkB;AACvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,kBAAkB;AACvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA,WAAW;AACX;;AAEA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChrCA,UAAU,mBAAO,CAAC,kEAAkB;AACpC,YAAY,mBAAO,CAAC,0CAAK;AACzB,QAAQ,wBAAwB,EAAE,mBAAO,CAAC,wDAAU;;AAEpD;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,YAAY;;AAEzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,aAAa;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5oBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sFAAsF;;AAEtF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACtCA,aAAa,mBAAO,CAAC,kEAAkB;AACvC,YAAY,mBAAO,CAAC,0CAAK;AACzB,QAAQ,QAAQ,EAAE,mBAAO,CAAC,+DAAe;AACzC,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,wDAAU;;AAE5C;AACA,0BAA0B,uEAAuE,IAAI;AACrG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA,oCAAoC,+CAA+C;AACnF,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,qBAAqB;;AAErB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA,oBAAoB;AACpB;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;;;;;;;;;;;AChOA,uBAAuB,mBAAO,CAAC,kEAAkB;AACjD,iBAAiB,wFAA4B;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;;AAEpB;;AAEA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AClRA,YAAY,mBAAO,CAAC,0CAAK;AACzB,oBAAoB,mBAAO,CAAC,0DAAc;AAC1C,uBAAuB,mBAAO,CAAC,4EAAuB;AACtD,uBAAuB,mBAAO,CAAC,0EAAmB;AAClD,QAAQ,iFAAiF,EAAE,mBAAO,CAAC,wDAAU;AAC7G,UAAU,mBAAO,CAAC,4DAAY;AAC9B,aAAa,mBAAO,CAAC,oDAAQ;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,8BAA8B,4DAA4D;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,4DAA4D;AAC1F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,YAAY,YAAY;AACxB;;AAEA,qDAAqD;AACrD;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gEAAgE;AAClF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,eAAe;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,YAAY,eAAe;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;;AAEA,aAAa,qBAAqB;AAClC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,YAAY,eAAe;;AAE3B;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB;AACnB,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA,YAAY,eAAe;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB;;AAElB;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,eAAe;;AAE3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;;AAEA;;AAEA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,8EAA8E,IAAI;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yGAAyG,IAAI;AACpI,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,uBAAuB;AAC3C;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,wBAAwB;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,uBAAuB;AAC3C;AACA;;AAEA,oBAAoB,yBAAyB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,oDAAoD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,6BAA6B,oDAAoD;AACjF;AACA;AACA;;AAEA;AACA,0BAA0B,oDAAoD;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8CAA8C;AACxD,UAAU,oDAAoD;AAC9D;AACA,UAAU,8CAA8C;AACxD,UAAU,kDAAkD;AAC5D,UAAU,8CAA8C;AACxD,UAAU,kDAAkD;AAC5D,UAAU,sDAAsD;AAChE,UAAU,gDAAgD;AAC1D,UAAU;AACV;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACltDA,QAAQ,qBAAqB,EAAE,mBAAO,CAAC,gDAAS;;AAEhD;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;;;;;;;;;;;ACvDnB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,SAAS,WAAW;;AAEpB;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1BA,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;;;;;;;;;;;ACJA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA,CAAC;;;;;;;;;;;ACzED;AACA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACtEA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;AC1FA;AACA,QAAQ,iEAAiE,EAAE,mBAAO,CAAC,gFAA4B;AAC/G,QAAQ,oGAAoG,EAAE,mBAAO,CAAC,gGAAoC;;AAE1J,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,WAAW;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC/DA,oBAAoB,mBAAO,CAAC,sDAAQ;AACpC,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC9CA;AACA,YAAY,mBAAO,CAAC,0CAAK;AACzB,QAAQ,iBAAiB,EAAE,mBAAO,CAAC,0EAAyB;AAC5D,QAAQ,+CAA+C,EAAE,mBAAO,CAAC,kGAAqC;;AAEtG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,uBAAuB;;;;;;;;;;;ACtCvB,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB,uBAAuB,mBAAO,CAAC,4EAAmB;AAClD,QAAQ,UAAU,EAAE,mBAAO,CAAC,sDAAQ;;AAEpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D;AAC3D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClQA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;AACzB,oBAAoB,mBAAO,CAAC,0DAAU;AACtC,cAAc,mBAAO,CAAC,kDAAM;AAC5B,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,sDAAQ;;AAE1C;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,SAAS;;AAElE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AC5EA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzCA,YAAY,mBAAO,CAAC,0CAAK;AACzB,UAAU,mBAAO,CAAC,kEAAkB;AACpC,kBAAkB,mBAAO,CAAC,gEAAY;AACtC,oBAAoB,mBAAO,CAAC,0DAAc;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;;AAEpB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,QAAQ,IAAI;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,qBAAqB;AAC/B;AACA;;AAEA,YAAY,qBAAqB;AACjC;AACA;;AAEA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;;AAEA,mBAAmB,qJAAqJ;AACxK;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA,MAAM;AACN;AACA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,oBAAoB;AACjD,oBAAoB,qBAAqB;AACzC,qBAAqB,aAAa;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;A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C,QAAQ;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD,OAAO;AACP,KAAK;AACL,4CAA4C,MAAM;AAClD,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C,GAAG;AACH;;AAEA;AACA,gDAAgD,cAAc;AAC9D;AACA;;;;;;;;;;;AClLA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;ACVA;;AAEA;AACA,SAAS,MAAM;AACf,SAAS,MAAM;AACf,SAAS,MAAM;AACf;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,MAAM;AACZ,UAAU,MAAM;AAChB;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAM;AACb;AACA;;AAEA;AACA,MAAM,MAAM;AACZ,UAAU,MAAM;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,MAAM;AACZ,UAAU,MAAM;AAChB;;AAEA;;;;;;;;;;;ACpEA,qBAAqB,mBAAO,CAAC,8GAAuB;AACpD,kBAAkB,mBAAO,CAAC,sDAAY;AACtC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;;AAEA;AACA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,yBAAyB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,yBAAyB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpJA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,kBAAkB,mBAAO,CAAC,gEAAY;;AAEtoBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AC5UA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,eAAe,mBAAO,CAAC,6DAAU;AACjC,gBAAgB,mBAAO,CAAC,gEAAY;;AAEpkBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,WAAW;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA,WAAW,mBAAO,CAAC,8DAAa;AAChC,aAAa,mBAAO,CAAC,wDAAa;;AAElC;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB,2BAA2B;AAC3B;AACA,GAAG;AACH;;AAEA,6BAA6B;AAC7B,0BAA0B;;AAE1B,mBAAmB,2BAA2B;;AAE9C;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA;AACA,CAAC;;;;;;;;;;;ACzBD,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA,qBAAqB,2BAA2B;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B,mBAAmB,QAAQ;AAC3B,kBAAkB,QAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC1OA,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB,mDAAmD,mBAAO,CAAC,yDAAa;AACxE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACxKA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA,WAAW,mBAAO,CAAC,8DAAa;AAChC,aAAa,mBAAO,CAAC,wDAAa;;AAElC;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB,2BAA2B;AAC3B;AACA,GAAG;AACH;;AAEA,6BAA6B;AAC7B,0BAA0B;;AAE1B,mBAAmB,2BAA2B;;AAE9C;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA;AACA,CAAC;;;;;;;;;;;ACzBD,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzoBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA,kBAAkB,OAAO;;AAEzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA,0BAA0B;AAC1B,0BAA0B;;AAE1B;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7iBA,eAAe,mBAAO,CAAC,sDAAY;AACnC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB,mDAAmD,mBAAO,CAAC,yDAAa;AACxE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AC1KA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA,YAAY,mBAAO,CAAC,0CAAK;AACzB,eAAe,mBAAO,CAAC,2DAAU;;AAEjC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;;AAEA,WAAW;AACX;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA,GAAG;AACH;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA,GAAG;AACH;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA,GAAG;AACH;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA,GAAG;AACH;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA,WAAW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A;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,6BAA6B;AACzC,YAAY,6BAA6B;AACzC,YAAY,6BAA6B;AACzC,YAAY,6BAA6B;;AAEzC;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvHA,aAAa,mBAAO,CAAC,sDAAY;AACjC,iDAAiD,mBAAO,CAAC,0DAAa;AACtE,eAAe,mBAAO,CAAC,wDAAY;;AAEnC;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA;AACA,QAAQ,kEAAkE,EAAE,mBAAO,CAAC,4FAA0B;AAC9G,QAAQ,mBAAmB,EAAE,mBAAO,CAAC,0EAAiB;AACtD,iBAAiB,mBAAO,CAAC,kFAAqB;AAC9C,eAAe,mBAAO,CAAC,sDAAY;;AAEnmBAAmB,EAAE,mBAAO,CAAC,0EAAiB;AACtD,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClCA;AACA,QAAQ,qBAAqB,EAAE,mBAAO,CAAC,sEAAe;AACtD,QAAQ,4CAA4C,EAAE,mBAAO,CAAC,kFAAqB;AACnF,QAAQ,cAAc,EAAE,mBAAO,CAAC,sEAAe;AAC/C,QAAQ,2BAA2B,EAAE,mBAAO,CAAC,oFAAsB;AACnE,QAAQ,0CAA0C,EAAE,mBAAO,CAAC,0EAAiB;AAC7E;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,gFAAoB;AAChC,iBAAiB,mBAAO,CAAC,kDAAU;AACnC,eAAe,mBAAO,CAAC,sDAAY;;AAEnkBAAkB,gBAAgB;AAClC;;;;;;;;;;;ACvMA,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;;AAEA,2CAA2C;AAC3C,2CAA2C;AAC3C,2CAA2C;AAC3C,uCAAuC;AACvC,8CAA8C;AAC9C,8CAA8C;AAC9C,0CAA0C;AAC1C,gDAAgD;AAChD,6CAA6C;;AAE7C,iCAAiC;AACjC;AACA;;AAEA,uCAAuC;;AAEvC,uCAAuC;AACvC;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA,EAAE,6CAA6C;AAC/C,CAAC;;;;;;;;;;;ACnCD;AACA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AClBA;AACA,eAAe,mBAAO,CAAC,sDAAY;AACnC,wBAAwB,6GAAwC;AAChE,gBAAgB,mBAAO,CAAC,gDAAS;;AAEjC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,sCAAsC;AACtC,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;;;;;;;;;;;ACvCA;AACA,QAAQ,yBAAyB,EAAE,mBAAO,CAAC,kFAAqB;AAChE,QAAQ,qBAAqB,EAAE,mBAAO,CAAC,oFAAsB;AAC7D,QAAQ,kBAAkB,EAAE,mBAAO,CAAC,sEAAe;AACnD,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA;AACA,eAAe,mBAAO,CAAC,sDAAY;AACnC,iBAAiB,mBAAO,CAAC,kFAAqB;AAC9C,QAAQ,mBAAmB,EAAE,mBAAO,CAAC,0EAAiB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACnCA;AACA,QAAQ,0EAA0E,EAAE,mBAAO,CAAC,gFAAoB;;AAEhH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC3EA;AACA,eAAe,mBAAO,CAAC,sDAAY;AACnC,QAAQ,mCAAmC,EAAE,mBAAO,CAAC,0EAAiB;AACtE,QAAQ,uGAAuG,EAAE,mBAAO,CAAC,oFAAsB;;AAE/I;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9GA;AACA,eAAe,mBAAO,CAAC,sDAAY;AACnC,QAAQ,kBAAkB,EAAE,mBAAO,CAAC,sEAAe;AACnD;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,4FAA0B;AACtC,QAAQ,0DAA0D,EAAE,mBAAO,CAAC,oFAAsB;AAClG,iBAAiB,mBAAO,CAAC,kFAAqB;AAC9C,QAAQ,kDAAkD,EAAE,mBAAO,CAAC,8DAAW;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,wDAAwD;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,uDAAuD;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,uDAAuD;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,0CAA0C;AACxD;AACA;AACA,cAAc,uDAAuD;AACrE;AACA;AACA;AACA;AACA,cAAc,0CAA0C;AACxD;AACA;AACA,cAAc,uDAAuD;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9QA,cAAc,mBAAO,CAAC,oDAAW;;AAEjC;;AAEA,kCAAkC;AAClC,8BAA8B;AAC9B,iCAAiC;AACjC,uCAAuC;AACvC,oCAAoC;AACpC,wBAAwB;;AAExB;AACA;AACA;;;;;;;;;;;ACbA;AACA,QAAQ,mBAAmB,EAAE,mBAAO,CAAC,0EAAiB;AACtD,QAAQ,cAAc,EAAE,mBAAO,CAAC,sEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,gFAAoB;AAChC,QAAQ,cAAc,EAAE,mBAAO,CAAC,sEAAe;AAC/C,QAAQ,0BAA0B,EAAE,mBAAO,CAAC,qFAAwB;AACpE,QAAQ,2BAA2B,EAAE,mBAAO,CAAC,yEAAkB;AAC/D,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;;AAEtB;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;;AAEA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC,cAAc,cAAc;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,uBAAuB;AACzC,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA,kBAAkB,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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD;;AAEA;AACA;AACA,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACleA;AACA,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,6DAAW;AAC7C,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/HA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;AACA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;AACA,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvWA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iCAAiC,iBAAiB,EAAE,mBAAO,CAAC,6BAAqB;AACjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7BA,aAAa,mBAAO,CAAC,sDAAY;;AAEjC;AACA;AACA;;AAEA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAM,sEAAO;AACb;AACA,aAAa,mBAAO,CAAC,qBAAa;AAClC;AACA;;AAEA;AACA,CAAC;;AAED;AACA,sDAAqD;AACrD;AACA,CAAC,EAAC;;AAEF,8BAA8B;AAC9B;AACA;AACA;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA,eAAe,mBAAO,CAAC,kEAAkB;AACzC,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrEA,sGAAyC;;;;;;;;;;;ACAzC,sGAAyC;;;;;;;;;;;ACAzC,sGAAyC;;;;;;;;;;;ACAzC,sGAAyC;;;;;;;;;;;ACAzC,sGAAyC;;;;;;;;;;;ACAzC,QAAQ,eAAe,EAAE,mBAAO,CAAC,+CAAQ;AACzC;AACA;;AAEA,kBAAkB,mBAAO,CAAC,gEAAY;AACtC,aAAa,mBAAO,CAAC,oDAAW;;AAEhC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,iFAAiF,IAAI;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,iFAAiF,IAAI;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oBAAoB,oBAAoB;AACxgCAAgC,aAAa;AAC7C;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,8BAA8B;AAC5F;AACA;AACA,yBAAyB,8BAA8B;AACvD,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8BAA8B,YAAY;AAC1C,8BAA8B,sBAAsB;AACpD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACz+BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACrDA;AACA,iEAAe;AACf;AACA,CAAC;;;;;;;;;;;;;;;ACHD,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;;ACApI;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACjBqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;;AChCS;AACN;AACsB;;AAEjD;AACA,MAAM,6DAAiB;AACvB,WAAW,6DAAiB;AAC5B;;AAEA;AACA,iDAAiD,+CAAG,KAAK;;AAEzD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,8DAAe;AACxB;;AAEA,iEAAe,EAAE;;;;;;;;;;;;;;;;AC5Bc;;AAE/B;AACA,qCAAqC,sDAAU;AAC/C;;AAEA,iEAAe,QAAQ;;;;;;;;;;ACNvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;AChCA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACzGA,qDAAqD,mBAAO,CAAC,uDAAY;;AAEzE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtcA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjCA,YAAY,mBAAO,CAAC,0CAAK;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA;AACA;;AAEA,cAAc;AACd,cAAc;;AAEd;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC5HA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;ACAA;AACO;;AAEP;;AAEA;AACA,UAAU;AACV;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,YAAY;AACZ;AACO,gCAAgC,UAAU;;AAEjD;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO,6BAA6B,UAAU;;AAE9C;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACO;AACP,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,6CAA6C;AACxD,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uCAAuC;AAClD,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA,UAAU;AACV;AACO;AACP;AACA,UAAU;AACV;AACO;;;;;;;;;;;;;;;;;;;;;ACzFP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAE+B;AACM;AACE;;AAEvC;AACA,aAAa,QAAQ;AACrB,cAAc,6BAA6B;AAC3C,cAAc,KAAK;AACnB;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,cAAc,eAAe,iBAAiB;AAC9C;AACA;AACA,IAAI,iDAAgB,oEAAoE,MAAM,kDAAiB,oBAAoB;AACnI;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,IAAI,2DAA0B,YAAY,gDAAe,CAAC,uEAAsC;AAChG;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,EAAE,mDAAkB;AACpB;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;;AAEqC;AACE;AACE;AACA;;AAEzC;AACA,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACO;;AAEP;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,SAAS,oDAAmB;AAC5B;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA,8BAA8B,MAAM;;AAEpC;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,cAAc,MAAM;AACpB;AACA;;AAEA;AACO,iBAAiB,sDAAa;;AAErC;AACO,mBAAmB,sDAAa;;AAEvC;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP,kBAAkB,uDAAsB;AACxC,EAAE,kDAAiB;AACnB,SAAS,sDAAqB;AAC9B;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO,yBAAyB,iDAAgB,CAAC,uDAAsB;;;;;;;;;;;;;;;;AChHvE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqC;AACA;AACJ;AACI;AACA;AACF;;AAEnC,kCAAkC,6CAAY;AAC9C,+BAA+B,6CAAY;;AAE3C;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP,eAAe,2EAA0C;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAAY;AACjC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA,cAAc,wDAAuB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,gBAAgB,6CAAY;AAC5B;AACA,oBAAoB,4CAAW;AAC/B,WAAW,4CAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAAY;AACjC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA,cAAc,wDAAuB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA,gCAAgC;AAChC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP,mBAAmB,8DAA+B;;AAElD;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACO,sBAAsB,uDAAsB;;AAEnD;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO,2CAA2C,KAAK;;AAEvD;AACA,WAAW,SAAS;AACpB;AACO,4CAA4C,KAAK;;AAExD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe;AACf;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2CAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrqBA;;AAEA;AACA;AACA;AACA;AACA;;AAEiC;AACF;;AAE/B;AACA;AACA,UAAU;AACV;AACO,uBAAuB,UAAU,mDAAmD;;AAE3F;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACO,6BAA6B,WAAW;;AAE/C;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,yCAAyC;AACpD,YAAY;AACZ;AACA;AACO;AACP,EAAE,6CAAY;AACd;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,qBAAqB;AAChC,YAAY;AACZ;AACA;AACO;AACP,kCAAkC,6BAA6B;AAC/D;AACA;;AAEA;AACA,WAAW,4BAA4B;AACvC,YAAY;AACZ;AACA;AACO;AACP;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,aAAa;AACxB,YAAY;AACZ;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;AACA;AACO;;AAEP;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA;AACO;;AAEP;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;AACA;AACO;;AAEP;AACA,WAAW,MAAM;AACjB,WAAW,wCAAwC;AACnD,YAAY;AACZ;AACA;AACO;AACP,EAAE,6CAAY;AACd;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,wCAAwC;AACnD,YAAY;AACZ;AACA;AACO;AACP,EAAE,6CAAY;AACd;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,2DAA2D;AACtE,WAAW,aAAa;AACxB,YAAY;AACZ;AACA;AACO;AACP;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACO;AACP,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,0BAA0B;AACrC;AACA;AACO,qCAAqC,UAAU,GAAG,YAAY;;AAErE;AACA,WAAW,iCAAiC;AAC5C,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACA;AACO,8BAA8B,wCAAO,uBAAuB,IAAI,GAAG,OAAO;;AAEjF;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,wBAAwB;AACnC,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO,wCAAwC,aAAa;;AAE5D;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,gEAAgE,KAAK;;AAErE;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO,kDAAkD,KAAK;;AAE9D;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,aAAa;AACxB,WAAW,8BAA8B;AACzC;AACA;AACO;;AAEP;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,WAAW;AACtB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACO;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqC;AACJ;AACI;AACA;AACA;;AAErC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACO;AACP;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA,eAAe,2EAA0C;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA,sBAAsB,2EAA0C;AAChE,kCAAkC,yCAAQ;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA,kBAAkB,4CAA4C;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,uBAAuB,6CAAY;AACnC,+BAA+B,6CAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,0BAA0B,6CAAY;AACtC,sCAAsC,6CAAY;AAClD;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,yBAAyB,6CAAY;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,QAAQ;AAC1B,uCAAuC,6CAAY;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,gCAAgC,6CAAY;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,eAAe,6CAAY;AAC3B,mBAAmB,4CAAW,IAAI,6CAAY;AAC9C,UAAU,2CAAU;AACpB;AACA,iBAAiB,6CAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,qBAAqB,oDAAmB;AACxC;AACA;AACA;AACA;AACA,wBAAwB,6CAAY,GAAG,4CAAW,sBAAsB,4CAAW,SAAS,6CAAY;AACxG,QAAQ,2CAAU;AAClB;AACA;AACA;AACA,0BAA0B,6CAAY,GAAG,4CAAW,SAAS,6CAAY;AACzE,UAAU,2CAAU;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,oBAAoB,kEAAiC;AACrD;AACA,oBAAoB,aAAa;AACjC;AACA;AACA,IAAI;AACJ,gCAAgC,kDAAiB;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,8BAA8B,QAAQ;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACO,wBAAwB,uDAAsB,IAAI,kEAAiC;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA,sBAAsB,yCAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAQ;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,mDAAmD,KAAK;;AAE/D;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,oDAAoD,KAAK;;AAEhE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ,MAAM,QAAQ;AACzF,mEAAmE,QAAQ,MAAM,QAAQ;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,sFAAsF;AACjG;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iDAAgB,UAAU,yCAAQ,UAAU,8CAAa;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACv1BA;AACA;AACA;AACA;AACA;;AAE+B;AACM;AACQ;AACN;AACL;;AAElC;AACA;AACO;AACP;AACA;AACO;AACP;AACO;AACP;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,2CAAU;AACzB;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,eAAe,2CAAU,IAAI;AAC7B;AACA;AACA;AACA,0BAA0B,qDAAoB,WAAW;AACzD,yBAAyB,qDAAoB,WAAW;AACxD;AACA,OAAO;AACP,MAAM;AACN,eAAe,2CAAU;AACzB;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;AACA,MAAM,2DAA0B;AAChC,MAAM,2DAA0B,CAAC,2DAA0B;;AAE3D;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;;AAEA;AACO;;AAEP;AACA;AACA,EAAE,iDAAS;;AAEX;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,YAAY;AACZ,YAAY;AACZ;AACO;AACP;AACA;;AAEA;AACA;AACA,YAAY;AACZ,YAAY;AACZ;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;AC7BA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA,WAAW,iBAAiB;AAC5B;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,UAAU;AACxB;;AAEA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;;AAEP;AACO;;AAEP;AACA;AACA,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;;AAEmC;AACE;;AAErC;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,YAAY;AACvB;AACO;AACP;AACA,WAAW,eAAe;AAC1B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO,gIAAgI,gDAAe,eAAe,UAAU,sCAAsC,iDAAgB;;AAErO;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8CAAa,QAAQ,8CAAa;AAC5C;AACA;AACA;AACA,aAAa,mDAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,GAAG;AACjB;AACA,WAAW,GAAG;AACd,WAAW,aAAa;AACxB;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrJP;;AAEA;AACA;AACA;AACA;AACA;;AAEuC;AACJ;;AAEnC;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO,wBAAwB,+CAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,2BAA2B;AACtC,YAAY;AACZ;AACO,iCAAiC,+CAAc;AACtD;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA,oCAAoC,6CAAY;AAChD;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA,WAAW,aAAa;AACxB,WAAW,uEAAuE;AAClF;AACO;AACP;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,eAAe;AAC1B,WAAW,wBAAwB;AACnC,YAAY;AACZ;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,YAAY;AACZ;AACO;AACP;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,oDAAoD;AAC/D,YAAY;AACZ;AACO;AACP;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,kEAAkE;AAC7E;AACO;AACP;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gDAAgD;AAC3D,WAAW,mDAAmD;AAC9D;AACO;AACP;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,iDAAiD;AAC5D,WAAW,oDAAoD;AAC/D,YAAY;AACZ;AACO;AACP;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,uCAAuC;AAClD,YAAY,iBAAiB;AAC7B;AACO;AACP;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;;AAEA;AACA,WAAW,gBAAgB;AAC3B,WAAW,kBAAkB;AAC7B,WAAW,yCAAyC;AACpD,YAAY;AACZ;AACO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,gBAAgB;AAC3B,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,gBAAgB;AAC3B,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,UAAU;AACV,cAAc,KAAK;AACnB,cAAc,KAAK;AACnB;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA,EAAE,4CAAW,wGAAwG,aAAa;;AAElI;AACA;AACA,WAAW,KAAK;AAChB,WAAW,iEAAiE;AAC5E,YAAY;AACZ;AACA,yCAAyC,+CAAc;AACvD;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,kBAAkB;AAC7B,WAAW,sDAAsD;AACjE,WAAW,yCAAyC;AACpD;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,kBAAkB;AAC7B,WAAW,kDAAkD;AAC7D,WAAW,yCAAyC;AACpD;AACO;AACP;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;;AAEP;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACO;;;;;;;;;;;;;;;;;;;AClSP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,aAAa;AACb;AACA,CAAC;;AAED;AACA;AACA,WAAW,8BAA8B;AACzC,YAAY;AACZ;AACO;AACP;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,aAAa;AACxB,WAAW,qBAAqB;AAChC;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA,CAAC;;AAED;AACA;AACA,WAAW,aAAa;AACxB,WAAW,eAAe;AAC1B;AACO;AACP,UAAU,cAAc;AACxB,WAAW;AACX,CAAC;;;;;;;;;;;;;;;;;AC5DD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBP;AACA;AACA;AACA;AACA;;AAEuC;AACF;AACJ;AACF;AACE;AACF;AACY;AACV;AACA;AACI;;AAE9B,aAAa,8CAAa;AAC1B,eAAe,8CAAa;AAC5B,aAAa,8CAAa;AAC1B,aAAa,8CAAa;AAC1B,cAAc,8CAAa;AAC3B,YAAY,8CAAa;AACzB,eAAe,8CAAa;AAC5B,eAAe,8CAAa;AAC5B,gBAAgB,8CAAa;;AAEpC;AACA,UAAU;AACV;AACA;AACA,UAAU,4CAAW;AACrB,YAAY,4CAAW;AACvB,UAAU,4CAAW;AACrB,WAAW,4CAAW;AACtB,UAAU,4CAAW;AACrB,SAAS,4CAAW;AACpB,YAAY,4CAAW;AACvB,YAAY,4CAAW;AACvB,aAAa,4CAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;;AAEA;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;AACA;AACA;AACA,uBAAuB,2CAAU;AACjC;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sBAAsB,qDAAoB;AAC1C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,0DAAiB;AAC5C,KAAK,mDAAU;AACf;;AAEA;AACA,WAAW,oCAAoC;AAC/C;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oCAAoC;AAC/C;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,MAAM,sDAAa;AACnB;AACA;AACA,oBAAoB,OAAO,IAAI,0BAA0B,8BAA8B,wBAAwB,IAAI;AACnH;AACA,uDAAuD,OAAO,GAAG,kBAAkB,IAAI,YAAY;AACnG;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,2BAA2B,SAAS,OAAO;;AAE3C;AACA,WAAW,oCAAoC;AAC/C;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,oCAAoC;AAC/C;AACO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACO;AACP;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB;AACO;AACP;;AAEO;;AAEP;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,qBAAqB,4CAAW;AAChC,UAAU,4CAAW,UAAU,qDAAoB;AACnD,YAAY,yCAAQ;AACpB;AACA,kCAAkC;AAClC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA,wBAAwB,+CAAc;AACtC;AACA;AACA,QAAQ,4CAAW,cAAc,yCAAQ,YAAY,QAAQ;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,gCAAgC,YAAY;;AAErE;AACO;AACP;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,oCAAoC;AACjD,aAAa,SAAS;AACtB;AACA;AACA,IAAI,kDAAiB;AACrB,2BAA2B,4CAAW;AACtC,QAAQ,4CAAW;AACnB,QAAQ,4CAAW,sBAAsB,eAAe;AACxD,UAAU,yCAAQ;AAClB,4BAA4B,4CAAW;AACvC,QAAQ,4CAAW;AACnB,QAAQ,4CAAW,sBAAsB,eAAe;AACxD,UAAU,yCAAQ;AAClB,sBAAsB,4CAAW;AACjC;AACA,SAAS,4CAAW;AACpB;AACA,aAAa,WAAW,eAAe,gBAAgB;AACvD;AACA,sCAAsC,yCAAQ;AAC9C;AACA;AACA;AACA,4BAA4B,4CAAW;AACvC,QAAQ,4CAAW;AACnB;AACA,uBAAuB,4CAAW;AAClC,MAAM,2CAAU;AAChB;AACA;AACA;AACA,MAAM,qDAAoB;AAC1B;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA,aAAa,oCAAoC;AACjD;AACA;AACA;AACA;;AAEA;AACA,IAAI,kDAAiB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,oCAAoC;AACjD;AACA;AACA,IAAI,kDAAiB;AACrB,MAAM,2CAAU;AAChB,QAAQ,4CAAW;AACnB,UAAU,4CAAW;AACrB;AACA,eAAe,WAAW,eAAe,gBAAgB;AACzD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA,IAAI,kDAAiB;AACrB,MAAM,2CAAU;AAChB,QAAQ,4CAAW;AACnB,UAAU,4CAAW;AACrB,UAAU,4CAAW,cAAc,2CAAU,eAAe;AAC5D;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,MAAM;AACnB;AACA;AACA,IAAI,kDAAiB;AACrB,MAAM,2CAAU;AAChB,KAAK;AACL;;AAEA;AACA,IAAI,kDAAiB;AACrB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA,sBAAsB,iDAAgB;;AAEtC;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA,wBAAwB,wDAAe;AACvC;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,6CAAQ;AAC9B,oBAAoB,iDAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvfA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;AACP;AACA,wBAAwB,aAAa;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,GAAG;AACd,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEA;;AAEA;AACP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEA;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDP;AACA;AACA;AACA;AACA;;AAEiC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;;AAEA;AACA,4EAA4E,mBAAmB;AAC/F;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP,6BAA6B,2CAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2CAAU,iBAAiB,2CAAU,iBAAiB,2CAAU;AACvE;AACA;AACA;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;;AAEiC;AACI;;AAE9B;AACA;;AAEA;AACP;AACA,UAAU;AACV;AACO,sBAAsB,8CAAa;;AAE1C;AACA;AACA;;AAEA;AACO,0FAA0F,2CAAU;AACpG;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACzBP;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,oBAAoB;AAChC;AACO;;AAEP;AACA;AACA;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,WAAW,0BAA0B;AACrC;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,wBAAwB;AACnC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,WAAW,8BAA8B;AACzC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oBAAoB;AAC/B,WAAW,8BAA8B;AACzC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;;;;;;;;;;;;;;;;;;AC7FP;AACA;AACA;AACA;AACA;;AAE+B;AACA;AACI;;AAEnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,2CAAU;AAChC;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA,IAAI,mDAAkB,wBAAwB,2CAAU;AACxD;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,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A;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2BAA2B;AACpE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAQ,CAAC,2CAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAgB;AACrD;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,8BAA8B,sDAAU;AAC/C;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,+BAA+B;AAC5C;AACA,sBAAsB,aAAa,IAAI;AACvC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,sDAAsD,iDAAgB;AACtE;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxJwB;AACgB;AACF;AACS;;AAE/C;AACA;;AAEO;;AAEP;AACA,WAAW,sBAAsB;AACjC;AACO;AACP,yBAAyB,uDAAY,YAAY,aAAa;AAC9D,SAAS,qDAAU,eAAe,0EAA+B;AACjE,IAAI,yCAAU;AACd,6BAA6B,4CAAa;AAC1C,KAAK;AACL;AACA,gBAAgB,yDAAc,iCAAiC,qCAAqC;AACpG,gBAAgB,oDAAS,6BAA6B,8BAA8B;AACpF;AACA;;AAEA;AACA,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB;AACO;AACP;AACA;AACA;AACA,QAAQ,yDAAc,eAAe,oDAAqB;AAC1D,sBAAsB,kDAAO,eAAe,0EAA+B;AAC3E,sBAAsB,oDAAS,6BAA6B,8BAA8B;AAC1F;AACA,KAAK;;AAEL;AACA,WAAW,QAAQ;AACnB;AACO,8BAA8B,uDAAY;;AAEjD;AACA;AACA;AACO,mCAAmC,0DAAU;AACpD;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAiB;AACjC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,eAAe,qDAAU;AACzB,MAAM,2DAAgB;AACtB,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,wBAAwB,oDAAqB;AAC7C,qDAAqD,yDAAc;AACnE;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,KAAK;AACpB;AACA;AACA;AACA,+BAA+B,uDAAY,YAAY,aAAa;AACpE,QAAQ,yDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,MAAM,uDAAY;AAClB,KAAK;AACL;;AAEA;AACA,aAAa,sCAAsC;AACnD,cAAc;AACd;AACA;AACA;AACA,uBAAuB,uDAAY;AACnC,aAAa,kDAAO;AACpB,KAAK;AACL;;AAEA;AACA,aAAa,sCAAsC;AACnD,aAAa,sCAAsC;AACnD,cAAc;AACd;AACA;AACA;AACA,uBAAuB,uDAAY;AACnC,aAAa,kDAAO;AACpB,KAAK;AACL;;AAEA;AACA,aAAa,sCAAsC;AACnD,cAAc;AACd;AACA;AACA;AACA,uBAAuB,uDAAY;AACnC,aAAa,kDAAO;AACpB,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7KA;AACA;AACA;;AAEyC;AACA;AACR;AACA;AACW;AACV;AACV;;AAEjB;;AAEP;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8DAA8D;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO,wBAAwB,uDAAU;AACzC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,qCAAqC,KAAK;AAC1C,kBAAkB,kDAAgB;AAClC,qFAAqF,qBAAqB;AAC1G;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,EAAE,4CAAU;AACjB;AACA;AACA,KAAK;AACL,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,mBAAmB,kDAAgB;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,WAAW,uDAAc;AACzB;AACA;AACA;AACA;AACA,6BAA6B,0CAA0C;AACvE;AACA,2BAA2B,yBAAyB;AACpD;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,eAAe;AAC1B,WAAW,KAAK;AAChB;AACO;AACP;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA,uBAAuB,kDAAgB;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE,gCAAgC,iCAAiC;AACjE;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,wDAAsB;AACxC,EAAE,uDAAqB;AACvB,kBAAkB,SAAS;AAC3B;AACA;AACA,6BAA6B,iBAAiB;AAC9C,IAAI,uDAAqB;AACzB,IAAI,uDAAqB;AACzB,IAAI,yDAAuB;AAC3B;AACA,SAAS,uDAAqB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACO;AACP,kBAAkB,wDAAsB;AACxC,kBAAkB,wDAAsB;AACxC,cAAc,sDAAoB;AAClC,EAAE,uDAAqB;AACvB,kBAAkB,SAAS;AAC3B,qBAAqB,sDAAoB;AACzC,kBAAkB,sDAAoB;AACtC,6BAA6B,wDAAsB;AACnD;AACA,IAAI,uDAAqB;AACzB,IAAI,uDAAqB;AACzB,IAAI,yDAAuB;AAC3B;AACA,SAAS,uDAAqB;AAC9B;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,YAAY;AACvB,WAAW,KAAK;AAChB;AACO;AACP,kBAAkB,wDAAsB;AACxC,oBAAoB,kDAAgB;AACpC;AACA;AACA;AACA;AACA,cAAc,sDAAoB;AAClC,kBAAkB,SAAS;AAC3B,qBAAqB,sDAAoB;AACzC,gBAAgB,sDAAoB;AACpC,6BAA6B,wDAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR,aAAa,uDAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtSA;AACA;AACA;;AAEyC;AACA;AACjB;;AAExB;AACA,aAAa,qBAAqB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA;;AAEP;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACO;AACP,EAAE,uDAAqB;AACvB,aAAa,kDAAmB;AAChC,EAAE,6DAA2B;AAC7B;;AAEA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB;AACO;AACP,EAAE,uDAAqB;AACvB,EAAE,6DAA2B,UAAU,oDAAqB;AAC5D;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACO;AACP,+BAA+B,4DAA0B;;AAEzD;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACO;AACP;AACA,IAAI,4CAAa,MAAM,4DAA0B;AACjD,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,WAAW,YAAY;AACvB;AACO;AACP,EAAE,uDAAqB;AACvB,EAAE,6DAA2B;AAC7B;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACO;;AAEP;AACA,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACO;AACP,sBAAsB,sDAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACjIA;;AAEyC;AACA;AACF;AACJ;AACE;;AAErC;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP,uBAAuB,mDAAiB;AACxC,eAAe,mDAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;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AAG,sCAAsC;AACjE;AACA,qDAAqD,6DAA6D;AAClH,KAAK;AACL;AACA,2BAA2B,8CAAY;AACvC;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAsB;AAC5C,MAAM,uDAAqB;AAC3B,MAAM,4DAA2B;AACjC;AACA;AACA;AACA,wBAAwB,wDAAsB;AAC9C,QAAQ,uDAAqB;AAC7B,QAAQ,6DAA2B,UAAU,wEAAuC;AACpF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,8CAAY;AAC/C;AACA,KAAK;AACL;AACA,qCAAqC,8CAAY;AACjD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB;AACA,wCAAwC,+CAAmB;AAC3D;AACA,IAAI,0DAAU;AACd;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,kBAAkB,wCAAwC;AAC1D;AACA,8CAA8C,qCAAqC;AACnF;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,4BAA4B,wDAAsB;AAClD,IAAI,uDAAqB;AACzB,IAAI,qDAAmB;AACvB,IAAI,yDAAuB;AAC3B,6BAA6B,uDAAqB;AAClD;AACA;;AAEO;AACP;AACA,aAAa,OAAO;AACpB,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,kBAAkB,+CAAa;AAC/B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,uDAAW;AAC1B;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA,MAAM,+CAAmB;AACzB;AACA,qDAAqD;AACrD;AACA,qCAAqC,uDAAqB;AAC1D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,KAAK;AACpB;AACA;AACA,sBAAsB,wDAAsB;AAC5C,MAAM,uDAAqB;AAC3B,MAAM,yDAAwB;AAC9B,iCAAiC,uDAAqB;AACtD;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,eAAe,KAAK;AACpB;AACA,sCAAsC,yBAAyB;AAC/D;AACA,+BAA+B,wDAAsB;AACrD,MAAM,uDAAqB;AAC3B,MAAM,6DAA2B,mBAAmB,wEAAuC;AAC3F,iCAAiC,uDAAqB;AACtD;;AAEA;AACA,MAAM,wEAAuC;AAC7C;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAY;AAChB;AACA;AACA;AACA;AACA,wBAAwB,wDAAsB;AAC9C,IAAI,uDAAqB;AACzB,IAAI,4DAA2B;AAC/B,6BAA6B,uDAAqB;AAClD;AACA,yBAAyB,wDAAsB;AAC/C,IAAI,uDAAqB;AACzB,IAAI,4DAA2B;AAC/B,6BAA6B,uDAAqB;AAClD;AACA,kCAAkC,wDAAsB;AACxD,IAAI,uDAAqB;AACzB,6BAA6B,uDAAqB;AAClD;AACA,kCAAkC,wDAAsB;AACxD,IAAI,uDAAqB;AACzB,IAAI,6DAA2B,wBAAwB,wEAAuC;AAC9F,6BAA6B,uDAAqB;AAClD;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D;AACA,KAAK;AACL,IAAI,wEAAuC;AAC3C;AACA,4BAA4B,wDAAsB;AAClD,IAAI,uDAAqB;AACzB,IAAI,qDAAmB;AACvB,IAAI,yDAAuB;AAC3B,6BAA6B,uDAAqB;;AAElD,IAAI,8DAAc;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA,UAAU,+CAAY,iCAAiC,KAAK;AAC5D;AACA;AACA,6BAA6B,MAAM;AACnC;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB;AACA;AACA;AACA,IAAI,mDAAuB;AAC3B,kBAAkB,yCAAyC,kDAAe,QAAQ;AAClF,KAAK;AACL,IAAI;AACJ,gBAAgB,yCAAyC;AACzD;AACA;;AAEO,4BAA4B,4DAAkB;AACrD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B;AACA,kBAAkB,2BAA2B;AAC7C;AACA,8CAA8C,qCAAqC;AACnF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,kBAAkB,qDAAkB;AACpC;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mDAAuB,CAAC,oDAAiB;AACvD;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL,mDAAmD,IAAI;AACvD;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B,cAAc,QAAQ;AACtB,cAAc,6BAA6B;AAC3C,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,KAAK;AACnB;;AAEA;AACA;AACA;AACO,6BAA6B,wDAAU;AAC9C;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAA2B;AACjD,sBAAsB,6CAAU,CAAC,6CAAW;AAC5C;AACA,oBAAoB;AACpB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,iDAAqB,kCAAkC,mBAAmB,IAAI,kDAAe;AACvH;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,qDAAkB;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACroB6C;AACT;AACF;AACF;AACU;AACA;AACJ;AACE;AACF;AACF;AACE;AACH;AACK;AACR;AACQ;AACN;AACQ;AACJ;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uDAAU;AAC1C;AACA,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,WAAW;AACtB,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA,GAAG;;AAEH;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4CAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,mBAAmB,0CAAQ;AAC3B,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,kBAAkB;AAC7B,YAAY,WAAW;AACvB;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,+BAA+B,gBAAgB;AAC/C,UAAU,gDAAc;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAkB;AACpB;;AAEA;;AAEA;AACA,WAAW,aAAa;AACxB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,2BAA2B;AACtC,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAqB;AACvB;AACA;AACA,IAAI,uDAAqB;AACzB;AACA,IAAI,uDAAqB;AACzB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,2BAA2B;AACtC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAoB;AACzC,kBAAkB,gBAAgB;AAClC;AACA,mBAAmB,sDAAoB;AACvC,4BAA4B,sDAAoB;AAChD;AACA,sBAAsB,oDAAkB;AACxC,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,2BAA2B;AACtC,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,YAAY,iBAAiB,yEAAyE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAoB;AACzC,kBAAkB,gBAAgB;AAClC;AACA,mBAAmB,sDAAoB;AACvC,4BAA4B,sDAAoB;AAChD;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAqB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,+CAAa;;AAEzC;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB,cAAc,wBAAwB;AACtC,cAAc,QAAQ;AACtB,cAAc,eAAe;AAC7B,cAAc,KAAK;AACnB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,uDAAU;AAC5B;AACA,aAAa,SAAS;AACtB;AACA,iBAAiB,OAAO,+CAAa,8GAA8G,IAAI;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAc;AACpC;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4BAA4B;AACzC,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA,iBAAiB,oDAAkB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,8CAA8C,MAAM;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,4CAAU;AACd;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C,8BAA8B,qDAAqD;AACnF;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,WAAW,sDAAoB;AAC/B;;AAEA;AACA,cAAc;AACd;AACA;AACA,WAAW,sDAAoB;AAC/B;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,sDAAoB,oBAAoB,sDAAoB;AAChF;;AAEA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,sDAAoB,oBAAoB,sDAAoB;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAoB;AAC/B;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,WAAW,oDAAkB;AAC7B;;AAEA;AACA,cAAc;AACd;AACA;AACA,WAAW,wDAAsB;AACjC;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA,WAAW,sDAAoB;AAC/B;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,WAAW,sDAAoB;AAC/B;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,WAAW,sDAAoB;AAC/B;;AAEA;AACA,cAAc;AACd;AACA;AACA,WAAW,kDAAgB;AAC3B;;AAEA;AACA,cAAc;AACd;AACA;AACA,WAAW,uDAAqB,CAAC,4DAA0B;AAC3D;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,sBAAsB,wDAAsB;AAC5C;;AAEA;AACA,cAAc;AACd;AACA;AACA,WAAW,wDAAsB;AACjC;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,sBAAsB,sDAAoB;AAC1C;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,iBAAiB,sDAAoB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA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CA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,WAAW,aAAa;AACxB,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,uDAAqB;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,mCAAmC;AAC9C,WAAW,KAAK;AAChB,YAAY,cAAc,mCAAmC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,mCAAmC;AAC7D;AACA,qBAAqB,4CAAU;AAC/B,4BAA4B,sDAAoB;AAChD,kBAAkB,uBAAuB;AACzC,4BAA4B,sDAAoB;AAChD;AACA,cAAc;AACd;AACA;AACA;AACA,gBAAgB,sDAAoB;AACpC;AACA,6BAA6B,YAAY;AACzC,oBAAoB,qBAAqB;AACzC;AACA,cAAc,+CAAY;AAC1B,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,sBAAsB,sDAAoB;AAC1C;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,8CAA8C,8CAAW,GAAG,8CAAW;AACvE;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB,8CAAW,MAAM,8CAAW;AAChD;AACA,oBAAoB,8CAAW,MAAM,8CAAW;AAChD;AACA,0CAA0C,8CAAW,MAAM,8CAAW;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,cAAc,gCAAgC,GAAG;AAC5D,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+BAA+B;AACvE;AACA;AACA;AACA,wCAAwC,+BAA+B;AACvE,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,6BAA6B,KAAK,sCAAsC,KAAK;AAC7E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,oDAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,8DAA8D,QAAQ,mBAAmB;AACzF;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC,MAAM;AACN,6BAA6B,SAAS;AACtC,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAqB,0BAA0B;AACnD,aAAa;AACb;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wDAAsB;AACxE,MAAM,sDAAoB,+BAA+B;AACzD;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,YAAY;AACvB,WAAW,KAAK;AAChB,WAAW,iDAAiD;AAC5D;AACA;AACA;AACA;AACA,kBAAkB,wDAAsB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,YAAY;AACvB,WAAW,KAAK;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,KAAK;AAChB,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,YAAY;AACvB,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAoB;AACvC,kBAAkB,cAAc;AAChC,mBAAmB,sDAAoB;AACvC,kBAAkB,sDAAoB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA,0EAA0E,wDAAsB;;AAEhG;AACA,WAAW,2BAA2B;AACtC,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA,EAAE,uDAAqB;AACvB;AACA,IAAI,uDAAqB,+BAA+B;AACxD,IAAI,uDAAqB;AACzB,GAAG;AACH;AACA;;AAEA;AACA,WAAW,2BAA2B;AACtC,WAAW,KAAK;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,2BAA2B;AACtC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,uCAAuC;AAC3C;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,0BAA0B;AACrC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,oCAAoC;AACxC;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,mDAAS;;AAEX;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAqB;AACvB,EAAE,uDAAqB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAoB,WAAW,sDAAoB;;AAE9D;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAoB;AAC5B;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,WAAW;AACtB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,QAAQ;AACvB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA,+IAA+I,wDAAsB;AACrK;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,sGAAsG,wDAAsB;AAC5H,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,0CAA0C;AACvD;AACA,oDAAoD,sBAAsB,IAAI;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,2CAA2C,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,IAAI;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,aAAa;AAC1B,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA,UAAU,2BAA2B;AACrC;AACA,IAAI,uDAAqB;AACzB;AACA,IAAI;AACJ;AACA,IAAI,qDAAmB;AACvB,IAAI,yDAAuB;AAC3B,IAAI;AACJ;AACA,IAAI,qDAAmB;AACvB;AACA,IAAI;AACJ,UAAU,sDAAoB;AAC9B;AACA,EAAE,sDAAoB;AACtB;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACA,kBAAkB,wDAAsB;AACxC;AACA,SAAS,uDAAqB;AAC9B;;AAEA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sDAAoB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAmB,YAAY,qDAAmB;AAClE;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA,kEAAkE,wDAAsB;;AAExF;AACA,WAAW,kBAAkB;AAC7B,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN,YAAY,sDAAoB;AAChC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,uBAAuB;AAClC,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,oBAAoB;AACjC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB,WAAW,2BAA2B;AACtC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,2BAA2B;AACtC,YAAY;AACZ;AACA,yDAAyD,wDAAsB;AAC/E;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA,oEAAoE,wDAAsB;;AAE1F;AACA,WAAW,WAAW;AACtB,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB;AACA;AACA,eAAe,oDAAkB,iDAAiD,6CAAU;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8DAA8D;AAC9D;AACA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,WAAW,UAAU;AACrB,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,SAAS;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,uDAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uDAAqB;AAC3B;AACA;AACA,MAAM,uDAAqB;AAC3B,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,YAAY,sDAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAAU,iDAAiD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,eAAe,4CAAU;AACzB;AACA;AACA;AACA,QAAQ,sDAAoB;AAC5B;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;;AAE1D;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,WAAW,aAAa;AACxB,YAAY,SAAS;AACrB;AACA;AACA,mDAAmD,yCAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,2BAA2B;AACtC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,IAAI,oDAAkB,4BAA4B,6CAAU;AAC5D;AACA;;AAEA;AACA,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,mBAAmB;AAC7F,mBAAmB,mBAAmB,uDAAuD,MAAM;AACnG;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,aAAa;AACxB,WAAW,wBAAwB;AACnC;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,0CAA0C,SAAS;AACnD;AACA;AACA,oCAAoC,0CAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,aAAa;AACxB,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oBAAoB;AAC/B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP,MAAM,uDAAO;AACb,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA,iCAAiC,0CAAQ;AACzC,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C,gBAAgB,gBAAgB;AAChC,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gDAAa,CAAC,iDAAc,EAAE,+CAAY,YAAY,iDAAc,EAAE,8CAAW;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,qEAAqE;AACpG;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,GAAG;AACvD;AACA,WAAW,KAAK;AAChB,WAAW,4BAA4B;AACvC,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA,gFAAgF,MAAM;AACtF;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,6CAA6C,wDAAwD;AACrG;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,+BAA+B;AAC7C,cAAc,wBAAwB;AACtC;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,SAAS;AACvB,cAAc,KAAK;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0BAA0B,uDAAU;AACpC;AACA,aAAa,4CAA4C;AACzD,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,KAAK,IAAI,+CAAa;AAC3C,IAAI,IAAI;AACR;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,mDAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,SAAS;AACrF;AACA;AACA;AACA,OAAO;AACP,6BAA6B,qJAAqJ;AAClL;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,8CAA8C;AAC3D;AACA;AACA,aAAa,+CAAa;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oEAAoE;AAC1G,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA,4BAA4B,sDAAoB;AAChD,kBAAkB,uBAAuB;AACzC,4BAA4B,sDAAoB;AAChD;AACA,gBAAgB,sDAAoB;AACpC,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA,oBAAoB,sDAAoB;AACxC;AACA;AACA,QAAQ,UAAU,+CAAY;AAC9B,4CAA4C,8CAAW,GAAG,8CAAW;AACrE;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB,8CAAW,MAAM,8CAAW;AAC9C;AACA,kBAAkB,8CAAW,MAAM,8CAAW;AAC9C;AACA;AACA,wCAAwC,8CAAW,MAAM,8CAAW;AACpE;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,iDAAiD;AAC5D;AACA;AACA;AACA;AACA,qCAAqC,wDAAsB;AAC3D;AACA,oCAAoC,eAAe;AACnD;AACA;AACA,EAAE,gDAAa;AACf;AACA,EAAE,gDAAa;AACf;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,iDAAiD;AAC5D;AACA;AACA;AACA;AACA,qCAAqC,wDAAsB;AAC3D;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,0CAA0C;AAChE;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,yCAAyC;AACpD,WAAW,iDAAiD;AAC5D,YAAY;AACZ;AACA;AACA;AACA,0DAA0D,wDAAsB;AAChF;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAU,uDAAqB;AAC/B,UAAU,uDAAqB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uDAAqB;AAC3B,MAAM,uDAAqB;AAC3B;AACA;AACA,gBAAgB,wDAAsB;AACtC,IAAI,uDAAqB;AACzB,IAAI,6DAA2B;AAC/B;AACA;AACA,IAAI;AACJ,IAAI,uDAAqB;AACzB;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,iDAAiD;AAC5D,cAAc;AACd;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,0DAA0D,wDAAsB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,WAAW,YAAY;AACvB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,IAAI;AACJ,YAAY,gBAAgB;AAC5B;AACA,IAAI;AACJ,gCAAgC,MAAM;AACtC,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,iDAAiD;AAC5D,WAAW,iDAAiD;AAC5D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,4DAA4D,wDAAsB;AAClF;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;;AAE9C;AACA,4BAA4B,kBAAkB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,MAAM;AACN,oBAAoB,mBAAmB,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,iDAAiD;AAC5D,WAAW,iDAAiD;AAC5D;AACA;AACA;AACA;AACA;AACA,+BAA+B,wDAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,0CAAQ;AACpE;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA,oCAAoC,0CAA0C,uDAAqB,kCAAkC;AACrI,qCAAqC,wDAAsB;AAC3D;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE,uDAAqB;;AAEvB,kBAAkB,qCAAqC;AACvD;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAqB;AACzB;AACA,IAAI,0DAAwB;AAC5B;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,iDAAiD;AAC5D,WAAW,kDAAkD;AAC7D;AACA;AACA,qCAAqC,wDAAsB;AAC3D;AACA;AACA;;AAEA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;;AAEA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc,qBAAqB,mEAAmE;AACtG;AACA;AACA;AACA,cAAc,eAAe,+HAA+H;AAC5J;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,YAAY,cAAc,mEAAmE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,MAAM;AACxC;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAU;AACrC,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,4CAAU;AACrC,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,yBAAyB,4CAAU,YAAY,MAAM;AACrD,cAAc;AACd;AACA;AACA;AACA,0BAA0B,kBAAkB;AAC5C;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO,8HAA8H;AACjJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,mDAAmD,4CAA4C,eAAe,0DAA0D;AACrL;AACA;AACA;AACA;AACA;AACA,oBAAoB,6CAAU;AAC9B,sBAAsB,6CAAU;AAChC;AACA,gBAAgB,OAAO,kBAAkB,EAAE,cAAc,EAAE,cAAc;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,cAAc;AACd,YAAY;AACZ;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,0BAA0B;AACrC,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,kGAAkG,0CAAQ,oBAAoB,0CAAQ;AACtI;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0CAAQ,qCAAqC,mBAAmB;AACzF;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,gBAAgB,0CAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,aAAa;AACxB,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oDAAkB;AACtB;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,mCAAmC,mBAAmB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,aAAa,mCAAmC;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,uCAAuC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,+CAA+C;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,sCAAsC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,+CAA+C;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,wCAAwC;AACnD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,WAAW,4EAA4E;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kMAAkM,YAAY;AAC9M;AACA;AACA;AACA,gLAAgL,KAAK;AACrL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,uBAAuB,8CAAY;;AAEnC;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,WAAW,oEAAoE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,oEAAoE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,+IAA+I,4BAA4B;AAC3K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,WAAW,mEAAmE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACA;AACA;AACA,iCAAiC,0DAAuB,4BAA4B,KAAK;;AAEzF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C,cAAc,UAAU;AACxB;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;;AAEA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,aAAa;AAC1B,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA,KAAK,WAAW,kBAAkB;AAClC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW,uDAAoB,2CAA2C,KAAK;AAC/E;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW,uDAAoB,2CAA2C,KAAK;AAC/E;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW,uDAAoB,2CAA2C,KAAK;AAC/E;;AAEA;AACA;AACA;AACA,aAAa,6CAA6C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,sBAAsB,KAAK;AAC3B;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,MAAM;AACN,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY;AACZ;AACA,qGAAqG,mDAAgB;;AAErH;AACA;AACA,aAAa,WAAW;AACxB,aAAa,WAAW;AACxB,aAAa,QAAQ;AACrB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,sDAAoB;AAC1B;AACA;AACA;AACA;AACA,qEAAqE,eAAe;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,eAAe;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,sBAAsB;AACjC,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe,4CAA4C,eAAe;AAC9H;AACA;AACA;AACA;AACA,0CAA0C,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,WAAW,iBAAiB;AAC5B,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAU,aAAa;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,WAAW,sBAAsB;AACjC,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4HAA4H,eAAe,qDAAqD,eAAe,sCAAsC;AAC3P;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,sBAAsB;AACjC,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,sBAAsB;AACjC,WAAW,iCAAiC;AAC5C,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,6EAA6E,QAAQ;AACrF,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa,aAAa,eAAe;AAC3D;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,MAAM;AACjB,WAAW,WAAW;AACtB,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAQ;AAChC;AACA;AACA,wDAAwD,eAAe;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa,aAAa,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,2BAA2B,MAAM;AACjC;AACA,0BAA0B,4CAAU;AACpC,8BAA8B,0CAAQ;AACtC;AACA;AACA;AACA;AACA,kEAAkE,eAAe;AACjF;AACA;AACA;AACA,8BAA8B,0CAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0CAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB,eAAe,MAAM;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,WAAW,iCAAiC,cAAc;AAC1D,WAAW,iBAAiB;AAC5B,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,mDAAmD,4CAA4C,eAAe,0DAA0D;AACrL;AACA;AACA;AACA;AACA,iBAAiB,mDAAmD,4CAA4C,eAAe,mFAAmF;AAClN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;;AAEA;AACA;AACA,QAAQ,kDAAkD;AAC1D;AACA,YAAY,OAAO,yGAAyG;AAC5H;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA,gBAAgB,OAAO,yGAAyG;AAChI;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA,+BAA+B;AAC/B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,aAAa,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,eAAe;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D,0CAA0C,MAAM;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,aAAa;AAC3B;AACA,aAAa,KAAK;AAClB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB,IAAI;AAC7C;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,YAAY;AACZ,iFAAiF;AACjF,YAAY;AACZ;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,aAAa,uCAAuC;AACpD,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB;AAClB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,iBAAiB;AACzH;AACA,gBAAgB;AAChB;AACA;AACA,sGAAsG,eAAe;AACrH;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAoB,MAAM;AACnE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,eAAe;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,4BAA4B;AACzC,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,4BAA4B;AACzC,aAAa,qCAAqC;AAClD;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,mCAAmC,MAAM;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,+CAA+C;AAC7D;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,4CAA4C,KAAK;AACjD,gFAAgF;AAChF;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA,QAAQ,4DAA4D,aAAa;AACjF;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa,kBAAkB,KAAK;AACpC;AACA;;AAEA;AACA,yBAAyB,kBAAkB,MAAM,gBAAgB;AACjE,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qCAAqC;AAClD;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,aAAa,cAAc;AAC3B,cAAc,2CAA2C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA,aAAa,qBAAqB,SAAS;AAC3C;AACA,aAAa,KAAK;AAClB;AACA;AACA,cAAc,MAAM,KAAK;AACzB;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,4BAA4B,YAAY;AACxC;AACA;AACA,cAAc,8CAAY;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,yDAAyD;AACtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,2EAA2E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA,0BAA0B,sBAAsB,eAAe,aAAa;AAC5E;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA,0BAA0B,sBAAsB,eAAe,aAAa;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA,KAAK,YAAY,kBAAkB;AACnC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,EAAE,YAAY,GAAG,iBAAiB,IAAI,SAAS;AACvE;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;;AAEA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA,aAAa,qBAAqB,SAAS;AAC3C;AACA,aAAa,KAAK;AAClB;AACA;AACA,cAAc,MAAM,KAAK;AACzB;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,kBAAkB;AAC/B;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA,aAAa,sBAAsB;AACnC;AACA,aAAa,KAAK;AAClB;AACA;AACA,cAAc,SAAS,KAAK;AAC5B;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,0BAA0B,sBAAsB,eAAe,aAAa;AAC5E;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA,0BAA0B,sBAAsB,eAAe,aAAa;AAC5E;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA,aAAa,qBAAqB;AAClC;AACA,aAAa,KAAK;AAClB;AACA;AACA,cAAc,MAAM,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6CAA6C;AACpE;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA,mBAAmB,cAAc;AACjC,wBAAwB,uBAAuB;AAC/C;AACA,qBAAqB,SAAS,IAAI,WAAW;AAC7C;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD,oBAAoB,wBAAwB;AAC5C;AACA;AACA,KAAK;AACL;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,IAAI;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA,UAAU,2DAAyB;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,IAAI;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,gBAAgB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,qBAAqB;AAChC;AACA,oDAAoD,sEAAsE;;AAE1H;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,aAAa,YAAY;AACzB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,aAAa,cAAc;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,IAAI;AACf,aAAa;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,MAAM;AACjB,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mBAAmB,8BAA8B,aAAa;;AAEpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA,2CAA2C,mBAAmB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB,aAAa,aAAa;AAC1B,aAAa,WAAW;AACxB,aAAa,aAAa;AAC1B,aAAa,WAAW;AACxB,aAAa,2BAA2B;AACxC,aAAa,eAAe;AAC5B,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,6CAA6C,8CAAW;AACxD;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,sBAAsB,8CAAW;AACjC,mBAAmB,8CAAW;AAC9B;AACA;;AAEA;AACA,wBAAwB,8CAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,8CAAW;AACnC;;AAEA;AACA;AACA,mBAAmB,8CAAW;AAC9B;AACA;;AAEA;AACA,wBAAwB,8CAAW;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,8CAAW;AACnC;;AAEA;AACA;AACA,mBAAmB,8CAAW;AAC9B;AACA;;AAEA;AACA,iBAAiB,8CAAW;AAC5B;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA,UAAU;AACV,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,eAAe,OAAO,KAAK,MAAM,KAAK,KAAK,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd,YAAY,iGAAiG;AAC7G;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA,UAAU;AACV,yBAAyB,mBAAmB;AAC5C,WAAW,WAAW,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,0DAA0D,mBAAmB;AAC7E,sBAAsB,mBAAmB,8CAA8C,mBAAmB;AAC1G;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,SAAS;AACtB;AACA;AACA;AACA,YAAY,sDAAoB;AAChC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,0CAA0C,+CAAY;AACtD,6BAA6B,8CAAW;AACxC,kCAAkC,8CAAW;AAC7C,gCAAgC,8CAAW,GAAG;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,UAAU;AACV,0CAA0C;AAC1C;AACA;AACA,QAAQ,0CAA0C;AAClD,uCAAuC;AACvC;AACA,QAAQ;AACR,wCAAwC;AACxC;AACA,QAAQ;AACR,QAAQ,sDAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,WAAW,QAAQ;AACnB;AACA,8DAA8D,+CAAY;;AAE1E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU,sDAAoB,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sDAAoB,MAAM;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA,IAAI,sDAAoB;AACxB;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,IAAI,uDAAqB;AACzB;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sources":["webpack://Tinode/webpack/universalModuleDefinition","webpack://Tinode/./node_modules/@hyperswarm/secret-stream/index.js","webpack://Tinode/./node_modules/@hyperswarm/secret-stream/lib/bridge.js","webpack://Tinode/./node_modules/@hyperswarm/secret-stream/lib/handshake.js","webpack://Tinode/./node_modules/b4a/browser.js","webpack://Tinode/./node_modules/b4a/lib/ascii.js","webpack://Tinode/./node_modules/b4a/lib/base64.js","webpack://Tinode/./node_modules/b4a/lib/hex.js","webpack://Tinode/./node_modules/b4a/lib/utf16le.js","webpack://Tinode/./node_modules/b4a/lib/utf8.js","webpack://Tinode/./src/access-mode.js","webpack://Tinode/./src/cbuffer.js","webpack://Tinode/./src/config.js","webpack://Tinode/./src/connection.js","webpack://Tinode/./src/db.js","webpack://Tinode/./src/drafty.js","webpack://Tinode/./src/large-file.js","webpack://Tinode/./src/meta-builder.js","webpack://Tinode/./src/topic.js","webpack://Tinode/./src/utils.js","webpack://Tinode/./node_modules/base64-js/index.js","webpack://Tinode/./node_modules/big-sparse-array/index.js","webpack://Tinode/./node_modules/blake2b-wasm/blake2b.js","webpack://Tinode/./node_modules/blake2b-wasm/index.js","webpack://Tinode/./node_modules/blake2b/index.js","webpack://Tinode/./node_modules/buffer-alloc-unsafe/index.js","webpack://Tinode/./node_modules/buffer-alloc/index.js","webpack://Tinode/./node_modules/buffer-fill/index.js","webpack://Tinode/./node_modules/buffer/index.js","webpack://Tinode/./node_modules/chacha20-universal/index.js","webpack://Tinode/./node_modules/compact-encoding/endian.js","webpack://Tinode/./node_modules/compact-encoding/index.js","webpack://Tinode/./node_modules/compact-encoding/lexint.js","webpack://Tinode/./node_modules/compact-encoding/raw.js","webpack://Tinode/./node_modules/corestore/index.js","webpack://Tinode/./node_modules/crc-universal/fallback.js","webpack://Tinode/./node_modules/crc-universal/lookup.js","webpack://Tinode/./node_modules/events/events.js","webpack://Tinode/./node_modules/fast-fifo/fixed-size.js","webpack://Tinode/./node_modules/fast-fifo/index.js","webpack://Tinode/./node_modules/flat-tree/index.js","webpack://Tinode/./node_modules/hypercore-crypto/index.js","webpack://Tinode/./node_modules/hypercore/index.js","webpack://Tinode/./node_modules/hypercore/lib/bitfield.js","webpack://Tinode/./node_modules/hypercore/lib/block-encryption.js","webpack://Tinode/./node_modules/hypercore/lib/block-store.js","webpack://Tinode/./node_modules/hypercore/lib/caps.js","webpack://Tinode/./node_modules/hypercore/lib/compat.js","webpack://Tinode/./node_modules/hypercore/lib/core.js","webpack://Tinode/./node_modules/hypercore/lib/download.js","webpack://Tinode/./node_modules/hypercore/lib/errors.js","webpack://Tinode/./node_modules/hypercore/lib/info.js","webpack://Tinode/./node_modules/hypercore/lib/merkle-tree.js","webpack://Tinode/./node_modules/hypercore/lib/messages.js","webpack://Tinode/./node_modules/hypercore/lib/mutex.js","webpack://Tinode/./node_modules/hypercore/lib/oplog.js","webpack://Tinode/./node_modules/hypercore/lib/remote-bitfield.js","webpack://Tinode/./node_modules/hypercore/lib/replicator.js","webpack://Tinode/./node_modules/hypercore/lib/streams.js","webpack://Tinode/./node_modules/ieee754/index.js","webpack://Tinode/./node_modules/inherits/inherits_browser.js","webpack://Tinode/./node_modules/is-options/index.js","webpack://Tinode/./node_modules/nanoassert/index.js","webpack://Tinode/./node_modules/next-tick/index.js","webpack://Tinode/./node_modules/noise-curve-ed/index.js","webpack://Tinode/./node_modules/noise-handshake/cipher.js","webpack://Tinode/./node_modules/noise-handshake/dh.js","webpack://Tinode/./node_modules/noise-handshake/hkdf.js","webpack://Tinode/./node_modules/noise-handshake/hmac.js","webpack://Tinode/./node_modules/noise-handshake/noise.js","webpack://Tinode/./node_modules/noise-handshake/symmetric-state.js","webpack://Tinode/./node_modules/once/once.js","webpack://Tinode/./node_modules/protomux/index.js","webpack://Tinode/./node_modules/queue-tick/queue-microtask.js","webpack://Tinode/./node_modules/quickbit-universal/fallback.js","webpack://Tinode/./node_modules/random-access-file/browser.js","webpack://Tinode/./node_modules/random-access-idb/index.js","webpack://Tinode/./node_modules/random-access-idb/lib/blocks.js","webpack://Tinode/./node_modules/random-access-idb/node_modules/buffer-from/index.js","webpack://Tinode/./node_modules/random-access-memory/index.js","webpack://Tinode/./node_modules/random-access-memory/node_modules/random-access-storage/index.js","webpack://Tinode/./node_modules/random-access-storage/index.js","webpack://Tinode/./node_modules/random-array-iterator/index.js","webpack://Tinode/./node_modules/safety-catch/index.js","webpack://Tinode/./node_modules/sha256-universal/index.js","webpack://Tinode/./node_modules/sha256-universal/sha256.js","webpack://Tinode/./node_modules/sha256-wasm/index.js","webpack://Tinode/./node_modules/sha256-wasm/sha256.js","webpack://Tinode/./node_modules/sha512-universal/index.js","webpack://Tinode/./node_modules/sha512-universal/sha512.js","webpack://Tinode/./node_modules/sha512-wasm/index.js","webpack://Tinode/./node_modules/sha512-wasm/sha512.js","webpack://Tinode/./node_modules/simdle-universal/fallback.js","webpack://Tinode/./node_modules/simdle-universal/scalar.js","webpack://Tinode/./node_modules/simple-peer/simplepeer.min.js","webpack://Tinode/./node_modules/siphash24/fallback.js","webpack://Tinode/./node_modules/siphash24/index.js","webpack://Tinode/./node_modules/siphash24/siphash24.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_aead.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_auth.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_box.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_generichash.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_hash.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_hash_sha256.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_kdf.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_kx.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_onetimeauth.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_scalarmult.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_secretbox.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_secretstream.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_shorthash.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_sign.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_stream.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_stream_chacha20.js","webpack://Tinode/./node_modules/sodium-javascript/crypto_verify.js","webpack://Tinode/./node_modules/sodium-javascript/helpers.js","webpack://Tinode/./node_modules/sodium-javascript/index.js","webpack://Tinode/./node_modules/sodium-javascript/internal/ed25519.js","webpack://Tinode/./node_modules/sodium-javascript/internal/hchacha20.js","webpack://Tinode/./node_modules/sodium-javascript/internal/poly1305.js","webpack://Tinode/./node_modules/sodium-javascript/memory.js","webpack://Tinode/./node_modules/sodium-javascript/randombytes.js","webpack://Tinode/./node_modules/sodium-javascript/ sync","webpack://Tinode/./node_modules/sodium-secretstream/index.js","webpack://Tinode/./node_modules/sodium-universal/crypto_generichash.js","webpack://Tinode/./node_modules/sodium-universal/crypto_kx.js","webpack://Tinode/./node_modules/sodium-universal/crypto_scalarmult.js","webpack://Tinode/./node_modules/sodium-universal/index.js","webpack://Tinode/./node_modules/sodium-universal/memory.js","webpack://Tinode/./node_modules/streamx/index.js","webpack://Tinode/./node_modules/timeout-refresh/browser.js","webpack://Tinode/./node_modules/uuid/dist/esm-browser/native.js","webpack://Tinode/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Tinode/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Tinode/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Tinode/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Tinode/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Tinode/./node_modules/wrappy/wrappy.js","webpack://Tinode/./node_modules/xache/index.js","webpack://Tinode/./node_modules/xsalsa20/index.js","webpack://Tinode/./node_modules/xsalsa20/xsalsa20.js","webpack://Tinode/./node_modules/z32/index.js","webpack://Tinode/ignored|/home/maksim/git/walletspace/tinode/tinode-js/node_modules/sodium-javascript|crypto","webpack://Tinode/ignored|/home/maksim/git/walletspace/tinode/tinode-js/node_modules/sodium-javascript|worker_threads","webpack://Tinode/./node_modules/isomorphic.js/browser.mjs","webpack://Tinode/./node_modules/lib0/array.js","webpack://Tinode/./node_modules/lib0/binary.js","webpack://Tinode/./node_modules/lib0/broadcastchannel.js","webpack://Tinode/./node_modules/lib0/buffer.js","webpack://Tinode/./node_modules/lib0/conditions.js","webpack://Tinode/./node_modules/lib0/decoding.js","webpack://Tinode/./node_modules/lib0/dom.js","webpack://Tinode/./node_modules/lib0/encoding.js","webpack://Tinode/./node_modules/lib0/environment.js","webpack://Tinode/./node_modules/lib0/error.js","webpack://Tinode/./node_modules/lib0/eventloop.js","webpack://Tinode/./node_modules/lib0/function.js","webpack://Tinode/./node_modules/lib0/indexeddb.js","webpack://Tinode/./node_modules/lib0/iterator.js","webpack://Tinode/./node_modules/lib0/json.js","webpack://Tinode/./node_modules/lib0/logging.js","webpack://Tinode/./node_modules/lib0/map.js","webpack://Tinode/./node_modules/lib0/math.js","webpack://Tinode/./node_modules/lib0/metric.js","webpack://Tinode/./node_modules/lib0/mutex.js","webpack://Tinode/./node_modules/lib0/number.js","webpack://Tinode/./node_modules/lib0/object.js","webpack://Tinode/./node_modules/lib0/observable.js","webpack://Tinode/./node_modules/lib0/pair.js","webpack://Tinode/./node_modules/lib0/promise.js","webpack://Tinode/./node_modules/lib0/random.js","webpack://Tinode/./node_modules/lib0/set.js","webpack://Tinode/./node_modules/lib0/storage.js","webpack://Tinode/./node_modules/lib0/string.js","webpack://Tinode/./node_modules/lib0/symbol.js","webpack://Tinode/./node_modules/lib0/time.js","webpack://Tinode/./node_modules/lib0/websocket.js","webpack://Tinode/./node_modules/y-indexeddb/src/y-indexeddb.js","webpack://Tinode/./node_modules/y-protocols/awareness.js","webpack://Tinode/./node_modules/y-protocols/sync.js","webpack://Tinode/./node_modules/y-webrtc/src/crypto.js","webpack://Tinode/./node_modules/y-webrtc/src/y-webrtc.js","webpack://Tinode/./node_modules/yjs/dist/yjs.mjs","webpack://Tinode/webpack/bootstrap","webpack://Tinode/webpack/runtime/compat get default export","webpack://Tinode/webpack/runtime/define property getters","webpack://Tinode/webpack/runtime/global","webpack://Tinode/webpack/runtime/hasOwnProperty shorthand","webpack://Tinode/webpack/runtime/make namespace object","webpack://Tinode/./src/tinode.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tinode\"] = factory();\n\telse\n\t\troot[\"Tinode\"] = factory();\n})(this, () => {\nreturn ","const { Pull, Push, HEADERBYTES, KEYBYTES, ABYTES } = require('sodium-secretstream')\nconst sodium = require('sodium-universal')\nconst crypto = require('hypercore-crypto')\nconst { Duplex, getStreamError } = require('streamx')\nconst b4a = require('b4a')\nconst Timeout = require('timeout-refresh')\nconst Bridge = require('./lib/bridge')\nconst Handshake = require('./lib/handshake')\n\nconst IDHEADERBYTES = HEADERBYTES + 32\nconst [NS_INITIATOR, NS_RESPONDER] = crypto.namespace('hyperswarm/secret-stream', 2)\n\nmodule.exports = class NoiseSecretStream extends Duplex {\n  constructor (isInitiator, rawStream, opts = {}) {\n    super({ mapWritable: toBuffer })\n\n    if (typeof isInitiator !== 'boolean') {\n      throw new Error('isInitiator should be a boolean')\n    }\n\n    this.noiseStream = this\n    this.isInitiator = isInitiator\n    this.rawStream = null\n\n    this.publicKey = opts.publicKey || null\n    this.remotePublicKey = opts.remotePublicKey || null\n    this.handshakeHash = null\n\n    // pointer for upstream to set data here if they want\n    this.userData = null\n\n    let openedDone = null\n    this.opened = new Promise((resolve) => { openedDone = resolve })\n\n    // unwrapped raw stream\n    this._rawStream = null\n\n    // handshake state\n    this._handshake = null\n    this._handshakePattern = opts.pattern || null\n    this._handshakeDone = null\n\n    // message parsing state\n    this._state = 0\n    this._len = 0\n    this._tmp = 1\n    this._message = null\n\n    this._openedDone = openedDone\n    this._startDone = null\n    this._drainDone = null\n    this._outgoingPlain = null\n    this._outgoingWrapped = null\n    this._utp = null\n    this._setup = true\n    this._ended = 2\n    this._encrypt = null\n    this._decrypt = null\n    this._timeout = null\n    this._timeoutMs = 0\n    this._keepAlive = null\n    this._keepAliveMs = 0\n\n    if (opts.autoStart !== false) this.start(rawStream, opts)\n\n    // wiggle it to trigger open immediately (TODO add streamx option for this)\n    this.resume()\n    this.pause()\n  }\n\n  static keyPair (seed) {\n    return Handshake.keyPair(seed)\n  }\n\n  static id (handshakeHash, isInitiator, id) {\n    return streamId(handshakeHash, isInitiator, id)\n  }\n\n  setTimeout (ms) {\n    if (!ms) ms = 0\n\n    this._clearTimeout()\n    this._timeoutMs = ms\n\n    if (!ms || this.rawStream === null) return\n\n    this._timeout = Timeout.once(ms, destroyTimeout, this)\n    this._timeout.unref()\n  }\n\n  setKeepAlive (ms) {\n    if (!ms) ms = 0\n\n    this._keepAliveMs = ms\n\n    if (!ms || this.rawStream === null) return\n\n    this._keepAlive = Timeout.on(ms, sendKeepAlive, this)\n    this._keepAlive.unref()\n  }\n\n  start (rawStream, opts = {}) {\n    if (rawStream) {\n      this.rawStream = rawStream\n      this._rawStream = rawStream\n      if (typeof this.rawStream.setContentSize === 'function') {\n        this._utp = rawStream\n      }\n    } else {\n      this.rawStream = new Bridge(this)\n      this._rawStream = this.rawStream.reverse\n    }\n\n    this.rawStream.on('error', this._onrawerror.bind(this))\n    this.rawStream.on('close', this._onrawclose.bind(this))\n\n    this._startHandshake(opts.handshake, opts.keyPair || null)\n    this._continueOpen(null)\n\n    if (this.destroying) return\n\n    if (opts.data) this._onrawdata(opts.data)\n    if (opts.ended) this._onrawend()\n\n    if (this._keepAliveMs > 0 && this._keepAlive === null) {\n      this.setKeepAlive(this._keepAliveMs)\n    }\n\n    if (this._timeoutMs > 0 && this._timeout === null) {\n      this.setTimeout(this._timeoutMs)\n    }\n  }\n\n  _continueOpen (err) {\n    if (err) this.destroy(err)\n    if (this._startDone === null) return\n    const done = this._startDone\n    this._startDone = null\n    this._open(done)\n  }\n\n  _onkeypairpromise (p) {\n    const self = this\n    const cont = this._continueOpen.bind(this)\n\n    p.then(onkeypair, cont)\n\n    function onkeypair (kp) {\n      self._onkeypair(kp)\n      cont(null)\n    }\n  }\n\n  _onkeypair (keyPair) {\n    const pattern = this._handshakePattern || 'XX'\n    const remotePublicKey = this.remotePublicKey\n\n    this._handshake = new Handshake(this.isInitiator, keyPair, remotePublicKey, pattern)\n    this.publicKey = this._handshake.keyPair.publicKey\n  }\n\n  _startHandshake (handshake, keyPair) {\n    if (handshake) {\n      const { tx, rx, hash, publicKey, remotePublicKey } = handshake\n      this._setupSecretStream(tx, rx, hash, publicKey, remotePublicKey)\n      return\n    }\n\n    if (!keyPair) keyPair = Handshake.keyPair()\n\n    if (typeof keyPair.then === 'function') {\n      this._onkeypairpromise(keyPair)\n    } else {\n      this._onkeypair(keyPair)\n    }\n  }\n\n  _onrawerror (err) {\n    this.destroy(err)\n  }\n\n  _onrawclose () {\n    if (this._ended !== 0) this.destroy()\n  }\n\n  _onrawdata (data) {\n    let offset = 0\n\n    if (this._timeout !== null) {\n      this._timeout.refresh()\n    }\n\n    do {\n      switch (this._state) {\n        case 0: {\n          while (this._tmp !== 0x1000000 && offset < data.length) {\n            const v = data[offset++]\n            this._len += this._tmp * v\n            this._tmp *= 256\n          }\n\n          if (this._tmp === 0x1000000) {\n            this._tmp = 0\n            this._state = 1\n            const unprocessed = data.length - offset\n            if (unprocessed < this._len && this._utp !== null) this._utp.setContentSize(this._len - unprocessed)\n          }\n\n          break\n        }\n\n        case 1: {\n          const missing = this._len - this._tmp\n          const end = missing + offset\n\n          if (this._message === null && end <= data.length) {\n            this._message = data.subarray(offset, end)\n            offset += missing\n            this._incoming()\n            break\n          }\n\n          const unprocessed = data.length - offset\n\n          if (this._message === null) {\n            this._message = b4a.allocUnsafe(this._len)\n          }\n\n          b4a.copy(data, this._message, this._tmp, offset)\n          this._tmp += unprocessed\n\n          if (end <= data.length) {\n            offset += missing\n            this._incoming()\n          } else {\n            offset += unprocessed\n          }\n\n          break\n        }\n      }\n    } while (offset < data.length && !this.destroying)\n  }\n\n  _onrawend () {\n    this._ended--\n    this.push(null)\n  }\n\n  _onrawdrain () {\n    const drain = this._drainDone\n    if (drain === null) return\n    this._drainDone = null\n    drain()\n  }\n\n  _read (cb) {\n    this.rawStream.resume()\n    cb(null)\n  }\n\n  _incoming () {\n    const message = this._message\n\n    this._state = 0\n    this._len = 0\n    this._tmp = 1\n    this._message = null\n\n    if (this._setup === true) {\n      if (this._handshake) {\n        this._onhandshakert(this._handshake.recv(message))\n      } else {\n        if (message.byteLength !== IDHEADERBYTES) {\n          this.destroy(new Error('Invalid header message received'))\n          return\n        }\n\n        const remoteId = message.subarray(0, 32)\n        const expectedId = streamId(this.handshakeHash, !this.isInitiator)\n        const header = message.subarray(32)\n\n        if (!b4a.equals(expectedId, remoteId)) {\n          this.destroy(new Error('Invalid header received'))\n          return\n        }\n\n        this._decrypt.init(header)\n        this._setup = false // setup is now done\n      }\n      return\n    }\n\n    if (message.length < ABYTES) {\n      this.destroy(new Error('Invalid message received'))\n      return\n    }\n\n    const plain = message.subarray(1, message.byteLength - ABYTES + 1)\n\n    try {\n      this._decrypt.next(message, plain)\n    } catch (err) {\n      this.destroy(err)\n      return\n    }\n\n    // If keep alive is selective, eat the empty buffers (ie assume the other side has it enabled also)\n    if (plain.byteLength === 0 && this._keepAliveMs !== 0) return\n\n    if (this.push(plain) === false) {\n      this.rawStream.pause()\n    }\n  }\n\n  _onhandshakert (h) {\n    if (this._handshakeDone === null) return\n\n    if (h !== null) {\n      if (h.data) this._rawStream.write(h.data)\n      if (!h.tx) return\n    }\n\n    const done = this._handshakeDone\n    const publicKey = this._handshake.keyPair.publicKey\n\n    this._handshakeDone = null\n    this._handshake = null\n\n    if (h === null) return done(new Error('Noise handshake failed'))\n\n    this._setupSecretStream(h.tx, h.rx, h.hash, publicKey, h.remotePublicKey)\n    this._resolveOpened(true)\n    done(null)\n  }\n\n  _setupSecretStream (tx, rx, handshakeHash, publicKey, remotePublicKey) {\n    const buf = b4a.allocUnsafe(3 + IDHEADERBYTES)\n    writeUint24le(IDHEADERBYTES, buf)\n\n    this._encrypt = new Push(tx.subarray(0, KEYBYTES), undefined, buf.subarray(3 + 32))\n    this._decrypt = new Pull(rx.subarray(0, KEYBYTES))\n\n    this.publicKey = publicKey\n    this.remotePublicKey = remotePublicKey\n    this.handshakeHash = handshakeHash\n\n    const id = buf.subarray(3, 3 + 32)\n    streamId(handshakeHash, this.isInitiator, id)\n\n    this.emit('handshake')\n    // if rawStream is a bridge, also emit it there\n    if (this.rawStream !== this._rawStream) this.rawStream.emit('handshake')\n\n    if (this.destroying) return\n\n    this._rawStream.write(buf)\n  }\n\n  _open (cb) {\n    // no autostart or no handshake yet\n    if (this._rawStream === null || (this._handshake === null && this._encrypt === null)) {\n      this._startDone = cb\n      return\n    }\n\n    this._rawStream.on('data', this._onrawdata.bind(this))\n    this._rawStream.on('end', this._onrawend.bind(this))\n    this._rawStream.on('drain', this._onrawdrain.bind(this))\n\n    if (this._encrypt !== null) {\n      this._resolveOpened(true)\n      return cb(null)\n    }\n\n    this._handshakeDone = cb\n\n    if (this.isInitiator) this._onhandshakert(this._handshake.send())\n  }\n\n  _predestroy () {\n    if (this.rawStream) {\n      const error = getStreamError(this)\n      this.rawStream.destroy(error)\n    }\n\n    if (this._startDone !== null) {\n      const done = this._startDone\n      this._startDone = null\n      done(new Error('Stream destroyed'))\n    }\n\n    if (this._handshakeDone !== null) {\n      const done = this._handshakeDone\n      this._handshakeDone = null\n      done(new Error('Stream destroyed'))\n    }\n\n    if (this._drainDone !== null) {\n      const done = this._drainDone\n      this._drainDone = null\n      done(new Error('Stream destroyed'))\n    }\n  }\n\n  _write (data, cb) {\n    let wrapped = this._outgoingWrapped\n\n    if (data !== this._outgoingPlain) {\n      wrapped = b4a.allocUnsafe(data.byteLength + 3 + ABYTES)\n      wrapped.set(data, 4)\n    } else {\n      this._outgoingWrapped = this._outgoingPlain = null\n    }\n\n    writeUint24le(wrapped.byteLength - 3, wrapped)\n    // offset 4 so we can do it in-place\n    this._encrypt.next(wrapped.subarray(4, 4 + data.byteLength), wrapped.subarray(3))\n\n    if (this._keepAlive !== null) this._keepAlive.refresh()\n\n    if (this._rawStream.write(wrapped) === false) {\n      this._drainDone = cb\n    } else {\n      cb(null)\n    }\n  }\n\n  _final (cb) {\n    this._clearKeepAlive()\n    this._ended--\n    this._rawStream.end()\n    cb(null)\n  }\n\n  _resolveOpened (val) {\n    if (this._openedDone !== null) {\n      const opened = this._openedDone\n      this._openedDone = null\n      opened(val)\n      if (val) this.emit('connect')\n    }\n  }\n\n  _clearTimeout () {\n    if (this._timeout === null) return\n    this._timeout.destroy()\n    this._timeout = null\n    this._timeoutMs = 0\n  }\n\n  _clearKeepAlive () {\n    if (this._keepAlive === null) return\n    this._keepAlive.destroy()\n    this._keepAlive = null\n    this._keepAliveMs = 0\n  }\n\n  _destroy (cb) {\n    this._clearKeepAlive()\n    this._clearTimeout()\n    this._resolveOpened(false)\n    cb(null)\n  }\n\n  alloc (len) {\n    const buf = b4a.allocUnsafe(len + 3 + ABYTES)\n    this._outgoingWrapped = buf\n    this._outgoingPlain = buf.subarray(4, buf.byteLength - ABYTES + 1)\n    return this._outgoingPlain\n  }\n}\n\nfunction writeUint24le (n, buf) {\n  buf[0] = (n & 255)\n  buf[1] = (n >>> 8) & 255\n  buf[2] = (n >>> 16) & 255\n}\n\nfunction streamId (handshakeHash, isInitiator, out = b4a.allocUnsafe(32)) {\n  sodium.crypto_generichash(out, isInitiator ? NS_INITIATOR : NS_RESPONDER, handshakeHash)\n  return out\n}\n\nfunction toBuffer (data) {\n  return typeof data === 'string' ? b4a.from(data) : data\n}\n\nfunction destroyTimeout () {\n  this.destroy(new Error('Stream timed out'))\n}\n\nfunction sendKeepAlive () {\n  const empty = this.alloc(0)\n  this.write(empty)\n}\n","const { Duplex } = require('streamx')\n\nclass ReversePassThrough extends Duplex {\n  constructor (s) {\n    super()\n    this._stream = s\n    this._ondrain = null\n  }\n\n  _write (data, cb) {\n    if (this._stream.push(data) === false) {\n      this._stream._ondrain = cb\n    } else {\n      cb(null)\n    }\n  }\n\n  _final (cb) {\n    this._stream.push(null)\n    cb(null)\n  }\n\n  _read (cb) {\n    const ondrain = this._ondrain\n    this._ondrain = null\n    if (ondrain) ondrain()\n    cb(null)\n  }\n}\n\nmodule.exports = class Bridge extends Duplex {\n  constructor (noiseStream) {\n    super()\n\n    this.noiseStream = noiseStream\n\n    this._ondrain = null\n    this.reverse = new ReversePassThrough(this)\n  }\n\n  get publicKey () {\n    return this.noiseStream.publicKey\n  }\n\n  get remotePublicKey () {\n    return this.noiseStream.remotePublicKey\n  }\n\n  get handshakeHash () {\n    return this.noiseStream.handshakeHash\n  }\n\n  _read (cb) {\n    const ondrain = this._ondrain\n    this._ondrain = null\n    if (ondrain) ondrain()\n    cb(null)\n  }\n\n  _write (data, cb) {\n    if (this.reverse.push(data) === false) {\n      this.reverse._ondrain = cb\n    } else {\n      cb(null)\n    }\n  }\n\n  _final (cb) {\n    this.reverse.push(null)\n    cb(null)\n  }\n}\n","const sodium = require('sodium-universal')\nconst curve = require('noise-curve-ed')\nconst Noise = require('noise-handshake')\nconst b4a = require('b4a')\n\nconst EMPTY = b4a.alloc(0)\n\nmodule.exports = class Handshake {\n  constructor (isInitiator, keyPair, remotePublicKey, pattern) {\n    this.isInitiator = isInitiator\n    this.keyPair = keyPair\n    this.noise = new Noise(pattern, isInitiator, keyPair, { curve })\n    this.noise.initialise(EMPTY, remotePublicKey)\n    this.destroyed = false\n  }\n\n  static keyPair (seed) {\n    const publicKey = b4a.alloc(32)\n    const secretKey = b4a.alloc(64)\n    if (seed) sodium.crypto_sign_seed_keypair(publicKey, secretKey, seed)\n    else sodium.crypto_sign_keypair(publicKey, secretKey)\n    return { publicKey, secretKey }\n  }\n\n  recv (data) {\n    try {\n      this.noise.recv(data)\n      if (this.noise.complete) return this._return(null)\n      return this.send()\n    } catch {\n      this.destroy()\n      return null\n    }\n  }\n\n  // note that the data returned here is framed so we don't have to do an extra copy\n  // when sending it...\n  send () {\n    try {\n      const data = this.noise.send()\n      const wrap = b4a.allocUnsafe(data.byteLength + 3)\n\n      writeUint24le(data.byteLength, wrap)\n      wrap.set(data, 3)\n\n      return this._return(wrap)\n    } catch {\n      this.destroy()\n      return null\n    }\n  }\n\n  destroy () {\n    if (this.destroyed) return\n    this.destroyed = true\n  }\n\n  _return (data) {\n    const tx = this.noise.complete ? b4a.toBuffer(this.noise.tx) : null\n    const rx = this.noise.complete ? b4a.toBuffer(this.noise.rx) : null\n    const hash = this.noise.complete ? b4a.toBuffer(this.noise.hash) : null\n    const remotePublicKey = this.noise.complete ? b4a.toBuffer(this.noise.rs) : null\n\n    return {\n      data,\n      remotePublicKey,\n      hash,\n      tx,\n      rx\n    }\n  }\n}\n\nfunction writeUint24le (n, buf) {\n  buf[0] = (n & 255)\n  buf[1] = (n >>> 8) & 255\n  buf[2] = (n >>> 16) & 255\n}\n","const ascii = require('./lib/ascii')\nconst base64 = require('./lib/base64')\nconst hex = require('./lib/hex')\nconst utf8 = require('./lib/utf8')\nconst utf16le = require('./lib/utf16le')\n\nconst LE = new Uint8Array(Uint16Array.of(0xff).buffer)[0] === 0xff\n\nfunction codecFor (encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return ascii\n    case 'base64':\n      return base64\n    case 'hex':\n      return hex\n    case 'utf8':\n    case 'utf-8':\n    case undefined:\n      return utf8\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return utf16le\n    default:\n      throw new Error(`Unknown encoding: ${encoding}`)\n  }\n}\n\nfunction isBuffer (value) {\n  return value instanceof Uint8Array\n}\n\nfunction isEncoding (encoding) {\n  try {\n    codecFor(encoding)\n    return true\n  } catch {\n    return false\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  const buffer = new Uint8Array(size)\n  if (fill !== undefined) exports.fill(buffer, fill, 0, buffer.byteLength, encoding)\n  return buffer\n}\n\nfunction allocUnsafe (size) {\n  return new Uint8Array(size)\n}\n\nfunction allocUnsafeSlow (size) {\n  return new Uint8Array(size)\n}\n\nfunction byteLength (string, encoding) {\n  return codecFor(encoding).byteLength(string)\n}\n\nfunction compare (a, b) {\n  if (a === b) return 0\n\n  const len = Math.min(a.byteLength, b.byteLength)\n\n  a = new DataView(a.buffer, a.byteOffset, a.byteLength)\n  b = new DataView(b.buffer, b.byteOffset, b.byteLength)\n\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    const x = a.getUint32(i, LE)\n    const y = b.getUint32(i, LE)\n    if (x !== y) break\n  }\n\n  for (; i < len; i++) {\n    const x = a.getUint8(i)\n    const y = b.getUint8(i)\n    if (x < y) return -1\n    if (x > y) return 1\n  }\n\n  return a.byteLength > b.byteLength ? 1 : a.byteLength < b.byteLength ? -1 : 0\n}\n\nfunction concat (buffers, totalLength) {\n  if (totalLength === undefined) {\n    totalLength = buffers.reduce((len, buffer) => len + buffer.byteLength, 0)\n  }\n\n  const result = new Uint8Array(totalLength)\n\n  buffers.reduce(\n    (offset, buffer) => {\n      result.set(buffer, offset)\n      return offset + buffer.byteLength\n    },\n    0\n  )\n\n  return result\n}\n\nfunction copy (source, target, targetStart = 0, start = 0, end = source.byteLength) {\n  if (end > 0 && end < start) return 0\n  if (end === start) return 0\n  if (source.byteLength === 0 || target.byteLength === 0) return 0\n\n  if (targetStart < 0) throw new RangeError('targetStart is out of range')\n  if (start < 0 || start >= source.byteLength) throw new RangeError('sourceStart is out of range')\n  if (end < 0) throw new RangeError('sourceEnd is out of range')\n\n  if (targetStart >= target.byteLength) targetStart = target.byteLength\n  if (end > source.byteLength) end = source.byteLength\n  if (target.byteLength - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (source === target) {\n    target.copyWithin(targetStart, start, end)\n  } else {\n    target.set(source.subarray(start, end), targetStart)\n  }\n\n  return len\n}\n\nfunction equals (a, b) {\n  if (a === b) return true\n  if (a.byteLength !== b.byteLength) return false\n\n  const len = a.byteLength\n\n  a = new DataView(a.buffer, a.byteOffset, a.byteLength)\n  b = new DataView(b.buffer, b.byteOffset, b.byteLength)\n\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    if (a.getUint32(i, LE) !== b.getUint32(i, LE)) return false\n  }\n\n  for (; i < len; i++) {\n    if (a.getUint8(i) !== b.getUint8(i)) return false\n  }\n\n  return true\n}\n\nfunction fill (buffer, value, offset, end, encoding) {\n  if (typeof value === 'string') {\n    // fill(buffer, string, encoding)\n    if (typeof offset === 'string') {\n      encoding = offset\n      offset = 0\n      end = buffer.byteLength\n\n    // fill(buffer, string, offset, encoding)\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = buffer.byteLength\n    }\n  } else if (typeof value === 'number') {\n    value = value & 0xff\n  } else if (typeof value === 'boolean') {\n    value = +value\n  }\n\n  if (offset < 0 || buffer.byteLength < offset || buffer.byteLength < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (offset === undefined) offset = 0\n  if (end === undefined) end = buffer.byteLength\n\n  if (end <= offset) return buffer\n\n  if (!value) value = 0\n\n  if (typeof value === 'number') {\n    for (let i = offset; i < end; ++i) {\n      buffer[i] = value\n    }\n  } else {\n    value = isBuffer(value) ? value : from(value, encoding)\n\n    const len = value.byteLength\n\n    for (let i = 0; i < end - offset; ++i) {\n      buffer[i + offset] = value[i % len]\n    }\n  }\n\n  return buffer\n}\n\nfunction from (value, encodingOrOffset, length) {\n  // from(string, encoding)\n  if (typeof value === 'string') return fromString(value, encodingOrOffset)\n\n  // from(array)\n  if (Array.isArray(value)) return fromArray(value)\n\n  // from(buffer)\n  if (ArrayBuffer.isView(value)) return fromBuffer(value)\n\n  // from(arrayBuffer[, byteOffset[, length]])\n  return fromArrayBuffer(value, encodingOrOffset, length)\n}\n\nfunction fromString (string, encoding) {\n  const codec = codecFor(encoding)\n  const buffer = new Uint8Array(codec.byteLength(string))\n  codec.write(buffer, string, 0, buffer.byteLength)\n  return buffer\n}\n\nfunction fromArray (array) {\n  const buffer = new Uint8Array(array.length)\n  buffer.set(array)\n  return buffer\n}\n\nfunction fromBuffer (buffer) {\n  const copy = new Uint8Array(buffer.byteLength)\n  copy.set(buffer)\n  return copy\n}\n\nfunction fromArrayBuffer (arrayBuffer, byteOffset, length) {\n  return new Uint8Array(arrayBuffer, byteOffset, length)\n}\n\nfunction includes (buffer, value, byteOffset, encoding) {\n  return indexOf(buffer, value, byteOffset, encoding) !== -1\n}\n\nfunction bidirectionalIndexOf (buffer, value, byteOffset, encoding, first) {\n  if (buffer.byteLength === 0) return -1\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset === undefined) {\n    byteOffset = first ? 0 : (buffer.length - 1)\n  } else if (byteOffset < 0) {\n    byteOffset += buffer.byteLength\n  }\n\n  if (byteOffset >= buffer.byteLength) {\n    if (first) return -1\n    else byteOffset = buffer.byteLength - 1\n  } else if (byteOffset < 0) {\n    if (first) byteOffset = 0\n    else return -1\n  }\n\n  if (typeof value === 'string') {\n    value = from(value, encoding)\n  } else if (typeof value === 'number') {\n    value = value & 0xff\n\n    if (first) {\n      return buffer.indexOf(value, byteOffset)\n    } else {\n      return buffer.lastIndexOf(value, byteOffset)\n    }\n  }\n\n  if (value.byteLength === 0) return -1\n\n  if (first) {\n    let foundIndex = -1\n\n    for (let i = byteOffset; i < buffer.byteLength; i++) {\n      if (buffer[i] === value[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === value.byteLength) return foundIndex\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + value.byteLength > buffer.byteLength) {\n      byteOffset = buffer.byteLength - value.byteLength\n    }\n\n    for (let i = byteOffset; i >= 0; i--) {\n      let found = true\n\n      for (let j = 0; j < value.byteLength; j++) {\n        if (buffer[i + j] !== value[j]) {\n          found = false\n          break\n        }\n      }\n\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nfunction indexOf (buffer, value, byteOffset, encoding) {\n  return bidirectionalIndexOf(buffer, value, byteOffset, encoding, true /* first */)\n}\n\nfunction lastIndexOf (buffer, value, byteOffset, encoding) {\n  return bidirectionalIndexOf(buffer, value, byteOffset, encoding, false /* last */)\n}\n\nfunction swap (buffer, n, m) {\n  const i = buffer[n]\n  buffer[n] = buffer[m]\n  buffer[m] = i\n}\n\nfunction swap16 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits')\n\n  for (let i = 0; i < len; i += 2) swap(buffer, i, i + 1)\n\n  return buffer\n}\n\nfunction swap32 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits')\n\n  for (let i = 0; i < len; i += 4) {\n    swap(buffer, i, i + 3)\n    swap(buffer, i + 1, i + 2)\n  }\n\n  return buffer\n}\n\nfunction swap64 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits')\n\n  for (let i = 0; i < len; i += 8) {\n    swap(buffer, i, i + 7)\n    swap(buffer, i + 1, i + 6)\n    swap(buffer, i + 2, i + 5)\n    swap(buffer, i + 3, i + 4)\n  }\n\n  return buffer\n}\n\nfunction toBuffer (buffer) {\n  return buffer\n}\n\nfunction toString (buffer, encoding, start = 0, end = buffer.byteLength) {\n  const len = buffer.byteLength\n\n  if (start >= len) return ''\n  if (end <= start) return ''\n  if (start < 0) start = 0\n  if (end > len) end = len\n\n  if (start !== 0 || end < len) buffer = buffer.subarray(start, end)\n\n  return codecFor(encoding).toString(buffer)\n}\n\nfunction write (buffer, string, offset, length, encoding) {\n  // write(buffer, string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n\n  // write(buffer, string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n\n  // write(buffer, string, offset, encoding)\n  } else if (encoding === undefined && typeof length === 'string') {\n    encoding = length\n    length = undefined\n  }\n\n  return codecFor(encoding).write(buffer, string, offset, length)\n}\n\nfunction writeDoubleLE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat64(offset, value, true)\n\n  return offset + 8\n}\n\nfunction writeFloatLE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction writeUInt32LE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setUint32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction writeInt32LE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setInt32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction readDoubleLE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat64(offset, true)\n}\n\nfunction readFloatLE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat32(offset, true)\n}\n\nfunction readUInt32LE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getUint32(offset, true)\n}\n\nfunction readInt32LE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getInt32(offset, true)\n}\n\nmodule.exports = exports = {\n  isBuffer,\n  isEncoding,\n  alloc,\n  allocUnsafe,\n  allocUnsafeSlow,\n  byteLength,\n  compare,\n  concat,\n  copy,\n  equals,\n  fill,\n  from,\n  includes,\n  indexOf,\n  lastIndexOf,\n  swap16,\n  swap32,\n  swap64,\n  toBuffer,\n  toString,\n  write,\n  writeDoubleLE,\n  writeFloatLE,\n  writeUInt32LE,\n  writeInt32LE,\n  readDoubleLE,\n  readFloatLE,\n  readUInt32LE,\n  readInt32LE\n}\n","function byteLength (string) {\n  return string.length\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buffer[i])\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    buffer[offset + i] = string.charCodeAt(i)\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n","const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nconst codes = new Uint8Array(256)\n\nfor (let i = 0; i < alphabet.length; i++) {\n  codes[alphabet.charCodeAt(i)] = i\n}\n\ncodes[/* - */ 0x2d] = 62\ncodes[/* _ */ 0x5f] = 63\n\nfunction byteLength (string) {\n  let len = string.length\n\n  if (string.charCodeAt(len - 1) === 0x3d) len--\n  if (len > 1 && string.charCodeAt(len - 1) === 0x3d) len--\n\n  return (len * 3) >>> 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i += 3) {\n    result += (\n      alphabet[buffer[i] >> 2] +\n      alphabet[((buffer[i] & 3) << 4) | (buffer[i + 1] >> 4)] +\n      alphabet[((buffer[i + 1] & 15) << 2) | (buffer[i + 2] >> 6)] +\n      alphabet[buffer[i + 2] & 63]\n    )\n  }\n\n  if (len % 3 === 2) {\n    result = result.substring(0, result.length - 1) + '='\n  } else if (len % 3 === 1) {\n    result = result.substring(0, result.length - 2) + '=='\n  }\n\n  return result\n};\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0, j = 0; j < len; i += 4) {\n    const a = codes[string.charCodeAt(i)]\n    const b = codes[string.charCodeAt(i + 1)]\n    const c = codes[string.charCodeAt(i + 2)]\n    const d = codes[string.charCodeAt(i + 3)]\n\n    buffer[j++] = (a << 2) | (b >> 4)\n    buffer[j++] = ((b & 15) << 4) | (c >> 2)\n    buffer[j++] = ((c & 3) << 6) | (d & 63)\n  }\n\n  return len\n};\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n","function byteLength (string) {\n  return string.length >>> 1\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  buffer = new DataView(buffer.buffer, buffer.byteOffset, len)\n\n  let result = ''\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    result += buffer.getUint32(i).toString(16).padStart(8, '0')\n  }\n\n  for (; i < len; i++) {\n    result += buffer.getUint8(i).toString(16).padStart(2, '0')\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    const a = hexValue(string.charCodeAt(i * 2))\n    const b = hexValue(string.charCodeAt(i * 2 + 1))\n\n    if (a === undefined || b === undefined) {\n      return buffer.subarray(0, i)\n    }\n\n    buffer[offset + i] = (a << 4) | b\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n\nfunction hexValue (char) {\n  if (char >= 0x30 && char <= 0x39) return char - 0x30\n  if (char >= 0x41 && char <= 0x46) return char - 0x41 + 10\n  if (char >= 0x61 && char <= 0x66) return char - 0x61 + 10\n}\n","function byteLength (string) {\n  return string.length * 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len - 1; i += 2) {\n    result += String.fromCharCode(buffer[i] + (buffer[i + 1] * 256))\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  let units = len\n\n  for (let i = 0; i < string.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    const c = string.charCodeAt(i)\n    const hi = c >> 8\n    const lo = c % 256\n\n    buffer[offset + i * 2] = lo\n    buffer[offset + i * 2 + 1] = hi\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n","function byteLength (string) {\n  let length = 0\n\n  for (let i = 0, n = string.length; i < n; i++) {\n    const code = string.charCodeAt(i)\n\n    if (code >= 0xd800 && code <= 0xdbff && i + 1 < n) {\n      const code = string.charCodeAt(i + 1)\n\n      if (code >= 0xdc00 && code <= 0xdfff) {\n        length += 4\n        i++\n        continue\n      }\n    }\n\n    if (code <= 0x7f) length += 1\n    else if (code <= 0x7ff) length += 2\n    else length += 3\n  }\n\n  return length\n}\n\nlet toString\n\nif (typeof TextDecoder !== 'undefined') {\n  const decoder = new TextDecoder()\n\n  toString = function toString (buffer) {\n    return decoder.decode(buffer)\n  }\n} else {\n  toString = function toString (buffer) {\n    const len = buffer.byteLength\n\n    let output = ''\n    let i = 0\n\n    while (i < len) {\n      let byte = buffer[i]\n\n      if (byte <= 0x7f) {\n        output += String.fromCharCode(byte)\n        i++\n        continue\n      }\n\n      let bytesNeeded = 0\n      let codePoint = 0\n\n      if (byte <= 0xdf) {\n        bytesNeeded = 1\n        codePoint = byte & 0x1f\n      } else if (byte <= 0xef) {\n        bytesNeeded = 2\n        codePoint = byte & 0x0f\n      } else if (byte <= 0xf4) {\n        bytesNeeded = 3\n        codePoint = byte & 0x07\n      }\n\n      if (len - i - bytesNeeded > 0) {\n        let k = 0\n\n        while (k < bytesNeeded) {\n          byte = buffer[i + k + 1]\n          codePoint = (codePoint << 6) | (byte & 0x3f)\n          k += 1\n        }\n      } else {\n        codePoint = 0xfffd\n        bytesNeeded = len - i\n      }\n\n      output += String.fromCodePoint(codePoint)\n      i += bytesNeeded + 1\n    }\n\n    return output\n  }\n}\n\nlet write\n\nif (typeof TextEncoder !== 'undefined') {\n  const encoder = new TextEncoder()\n\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n    encoder.encodeInto(string, buffer.subarray(offset, offset + len))\n    return len\n  }\n} else {\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n\n    buffer = buffer.subarray(offset, offset + len)\n\n    let i = 0\n    let j = 0\n\n    while (i < string.length) {\n      const code = string.codePointAt(i)\n\n      if (code <= 0x7f) {\n        buffer[j++] = code\n        i++\n        continue\n      }\n\n      let count = 0\n      let bits = 0\n\n      if (code <= 0x7ff) {\n        count = 6\n        bits = 0xc0\n      } else if (code <= 0xffff) {\n        count = 12\n        bits = 0xe0\n      } else if (code <= 0x1fffff) {\n        count = 18\n        bits = 0xf0\n      }\n\n      buffer[j++] = bits | (code >> count)\n      count -= 6\n\n      while (count >= 0) {\n        buffer[j++] = 0x80 | ((code >> count) & 0x3f)\n        count -= 6\n      }\n\n      i += code >= 0x10000 ? 2 : 1\n    }\n\n    return len\n  }\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n","/**\n * @file Access control model.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\n/**\n * Helper class for handling access mode.\n *\n * @class AccessMode\n * @memberof Tinode\n *\n * @param {AccessMode|Object=} acs - AccessMode to copy or access mode object received from the server.\n */\nexport default class AccessMode {\n  constructor(acs) {\n    if (acs) {\n      this.given = typeof acs.given == 'number' ? acs.given : AccessMode.decode(acs.given);\n      this.want = typeof acs.want == 'number' ? acs.want : AccessMode.decode(acs.want);\n      this.mode = acs.mode ? (typeof acs.mode == 'number' ? acs.mode : AccessMode.decode(acs.mode)) :\n        (this.given & this.want);\n    }\n  }\n\n  static #checkFlag(val, side, flag) {\n    side = side || 'mode';\n    if (['given', 'want', 'mode'].includes(side)) {\n      return ((val[side] & flag) != 0);\n    }\n    throw new Error(`Invalid AccessMode component '${side}'`);\n  }\n  /**\n   * Parse string into an access mode value.\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {string | Number} mode - either a String representation of the access mode to parse or a set of bits to assign.\n   * @returns {number} - Access mode as a numeric value.\n   */\n  static decode(str) {\n    if (!str) {\n      return null;\n    } else if (typeof str == 'number') {\n      return str & AccessMode._BITMASK;\n    } else if (str === 'N' || str === 'n') {\n      return AccessMode._NONE;\n    }\n\n    const bitmask = {\n      'J': AccessMode._JOIN,\n      'R': AccessMode._READ,\n      'W': AccessMode._WRITE,\n      'P': AccessMode._PRES,\n      'A': AccessMode._APPROVE,\n      'S': AccessMode._SHARE,\n      'D': AccessMode._DELETE,\n      'O': AccessMode._OWNER\n    };\n\n    let m0 = AccessMode._NONE;\n\n    for (let i = 0; i < str.length; i++) {\n      const bit = bitmask[str.charAt(i).toUpperCase()];\n      if (!bit) {\n        // Unrecognized bit, skip.\n        continue;\n      }\n      m0 |= bit;\n    }\n    return m0;\n  }\n  /**\n   * Convert numeric representation of the access mode into a string.\n   *\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {number} val - access mode value to convert to a string.\n   * @returns {string} - Access mode as a string.\n   */\n  static encode(val) {\n    if (val === null || val === AccessMode._INVALID) {\n      return null;\n    } else if (val === AccessMode._NONE) {\n      return 'N';\n    }\n\n    const bitmask = ['J', 'R', 'W', 'P', 'A', 'S', 'D', 'O'];\n    let res = '';\n    for (let i = 0; i < bitmask.length; i++) {\n      if ((val & (1 << i)) != 0) {\n        res = res + bitmask[i];\n      }\n    }\n    return res;\n  }\n  /**\n   * Update numeric representation of access mode with the new value. The value\n   * is one of the following:\n   *  - a string starting with <code>'+'</code> or <code>'-'</code> then the bits to add or remove, e.g. <code>'+R-W'</code> or <code>'-PS'</code>.\n   *  - a new value of access mode\n   *\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {number} val - access mode value to update.\n   * @param {string} upd - update to apply to val.\n   * @returns {number} - updated access mode.\n   */\n  static update(val, upd) {\n    if (!upd || typeof upd != 'string') {\n      return val;\n    }\n\n    let action = upd.charAt(0);\n    if (action == '+' || action == '-') {\n      let val0 = val;\n      // Split delta-string like '+ABC-DEF+Z' into an array of parts including + and -.\n      const parts = upd.split(/([-+])/);\n      // Starting iteration from 1 because String.split() creates an array with the first empty element.\n      // Iterating by 2 because we parse pairs +/- then data.\n      for (let i = 1; i < parts.length - 1; i += 2) {\n        action = parts[i];\n        const m0 = AccessMode.decode(parts[i + 1]);\n        if (m0 == AccessMode._INVALID) {\n          return val;\n        }\n        if (m0 == null) {\n          continue;\n        }\n        if (action === '+') {\n          val0 |= m0;\n        } else if (action === '-') {\n          val0 &= ~m0;\n        }\n      }\n      val = val0;\n    } else {\n      // The string is an explicit new value 'ABC' rather than delta.\n      const val0 = AccessMode.decode(upd);\n      if (val0 != AccessMode._INVALID) {\n        val = val0;\n      }\n    }\n\n    return val;\n  }\n  /**\n   * Bits present in a1 but missing in a2.\n   *\n   * @static\n   * @memberof Tinode\n   *\n   * @param {number | string} a1 - access mode to subtract from.\n   * @param {number | string} a2 - access mode to subtract.\n   * @returns {number} access mode with bits present in <code>a1</code> but missing in <code>a2</code>.\n   */\n  static diff(a1, a2) {\n    a1 = AccessMode.decode(a1);\n    a2 = AccessMode.decode(a2);\n\n    if (a1 == AccessMode._INVALID || a2 == AccessMode._INVALID) {\n      return AccessMode._INVALID;\n    }\n    return a1 & ~a2;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Custom formatter\n   */\n  toString() {\n    return '{\"mode\": \"' + AccessMode.encode(this.mode) +\n      '\", \"given\": \"' + AccessMode.encode(this.given) +\n      '\", \"want\": \"' + AccessMode.encode(this.want) + '\"}';\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Converts numeric values to strings.\n   */\n  jsonHelper() {\n    return {\n      mode: AccessMode.encode(this.mode),\n      given: AccessMode.encode(this.given),\n      want: AccessMode.encode(this.want)\n    };\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign value to 'mode'.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} m - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setMode(m) {\n    this.mode = AccessMode.decode(m);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update <code>mode</code> value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateMode(u) {\n    this.mode = AccessMode.update(this.mode, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get <code>mode</code> value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <code>mode</code> value.\n   */\n  getMode() {\n    return AccessMode.encode(this.mode);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign <code>given</code>  value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} g - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setGiven(g) {\n    this.given = AccessMode.decode(g);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'given' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateGiven(u) {\n    this.given = AccessMode.update(this.given, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get 'given' value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <b>given</b> value.\n   */\n  getGiven() {\n    return AccessMode.encode(this.given);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign 'want' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} w - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setWant(w) {\n    this.want = AccessMode.decode(w);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'want' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateWant(u) {\n    this.want = AccessMode.update(this.want, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get 'want' value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <b>want</b> value.\n   */\n  getWant() {\n    return AccessMode.encode(this.want);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get permissions present in 'want' but missing in 'given'.\n   * Inverse of {@link Tinode.AccessMode#getExcessive}\n   *\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} permissions present in <b>want</b> but missing in <b>given</b>.\n   */\n  getMissing() {\n    return AccessMode.encode(this.want & ~this.given);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get permissions present in 'given' but missing in 'want'.\n   * Inverse of {@link Tinode.AccessMode#getMissing}\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} permissions present in <b>given</b> but missing in <b>want</b>.\n   */\n  getExcessive() {\n    return AccessMode.encode(this.given & ~this.want);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'want', 'give', and 'mode' values.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {AccessMode} val - new access mode value.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateAll(val) {\n    if (val) {\n      this.updateGiven(val.given);\n      this.updateWant(val.want);\n      this.mode = this.given & this.want;\n    }\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Owner (O) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isOwner(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._OWNER);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Presence (P) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isPresencer(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._PRES);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Presence (P) flag is NOT set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isMuted(side) {\n    return !this.isPresencer(side);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Join (J) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isJoiner(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._JOIN);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Reader (R) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isReader(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._READ);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Writer (W) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isWriter(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._WRITE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Approver (A) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isApprover(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._APPROVE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if either one of Owner (O) or Approver (A) flags is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isAdmin(side) {\n    return this.isOwner(side) || this.isApprover(side);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if either one of Owner (O), Approver (A), or Sharer (S) flags is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isSharer(side) {\n    return this.isAdmin(side) || AccessMode.#checkFlag(this, side, AccessMode._SHARE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Deleter (D) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isDeleter(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._DELETE);\n  }\n}\n\nAccessMode._NONE = 0x00;\nAccessMode._JOIN = 0x01;\nAccessMode._READ = 0x02;\nAccessMode._WRITE = 0x04;\nAccessMode._PRES = 0x08;\nAccessMode._APPROVE = 0x10;\nAccessMode._SHARE = 0x20;\nAccessMode._DELETE = 0x40;\nAccessMode._OWNER = 0x80;\n\nAccessMode._BITMASK = AccessMode._JOIN | AccessMode._READ | AccessMode._WRITE | AccessMode._PRES |\n  AccessMode._APPROVE | AccessMode._SHARE | AccessMode._DELETE | AccessMode._OWNER;\nAccessMode._INVALID = 0x100000;\n","/**\n * @file In-memory sorted cache of objects.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n/**\n * In-memory sorted cache of objects.\n *\n * @class CBuffer\n * @memberof Tinode\n * @protected\n *\n * @param {function} compare custom comparator of objects. Takes two parameters <code>a</code> and <code>b</code>;\n *    returns <code>-1</code> if <code>a < b</code>, <code>0</code> if <code>a == b</code>, <code>1</code> otherwise.\n * @param {boolean} unique enforce element uniqueness: when <code>true</code> replace existing element with a new\n *    one on conflict; when <code>false</code> keep both elements.\n */\nexport default class CBuffer {\n  #comparator = undefined;\n  #unique = false;\n  buffer = [];\n\n  constructor(compare_, unique_) {\n    this.#comparator = compare_ || ((a, b) => {\n      return a === b ? 0 : a < b ? -1 : 1;\n    });\n    this.#unique = unique_;\n  }\n\n  #findNearest(elem, arr, exact) {\n    let start = 0;\n    let end = arr.length - 1;\n    let pivot = 0;\n    let diff = 0;\n    let found = false;\n\n    while (start <= end) {\n      pivot = (start + end) / 2 | 0;\n      diff = this.#comparator(arr[pivot], elem);\n      if (diff < 0) {\n        start = pivot + 1;\n      } else if (diff > 0) {\n        end = pivot - 1;\n      } else {\n        found = true;\n        break;\n      }\n    }\n    if (found) {\n      return {\n        idx: pivot,\n        exact: true\n      };\n    }\n    if (exact) {\n      return {\n        idx: -1\n      };\n    }\n    // Not exact - insertion point\n    return {\n      idx: diff < 0 ? pivot + 1 : pivot\n    };\n  }\n\n  // Insert element into a sorted array.\n  #insertSorted(elem, arr) {\n    const found = this.#findNearest(elem, arr, false);\n    const count = (found.exact && this.#unique) ? 1 : 0;\n    arr.splice(found.idx, count, elem);\n    return arr;\n  }\n\n  /**\n   * Get an element at the given position.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - Position to fetch from.\n   * @returns {Object} Element at the given position or <code>undefined</code>.\n   */\n  getAt(at) {\n    return this.buffer[at];\n  }\n\n  /**\n   * Convenience method for getting the element from the end of the buffer.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - position to fetch from, counting from the end;\n   *    <code>undefined</code> or <code>null</code>  mean \"last\".\n   * @returns {Object} The last element in the buffer or <code>undefined</code> if buffer is empty.\n   */\n  getLast(at) {\n    at |= 0;\n    return this.buffer.length > at ? this.buffer[this.buffer.length - 1 - at] : undefined;\n  }\n\n  /**\n   * Add new element(s) to the buffer. Variadic: takes one or more arguments. If an array is passed as a single\n   * argument, its elements are inserted individually.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {...Object|Array} - One or more objects to insert.\n   */\n  put() {\n    let insert;\n    // inspect arguments: if array, insert its elements, if one or more non-array arguments, insert them one by one\n    if (arguments.length == 1 && Array.isArray(arguments[0])) {\n      insert = arguments[0];\n    } else {\n      insert = arguments;\n    }\n    for (let idx in insert) {\n      this.#insertSorted(insert[idx], this.buffer);\n    }\n  }\n\n  /**\n   * Remove element at the given position.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - Position to delete at.\n   * @returns {Object} Element at the given position or <code>undefined</code>.\n   */\n  delAt(at) {\n    at |= 0;\n    let r = this.buffer.splice(at, 1);\n    if (r && r.length > 0) {\n      return r[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove elements between two positions.\n   * @memberof Tinode.CBuffer#\n   * @param {number} since - Position to delete from (inclusive).\n   * @param {number} before - Position to delete to (exclusive).\n   *\n   * @returns {Array} array of removed elements (could be zero length).\n   */\n  delRange(since, before) {\n    return this.buffer.splice(since, before - since);\n  }\n\n  /**\n   * Return the number of elements the buffer holds.\n   * @memberof Tinode.CBuffer#\n   * @return {number} Number of elements in the buffer.\n   */\n  length() {\n    return this.buffer.length;\n  }\n\n  /**\n   * Reset the buffer discarding all elements\n   * @memberof Tinode.CBuffer#\n   */\n  reset() {\n    this.buffer = [];\n  }\n\n  /**\n   * Callback for iterating contents of buffer. See {@link Tinode.CBuffer#forEach}.\n   * @callback ForEachCallbackType\n   * @memberof Tinode.CBuffer#\n   * @param {Object} elem - Current element of the buffer.\n   * @param {Object} prev - Previous element of the buffer.\n   * @param {Object} next - Next element of the buffer.\n   * @param {number} index - Index of the current element.\n   */\n\n  /**\n   * Apply given <code>callback</code> to all elements of the buffer.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Tinode.ForEachCallbackType} callback - Function to call for each element.\n   * @param {number} startIdx - Optional index to start iterating from (inclusive).\n   * @param {number} beforeIdx - Optional index to stop iterating before (exclusive).\n   * @param {Object} context - calling context (i.e. value of <code>this</code> in callback)\n   */\n  forEach(callback, startIdx, beforeIdx, context) {\n    startIdx = startIdx | 0;\n    beforeIdx = beforeIdx || this.buffer.length;\n    for (let i = startIdx; i < beforeIdx; i++) {\n      callback.call(context, this.buffer[i],\n        (i > startIdx ? this.buffer[i - 1] : undefined),\n        (i < beforeIdx - 1 ? this.buffer[i + 1] : undefined), i);\n    }\n  }\n\n  /**\n   * Find element in buffer using buffer's comparison function.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Object} elem - element to find.\n   * @param {boolean=} nearest - when true and exact match is not found, return the nearest element (insertion point).\n   * @returns {number} index of the element in the buffer or -1.\n   */\n  find(elem, nearest) {\n    const {\n      idx\n    } = this.#findNearest(elem, this.buffer, !nearest);\n    return idx;\n  }\n\n  /**\n   * Callback for filtering the buffer. See {@link Tinode.CBuffer#filter}.\n   * @callback ForEachCallbackType\n   * @memberof Tinode.CBuffer#\n   * @param {Object} elem - Current element of the buffer.\n   * @param {number} index - Index of the current element.\n   * @returns {boolen} <code>true</code> to keep the element, <code>false</code> to remove.\n   */\n\n  /**\n   * Remove all elements that do not pass the test implemented by the provided callback function.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Tinode.FilterCallbackType} callback - Function to call for each element.\n   * @param {Object} context - calling context (i.e. value of <code>this</code> in the callback)\n   */\n  filter(callback, context) {\n    let count = 0;\n    for (let i = 0; i < this.buffer.length; i++) {\n      if (callback.call(context, this.buffer[i], i)) {\n        this.buffer[count] = this.buffer[i];\n        count++;\n      }\n    }\n\n    this.buffer.splice(count);\n  }\n}\n","/**\n * @file Global constants and configuration parameters.\n *\n * @copyright 2015-2022 Tinode LLC\n */\n'use strict';\n\n// import {\n//   version as package_version\n// } from '../version.json';\nconst package_version = '0.19.3'\n// Global constants\nexport const PROTOCOL_VERSION = '0'; // Major component of the version, e.g. '0' in '0.17.1'.\nexport const VERSION = package_version || '0.18';\nexport const LIBRARY = 'tinodejs/' + VERSION;\n\n// Topic name prefixes.\nexport const TOPIC_NEW = 'new';\nexport const TOPIC_NEW_CHAN = 'nch';\nexport const TOPIC_ME = 'me';\nexport const TOPIC_FND = 'fnd';\nexport const TOPIC_SYS = 'sys';\nexport const TOPIC_CHAN = 'chn';\nexport const TOPIC_GRP = 'grp;'\nexport const TOPIC_P2P = 'p2p';\nexport const USER_NEW = 'new';\n\n// Starting value of a locally-generated seqId used for pending messages.\nexport const LOCAL_SEQID = 0xFFFFFFF;\n\n// Status codes.\nexport const MESSAGE_STATUS_NONE = 0; // Status not assigned.\nexport const MESSAGE_STATUS_QUEUED = 1; // Local ID assigned, in progress to be sent.\nexport const MESSAGE_STATUS_SENDING = 2; // Transmission started.\nexport const MESSAGE_STATUS_FAILED = 3; // At least one attempt was made to send the message.\nexport const MESSAGE_STATUS_SENT = 4; // Delivered to the server.\nexport const MESSAGE_STATUS_RECEIVED = 5; // Received by the client.\nexport const MESSAGE_STATUS_READ = 6; // Read by the user.\nexport const MESSAGE_STATUS_TO_ME = 7; // The message is received from another user.\nexport const MESSAGE_STATUS_DEL_RANGE = 8; // The message represents a deleted range.\n\n// Reject unresolved futures after this many milliseconds.\nexport const EXPIRE_PROMISES_TIMEOUT = 5000;\n// Periodicity of garbage collection of unresolved futures.\nexport const EXPIRE_PROMISES_PERIOD = 1000;\n\n// Default number of messages to pull into memory from persistent cache.\nexport const DEFAULT_MESSAGES_PAGE = 24;\n\n// Unicode DEL character indicating data was deleted.\nexport const DEL_CHAR = '\\u2421';\n","/**\n * @file Abstraction layer for websocket and long polling connections.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport {\n  jsonParseHelper\n} from './utils.js';\n\nlet WebSocketProvider;\nlet XHRProvider;\n\n// Error code to return in case of a network problem.\nconst NETWORK_ERROR = 503;\nconst NETWORK_ERROR_TEXT = \"Connection failed\";\n\n// Error code to return when user disconnected from server.\nconst NETWORK_USER = 418;\nconst NETWORK_USER_TEXT = \"Disconnected by client\";\n\n// Settings for exponential backoff\nconst _BOFF_BASE = 2000; // 2000 milliseconds, minimum delay between reconnects\nconst _BOFF_MAX_ITER = 10; // Maximum delay between reconnects 2^10 * 2000 ~ 34 minutes\nconst _BOFF_JITTER = 0.3; // Add random delay\n\n// Helper function for creating an endpoint URL.\nfunction makeBaseUrl(host, protocol, version, apiKey) {\n  let url = null;\n\n  if (['http', 'https', 'ws', 'wss'].includes(protocol)) {\n    url = `${protocol}://${host}`;\n    if (url.charAt(url.length - 1) !== '/') {\n      url += '/';\n    }\n    url += 'v' + version + '/channels';\n    if (['http', 'https'].includes(protocol)) {\n      // Long polling endpoint ends with \"lp\", i.e.\n      // '/v0/channels/lp' vs just '/v0/channels' for ws\n      url += '/lp';\n    }\n    url += '?apikey=' + apiKey;\n  }\n  return url;\n}\n\n/**\n * An abstraction for a websocket or a long polling connection.\n *\n * @class Connection\n * @memberof Tinode\n\n * @param {Object} config - configuration parameters.\n * @param {string} config.host - Host name and optional port number to connect to.\n * @param {string} config.apiKey - API key generated by <code>keygen</code>.\n * @param {string} config.transport - Network transport to use, either <code>\"ws\"<code>/<code>\"wss\"</code> for websocket or\n *      <code>lp</code> for long polling.\n * @param {boolean} config.secure - Use Secure WebSocket if <code>true</code>.\n * @param {string} version_ - Major value of the protocol version, e.g. '0' in '0.17.1'.\n * @param {boolean} autoreconnect_ - If connection is lost, try to reconnect automatically.\n */\nexport default class Connection {\n  // Logger, does nothing by default.\n  static #log = _ => {};\n\n  #boffTimer = null;\n  #boffIteration = 0;\n  #boffClosed = false; // Indicator if the socket was manually closed - don't autoreconnect if true.\n\n  // Websocket.\n  #socket = null;\n\n  host;\n  secure;\n  apiKey;\n\n  version;\n  autoreconnect;\n\n  initialized;\n\n  // (config.host, config.apiKey, config.transport, config.secure), PROTOCOL_VERSION, true\n  constructor(config, version_, autoreconnect_) {\n    this.host = config.host;\n    this.secure = config.secure;\n    this.apiKey = config.apiKey;\n\n    this.version = version_;\n    this.autoreconnect = autoreconnect_;\n\n    if (config.transport === 'lp') {\n      // explicit request to use long polling\n      this.#init_lp();\n      this.initialized = 'lp';\n    } else if (config.transport === 'ws') {\n      // explicit request to use web socket\n      // if websockets are not available, horrible things will happen\n      this.#init_ws();\n      this.initialized = 'ws';\n    }\n\n    if (!this.initialized) {\n      // Invalid or undefined network transport.\n      Connection.#log(\"Unknown or invalid network transport. Running under Node? Call 'Tinode.setNetworkProviders()'.\");\n      throw new Error(\"Unknown or invalid network transport. Running under Node? Call 'Tinode.setNetworkProviders()'.\");\n    }\n  }\n\n  /**\n   * To use Connection in a non browser context, supply WebSocket and XMLHttpRequest providers.\n   * @static\n   * @memberof Connection\n   * @param wsProvider WebSocket provider, e.g. for nodeJS , <code>require('ws')</code>.\n   * @param xhrProvider XMLHttpRequest provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProviders(wsProvider, xhrProvider) {\n    WebSocketProvider = wsProvider;\n    XHRProvider = xhrProvider;\n  }\n\n  /**\n   * Assign a non-default logger.\n   * @static\n   * @memberof Connection\n   * @param {function} l variadic logging function.\n   */\n  static set logger(l) {\n    Connection.#log = l;\n  }\n\n  /**\n   * Initiate a new connection\n   * @memberof Tinode.Connection#\n   * @param {string} host_ Host name to connect to; if <code>null</code> the old host name will be used.\n   * @param {boolean} force Force new connection even if one already exists.\n   * @return {Promise} Promise resolved/rejected when the connection call completes, resolution is called without\n   *  parameters, rejection passes the {Error} as parameter.\n   */\n  connect(host_, force) {\n    return Promise.reject(null);\n  }\n\n  /**\n   * Try to restore a network connection, also reset backoff.\n   * @memberof Tinode.Connection#\n   *\n   * @param {boolean} force - reconnect even if there is a live connection already.\n   */\n  reconnect(force) {}\n\n  /**\n   * Terminate the network connection\n   * @memberof Tinode.Connection#\n   */\n  disconnect() {}\n\n  /**\n   * Send a string to the server.\n   * @memberof Tinode.Connection#\n   *\n   * @param {string} msg - String to send.\n   * @throws Throws an exception if the underlying connection is not live.\n   */\n  sendText(msg) {}\n\n  /**\n   * Check if connection is alive.\n   * @memberof Tinode.Connection#\n   * @returns {boolean} <code>true</code> if connection is live, <code>false</code> otherwise.\n   */\n  isConnected() {\n    return false;\n  }\n\n  /**\n   * Get the name of the current network transport.\n   * @memberof Tinode.Connection#\n   * @returns {string} name of the transport such as <code>\"ws\"</code> or <code>\"lp\"</code>.\n   */\n  transport() {\n    return this.initialized;\n  }\n\n  /**\n   * Send network probe to check if connection is indeed live.\n   * @memberof Tinode.Connection#\n   */\n  probe() {\n    this.sendText('1');\n  }\n\n  /**\n   * Reset autoreconnect counter to zero.\n   * @memberof Tinode.Connection#\n   */\n  backoffReset() {\n    this.#boffReset();\n  }\n\n  // Backoff implementation - reconnect after a timeout.\n  #boffReconnect() {\n    // Clear timer\n    clearTimeout(this.#boffTimer);\n    // Calculate when to fire the reconnect attempt\n    const timeout = _BOFF_BASE * (Math.pow(2, this.#boffIteration) * (1.0 + _BOFF_JITTER * Math.random()));\n    // Update iteration counter for future use\n    this.#boffIteration = (this.#boffIteration >= _BOFF_MAX_ITER ? this.#boffIteration : this.#boffIteration + 1);\n    if (this.onAutoreconnectIteration) {\n      this.onAutoreconnectIteration(timeout);\n    }\n\n    this.#boffTimer = setTimeout(_ => {\n      Connection.#log(`Reconnecting, iter=${this.#boffIteration}, timeout=${timeout}`);\n      // Maybe the socket was closed while we waited for the timer?\n      if (!this.#boffClosed) {\n        const prom = this.connect();\n        if (this.onAutoreconnectIteration) {\n          this.onAutoreconnectIteration(0, prom);\n        } else {\n          // Suppress error if it's not used.\n          prom.catch(() => {\n            /* do nothing */\n          });\n        }\n      } else if (this.onAutoreconnectIteration) {\n        this.onAutoreconnectIteration(-1);\n      }\n    }, timeout);\n  }\n\n  // Terminate auto-reconnect process.\n  #boffStop() {\n    clearTimeout(this.#boffTimer);\n    this.#boffTimer = null;\n  }\n\n  // Reset auto-reconnect iteration counter.\n  #boffReset() {\n    this.#boffIteration = 0;\n  }\n\n  // Initialization for long polling.\n  #init_lp() {\n    const XDR_UNSENT = 0; // Client has been created. open() not called yet.\n    const XDR_OPENED = 1; // open() has been called.\n    const XDR_HEADERS_RECEIVED = 2; // send() has been called, and headers and status are available.\n    const XDR_LOADING = 3; // Downloading; responseText holds partial data.\n    const XDR_DONE = 4; // The operation is complete.\n\n    // Fully composed endpoint URL, with API key & SID\n    let _lpURL = null;\n\n    let _poller = null;\n    let _sender = null;\n\n    let lp_sender = (url_) => {\n      const sender = new XHRProvider();\n      sender.onreadystatechange = (evt) => {\n        if (sender.readyState == XDR_DONE && sender.status >= 400) {\n          // Some sort of error response\n          throw new Error(`LP sender failed, ${sender.status}`);\n        }\n      };\n\n      sender.open('POST', url_, true);\n      return sender;\n    }\n\n    let lp_poller = (url_, resolve, reject) => {\n      let poller = new XHRProvider();\n      let promiseCompleted = false;\n\n      poller.onreadystatechange = (evt) => {\n        if (poller.readyState == XDR_DONE) {\n          if (poller.status == 201) { // 201 == HTTP.Created, get SID\n            let pkt = JSON.parse(poller.responseText, jsonParseHelper);\n            _lpURL = url_ + '&sid=' + pkt.ctrl.params.sid;\n            poller = lp_poller(_lpURL);\n            poller.send(null);\n            if (this.onOpen) {\n              this.onOpen();\n            }\n\n            if (resolve) {\n              promiseCompleted = true;\n              resolve();\n            }\n\n            if (this.autoreconnect) {\n              this.#boffStop();\n            }\n          } else if (poller.status < 400) { // 400 = HTTP.BadRequest\n            if (this.onMessage) {\n              this.onMessage(poller.responseText);\n            }\n            poller = lp_poller(_lpURL);\n            poller.send(null);\n          } else {\n            // Don't throw an error here, gracefully handle server errors\n            if (reject && !promiseCompleted) {\n              promiseCompleted = true;\n              reject(poller.responseText);\n            }\n            if (this.onMessage && poller.responseText) {\n              this.onMessage(poller.responseText);\n            }\n            if (this.onDisconnect) {\n              const code = poller.status || (this.#boffClosed ? NETWORK_USER : NETWORK_ERROR);\n              const text = poller.responseText || (this.#boffClosed ? NETWORK_USER_TEXT : NETWORK_ERROR_TEXT);\n              this.onDisconnect(new Error(text + ' (' + code + ')'), code);\n            }\n\n            // Polling has stopped. Indicate it by setting poller to null.\n            poller = null;\n            if (!this.#boffClosed && this.autoreconnect) {\n              this.#boffReconnect();\n            }\n          }\n        }\n      };\n      // Using POST to avoid caching response by service worker.\n      poller.open('POST', url_, true);\n      return poller;\n    }\n\n    this.connect = (host_, force) => {\n      this.#boffClosed = false;\n\n      if (_poller) {\n        if (!force) {\n          return Promise.resolve();\n        }\n        _poller.onreadystatechange = undefined;\n        _poller.abort();\n        _poller = null;\n      }\n\n      if (host_) {\n        this.host = host_;\n      }\n\n      return new Promise((resolve, reject) => {\n        const url = makeBaseUrl(this.host, this.secure ? 'https' : 'http', this.version, this.apiKey);\n        Connection.#log(\"LP connecting to:\", url);\n        _poller = lp_poller(url, resolve, reject);\n        _poller.send(null);\n      }).catch((err) => {\n        Connection.#log(\"LP connection failed:\", err);\n      });\n    };\n\n    this.reconnect = (force) => {\n      this.#boffStop();\n      this.connect(null, force);\n    };\n\n    this.disconnect = () => {\n      this.#boffClosed = true;\n      this.#boffStop();\n\n      if (_sender) {\n        _sender.onreadystatechange = undefined;\n        _sender.abort();\n        _sender = null;\n      }\n      if (_poller) {\n        _poller.onreadystatechange = undefined;\n        _poller.abort();\n        _poller = null;\n      }\n\n      if (this.onDisconnect) {\n        this.onDisconnect(new Error(NETWORK_USER_TEXT + ' (' + NETWORK_USER + ')'), NETWORK_USER);\n      }\n      // Ensure it's reconstructed\n      _lpURL = null;\n    };\n\n    this.sendText = (msg) => {\n      _sender = lp_sender(_lpURL);\n      if (_sender && (_sender.readyState == XDR_OPENED)) { // 1 == OPENED\n        _sender.send(msg);\n      } else {\n        throw new Error(\"Long poller failed to connect\");\n      }\n    };\n\n    this.isConnected = () => {\n      return (_poller && true);\n    };\n  }\n\n  // Initialization for Websocket\n  #init_ws() {\n    this.connect = (host_, force) => {\n      this.#boffClosed = false;\n\n      if (this.#socket) {\n        if (!force && this.#socket.readyState == this.#socket.OPEN) {\n          return Promise.resolve();\n        }\n        this.#socket.close();\n        this.#socket = null;\n      }\n\n      if (host_) {\n        this.host = host_;\n      }\n\n      return new Promise((resolve, reject) => {\n        const url = makeBaseUrl(this.host, this.secure ? 'wss' : 'ws', this.version, this.apiKey);\n\n        Connection.#log(\"WS connecting to: \", url);\n\n        // It throws when the server is not accessible but the exception cannot be caught:\n        // https://stackoverflow.com/questions/31002592/javascript-doesnt-catch-error-in-websocket-instantiation/31003057\n        const conn = new WebSocketProvider(url);\n\n        conn.onerror = (err) => {\n          reject(err);\n        };\n\n        conn.onopen = (evt) => {\n          if (this.autoreconnect) {\n            this.#boffStop();\n          }\n\n          if (this.onOpen) {\n            this.onOpen();\n          }\n\n          resolve();\n        };\n\n        conn.onclose = (evt) => {\n          this.#socket = null;\n\n          if (this.onDisconnect) {\n            const code = this.#boffClosed ? NETWORK_USER : NETWORK_ERROR;\n            this.onDisconnect(new Error(this.#boffClosed ? NETWORK_USER_TEXT : NETWORK_ERROR_TEXT +\n              ' (' + code + ')'), code);\n          }\n\n          if (!this.#boffClosed && this.autoreconnect) {\n            this.#boffReconnect();\n          }\n        };\n\n        conn.onmessage = (evt) => {\n          // Connection.#log(\"onMessage:\", msg)\n          // console.log(\"onMessage:\", evt.data)\n          if (this.onMessage) {\n            this.onMessage(evt.data);\n          }\n        };\n\n        this.#socket = conn;\n      });\n    }\n\n    this.reconnect = (force) => {\n      this.#boffStop();\n      this.connect(null, force);\n    };\n\n    this.disconnect = () => {\n      this.#boffClosed = true;\n      this.#boffStop();\n\n      if (!this.#socket) {\n        return;\n      }\n      this.#socket.close();\n      this.#socket = null;\n    };\n\n    this.sendText = (msg) => {\n      // Connection.#log(\"sendText:\", msg)\n      // console.log(\"sendText:\", evt.data)\n      if (this.#socket && (this.#socket.readyState == this.#socket.OPEN)) {\n        this.#socket.send(msg);\n      } else {\n        throw new Error(\"Websocket is not connected\");\n      }\n    };\n\n    this.isConnected = () => {\n      return (this.#socket && (this.#socket.readyState == this.#socket.OPEN));\n    };\n  }\n\n  // Callbacks:\n\n  /**\n   * A callback to pass incoming messages to. See {@link Tinode.Connection#onMessage}.\n   * @callback Tinode.Connection.OnMessage\n   * @memberof Tinode.Connection\n   * @param {string} message - Message to process.\n   */\n  onMessage = undefined;\n\n  /**\n   * A callback for reporting a dropped connection.\n   * @type {function}\n   * @memberof Tinode.Connection#\n   */\n  onDisconnect = undefined;\n\n  /**\n   * A callback called when the connection is ready to be used for sending. For websockets it's socket open,\n   * for long polling it's <code>readyState=1</code> (OPENED)\n   * @type {function}\n   * @memberof Tinode.Connection#\n   */\n  onOpen = undefined;\n\n  /**\n   * A callback to notify of reconnection attempts. See {@link Tinode.Connection#onAutoreconnectIteration}.\n   * @memberof Tinode.Connection\n   * @callback AutoreconnectIterationType\n   * @param {string} timeout - time till the next reconnect attempt in milliseconds. <code>-1</code> means reconnect was skipped.\n   * @param {Promise} promise resolved or rejected when the reconnect attemp completes.\n   *\n   */\n  /**\n   * A callback to inform when the next attampt to reconnect will happen and to receive connection promise.\n   * @memberof Tinode.Connection#\n   * @type {Tinode.Connection.AutoreconnectIterationType}\n   */\n  onAutoreconnectIteration = undefined;\n}\n\nConnection.NETWORK_ERROR = NETWORK_ERROR;\nConnection.NETWORK_ERROR_TEXT = NETWORK_ERROR_TEXT;\nConnection.NETWORK_USER = NETWORK_USER;\nConnection.NETWORK_USER_TEXT = NETWORK_USER_TEXT;\n","/**\n * @file Helper methods for dealing with IndexedDB cache of messages, users, and topics.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nconst DB_VERSION = 1;\nconst DB_NAME = 'tinode-web';\n\nlet IDBProvider;\n\nexport default class DB {\n  #onError = _ => {};\n  #logger = _ => {};\n\n  // Instance of IndexDB.\n  db = null;\n  // Indicator that the cache is disabled.\n  disabled = false;\n\n  constructor(onError, logger) {\n    this.#onError = onError || this.#onError;\n    this.#logger = logger || this.#logger;\n  }\n\n  #mapObjects(source, callback, context) {\n    if (!this.db) {\n      return disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction([source]);\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'mapObjects', source, event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore(source).getAll().onsuccess = (event) => {\n        if (callback) {\n          event.target.result.forEach((topic) => {\n            callback.call(context, topic);\n          });\n        }\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  /**\n   * Initialize persistent cache: open or create/upgrade if needed.\n   * @returns {Promise} promise to be resolved/rejected when the DB is initialized.\n   */\n  initDatabase() {\n    return new Promise((resolve, reject) => {\n      // Open the database and initialize callbacks.\n      const req = IDBProvider.open(DB_NAME, DB_VERSION);\n      req.onsuccess = (event) => {\n        this.db = event.target.result;\n        this.disabled = false;\n        resolve(this.db);\n      };\n      req.onerror = (event) => {\n        this.#logger('PCache', \"failed to initialize\", event);\n        reject(event.target.error);\n        this.#onError(event.target.error);\n      };\n      req.onupgradeneeded = function(event) {\n        this.db = event.target.result;\n\n        this.db.onerror = function(event) {\n          this.#logger('PCache', \"failed to create storage\", event);\n          this.#onError(event.target.error);\n        };\n\n        // Individual object stores.\n        // Object store (table) for topics. The primary key is topic name.\n        this.db.createObjectStore('topic', {\n          keyPath: 'name'\n        });\n\n        // Users object store. UID is the primary key.\n        this.db.createObjectStore('user', {\n          keyPath: 'uid'\n        });\n\n        // Subscriptions object store topic <-> user. Topic name + UID is the primary key.\n        this.db.createObjectStore('subscription', {\n          keyPath: ['topic', 'uid']\n        });\n\n        // Messages object store. The primary key is topic name + seq.\n        this.db.createObjectStore('message', {\n          keyPath: ['topic', 'seq']\n        });\n      };\n    });\n  }\n\n  /**\n   * Delete persistent cache.\n   */\n  deleteDatabase() {\n    // Close connection, otherwise operations will fail with 'onblocked'.\n    if (this.db) {\n      this.db.close();\n      this.db = null;\n    }\n    return new Promise((resolve, reject) => {\n      const req = IDBProvider.deleteDatabase(DB_NAME);\n      req.onblocked = function(event) {\n        if (this.db) {\n          this.db.close();\n        }\n        const err = new Error(\"blocked\");\n        this.#logger('PCache', 'deleteDatabase', err);\n        reject(err);\n      };\n      req.onsuccess = (event) => {\n        this.db = null;\n        this.disabled = true;\n        resolve(true);\n      };\n      req.onerror = (event) => {\n        this.#logger('PCache', 'deleteDatabase', event.target.error);\n        reject(event.target.error);\n      };\n    });\n  }\n\n  /**\n   * Check if persistent cache is ready for use.\n   * @memberOf DB\n   * @returns {boolean} <code>true</code> if cache is ready, <code>false</code> otherwise.\n   */\n  isReady() {\n    return !!this.db;\n  }\n\n  // Topics.\n\n  /**\n   * Save to cache or update topic in persistent cache.\n   * @memberOf DB\n   * @param {Topic} topic - topic to be added or updated.\n   * @returns {Promise} promise resolved/rejected on operation completion.\n   */\n  updTopic(topic) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic'], 'readwrite');\n      trx.oncomplete = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'updTopic', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('topic').get(topic.name);\n      req.onsuccess = (event) => {\n        trx.objectStore('topic').put(DB.#serializeTopic(req.result, topic));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Mark or unmark topic as deleted.\n   * @memberOf DB\n   * @param {string} name - name of the topic to mark or unmark.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  markTopicAsDeleted(name) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic'], 'readwrite');\n      trx.oncomplete = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'markTopicAsDeleted', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('topic').get(name);\n      req.onsuccess = (event) => {\n        const topic = event.target.result;\n        topic._deleted = true;\n        trx.objectStore('topic').put(topic);\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Remove topic from persistent cache.\n   * @memberOf DB\n   * @param {string} name - name of the topic to remove from database.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remTopic(name) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic', 'subscription', 'message'], 'readwrite');\n      trx.oncomplete = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'remTopic', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('topic').delete(IDBKeyRange.only(name));\n      trx.objectStore('subscription').delete(IDBKeyRange.bound([name, '-'], [name, '~']));\n      trx.objectStore('message').delete(IDBKeyRange.bound([name, 0], [name, Number.MAX_SAFE_INTEGER]));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Execute a callback for each stored topic.\n   * @memberOf DB\n   * @param {function} callback - function to call for each topic.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapTopics(callback, context) {\n    return this.#mapObjects('topic', callback, context);\n  }\n\n  /**\n   * Copy data from serialized object to topic.\n   * @memberOf DB\n   * @param {Topic} topic - target to deserialize to.\n   * @param {Object} src - serialized data to copy from.\n   */\n  deserializeTopic(topic, src) {\n    DB.#deserializeTopic(topic, src);\n  }\n\n  // Users.\n  /**\n   * Add or update user object in the persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to save or update.\n   * @param {Object} pub - user's <code>public</code> information.\n   * @returns {Promise} promise resolved/rejected on operation completion.\n   */\n  updUser(uid, pub) {\n    if (arguments.length < 2 || pub === undefined) {\n      // No point inupdating user with invalid data.\n      return;\n    }\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user'], 'readwrite');\n      trx.oncomplete = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'updUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').put({\n        uid: uid,\n        public: pub\n      });\n      trx.commit();\n    });\n  }\n\n  /**\n   * Remove user from persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to remove from the cache.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remUser(uid) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user'], 'readwrite');\n      trx.oncomplete = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'remUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').delete(IDBKeyRange.only(uid));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Execute a callback for each stored user.\n   * @memberOf DB\n   * @param {function} callback - function to call for each topic.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapUsers(callback, context) {\n    return this.#mapObjects('user', callback, context);\n  }\n\n  /**\n   * Read a single user from persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to fetch from cache.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  getUser(uid) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user']);\n      trx.oncomplete = (event) => {\n        const user = event.target.result;\n        resolve({\n          user: user.uid,\n          public: user.public\n        });\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'getUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').get(uid);\n    });\n  }\n\n  // Subscriptions.\n  /**\n   * Add or update subscription in persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {string} uid - ID of the subscribed user.\n   * @param {Object} sub - subscription to save.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  updSubscription(topicName, uid, sub) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['subscription'], 'readwrite');\n      trx.oncomplete = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'updSubscription', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('subscription').get([topicName, uid]).onsuccess = (event) => {\n        trx.objectStore('subscription').put(DB.#serializeSubscription(event.target.result, topicName, uid, sub));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Execute a callback for each cached subscription in a given topic.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the subscriptions.\n   * @param {function} callback - function to call for each subscription.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapSubscriptions(topicName, callback, context) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['subscription']);\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'mapSubscriptions', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('subscription').getAll(IDBKeyRange.bound([topicName, '-'], [topicName, '~'])).onsuccess = (event) => {\n        if (callback) {\n          event.target.result.forEach((topic) => {\n            callback.call(context, topic);\n          });\n        }\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  // Messages.\n\n  /**\n   * Save message to persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {Object} msg - message to save.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  addMessage(msg) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'addMessage', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('message').add(DB.#serializeMessage(null, msg));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Update delivery status of a message stored in persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {number} seq - ID of the message to update\n   * @param {number} status - new delivery status of the message.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  updMessageStatus(topicName, seq, status) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'updMessageStatus', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('message').get(IDBKeyRange.only([topicName, seq]));\n      req.onsuccess = (event) => {\n        const src = req.result || event.target.result;\n        if (!src || src._status == status) {\n          trx.commit();\n          return;\n        }\n        trx.objectStore('message').put(DB.#serializeMessage(src, {\n          topic: topicName,\n          seq: seq,\n          _status: status\n        }));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Remove one or more messages from persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {number} from - id of the message to remove or lower boundary when removing range (inclusive).\n   * @param {number=} to - upper boundary (exclusive) when removing a range of messages.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remMessages(topicName, from, to) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      if (!from && !to) {\n        from = 0;\n        to = Number.MAX_SAFE_INTEGER;\n      }\n      const range = to > 0 ? IDBKeyRange.bound([topicName, from], [topicName, to], false, true) :\n        IDBKeyRange.only([topicName, from]);\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'remMessages', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('message').delete(range);\n      trx.commit();\n    });\n  }\n\n  /**\n   * Retrieve messages from persistent store.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic to retrieve messages from.\n   * @param {function} callback to call for each retrieved message.\n   * @param {Object} query - parameters of the message range to retrieve.\n   * @param {number=} query.since - the least message ID to retrieve (inclusive).\n   * @param {number=} query.before - the greatest message ID to retrieve (exclusive).\n   * @param {number=} query.limit - the maximum number of messages to retrieve.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  readMessages(topicName, query, callback, context) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      query = query || {};\n      const since = query.since > 0 ? query.since : 0;\n      const before = query.before > 0 ? query.before : Number.MAX_SAFE_INTEGER;\n      const limit = query.limit | 0;\n\n      const result = [];\n      const range = IDBKeyRange.bound([topicName, since], [topicName, before], false, true);\n      const trx = this.db.transaction(['message']);\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'readMessages', event.target.error);\n        reject(event.target.error);\n      };\n      // Iterate in descending order.\n      trx.objectStore('message').openCursor(range, 'prev').onsuccess = (event) => {\n        const cursor = event.target.result;\n        if (cursor) {\n          if (callback) {\n            callback.call(context, cursor.value);\n          }\n          result.push(cursor.value);\n          if (limit <= 0 || result.length < limit) {\n            cursor.continue();\n          } else {\n            resolve(result);\n          }\n        } else {\n          resolve(result);\n        }\n      };\n    });\n  }\n\n  // Private methods.\n\n  // Serializable topic fields.\n  static #topic_fields = ['created', 'updated', 'deleted', 'read', 'recv', 'seq', 'clear', 'defacs',\n    'creds', 'public', 'trusted', 'private', 'touched', '_deleted'\n  ];\n\n  // Copy data from src to Topic object.\n  static #deserializeTopic(topic, src) {\n    DB.#topic_fields.forEach((f) => {\n      if (src.hasOwnProperty(f)) {\n        topic[f] = src[f];\n      }\n    });\n    if (Array.isArray(src.tags)) {\n      topic._tags = src.tags;\n    }\n    if (src.acs) {\n      topic.setAccessMode(src.acs);\n    }\n    topic.seq |= 0;\n    topic.read |= 0;\n    topic.unread = Math.max(0, topic.seq - topic.read);\n  }\n\n  // Copy values from 'src' to 'dst'. Allocate dst if it's null or undefined.\n  static #serializeTopic(dst, src) {\n    const res = dst || {\n      name: src.name\n    };\n    DB.#topic_fields.forEach((f) => {\n      if (src.hasOwnProperty(f)) {\n        res[f] = src[f];\n      }\n    });\n    if (Array.isArray(src._tags)) {\n      res.tags = src._tags;\n    }\n    if (src.acs) {\n      res.acs = src.getAccessMode().jsonHelper();\n    }\n    return res;\n  }\n\n  static #serializeSubscription(dst, topicName, uid, sub) {\n    const fields = ['updated', 'mode', 'read', 'recv', 'clear', 'lastSeen', 'userAgent'];\n    const res = dst || {\n      topic: topicName,\n      uid: uid\n    };\n\n    fields.forEach((f) => {\n      if (sub.hasOwnProperty(f)) {\n        res[f] = sub[f];\n      }\n    });\n\n    return res;\n  }\n\n  static #serializeMessage(dst, msg) {\n    // Serializable fields.\n    const fields = ['topic', 'seq', 'ts', '_status', 'from', 'head', 'content'];\n    const res = dst || {};\n    fields.forEach((f) => {\n      if (msg.hasOwnProperty(f)) {\n        res[f] = msg[f];\n      }\n    });\n    return res;\n  }\n\n  /**\n   * To use DB in a non browser context, supply indexedDB provider.\n   * @static\n   * @memberof DB\n   * @param idbProvider indexedDB provider, e.g. for node <code>require('fake-indexeddb')</code>.\n   */\n  static setDatabaseProvider(idbProvider) {\n    IDBProvider = idbProvider;\n  }\n}\n","/**\n * @copyright 2015-2022 Tinode LLC.\n * @summary Minimally rich text representation and formatting for Tinode.\n * @license Apache 2.0\n *\n * @file Basic parser and formatter for very simple text markup. Mostly targeted at\n * mobile use cases similar to Telegram, WhatsApp, and FB Messenger.\n *\n * <p>Supports conversion of user keyboard input to formatted text:</p>\n * <ul>\n *   <li>*abc* &rarr; <b>abc</b></li>\n *   <li>_abc_ &rarr; <i>abc</i></li>\n *   <li>~abc~ &rarr; <del>abc</del></li>\n *   <li>`abc` &rarr; <tt>abc</tt></li>\n * </ul>\n * Also supports forms and buttons.\n *\n * Nested formatting is supported, e.g. *abc _def_* -> <b>abc <i>def</i></b>\n * URLs, @mentions, and #hashtags are extracted and converted into links.\n * Forms and buttons can be added procedurally.\n * JSON data representation is inspired by Draft.js raw formatting.\n *\n *\n * @example\n * Text:\n * <pre>\n *     this is *bold*, `code` and _italic_, ~strike~\n *     combined *bold and _italic_*\n *     an url: https://www.example.com/abc#fragment and another _www.tinode.co_\n *     this is a @mention and a #hashtag in a string\n *     second #hashtag\n * </pre>\n *\n *  Sample JSON representation of the text above:\n *  {\n *     \"txt\": \"this is bold, code and italic, strike combined bold and italic an url: https://www.example.com/abc#fragment \" +\n *             \"and another www.tinode.co this is a @mention and a #hashtag in a string second #hashtag\",\n *     \"fmt\": [\n *         { \"at\":8, \"len\":4,\"tp\":\"ST\" },{ \"at\":14, \"len\":4, \"tp\":\"CO\" },{ \"at\":23, \"len\":6, \"tp\":\"EM\"},\n *         { \"at\":31, \"len\":6, \"tp\":\"DL\" },{ \"tp\":\"BR\", \"len\":1, \"at\":37 },{ \"at\":56, \"len\":6, \"tp\":\"EM\" },\n *         { \"at\":47, \"len\":15, \"tp\":\"ST\" },{ \"tp\":\"BR\", \"len\":1, \"at\":62 },{ \"at\":120, \"len\":13, \"tp\":\"EM\" },\n *         { \"at\":71, \"len\":36, \"key\":0 },{ \"at\":120, \"len\":13, \"key\":1 },{ \"tp\":\"BR\", \"len\":1, \"at\":133 },\n *         { \"at\":144, \"len\":8, \"key\":2 },{ \"at\":159, \"len\":8, \"key\":3 },{ \"tp\":\"BR\", \"len\":1, \"at\":179 },\n *         { \"at\":187, \"len\":8, \"key\":3 },{ \"tp\":\"BR\", \"len\":1, \"at\":195 }\n *     ],\n *     \"ent\": [\n *         { \"tp\":\"LN\", \"data\":{ \"url\":\"https://www.example.com/abc#fragment\" } },\n *         { \"tp\":\"LN\", \"data\":{ \"url\":\"http://www.tinode.co\" } },\n *         { \"tp\":\"MN\", \"data\":{ \"val\":\"mention\" } },\n *         { \"tp\":\"HT\", \"data\":{ \"val\":\"hashtag\" } }\n *     ]\n *  }\n */\n\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nconst MAX_FORM_ELEMENTS = 8;\nconst MAX_PREVIEW_ATTACHMENTS = 3;\nconst MAX_PREVIEW_DATA_SIZE = 64;\nconst JSON_MIME_TYPE = 'application/json';\nconst DRAFTY_MIME_TYPE = 'text/x-drafty';\nconst ALLOWED_ENT_FIELDS = ['act', 'height', 'duration', 'mime', 'name', 'preview', 'ref', 'size', 'url', 'val', 'width'];\n\n// Regular expressions for parsing inline formats. Javascript does not support lookbehind,\n// so it's a bit messy.\nconst INLINE_STYLES = [\n  // Strong = bold, *bold text*\n  {\n    name: 'ST',\n    start: /(?:^|[\\W_])(\\*)[^\\s*]/,\n    end: /[^\\s*](\\*)(?=$|[\\W_])/\n  },\n  // Emphesized = italic, _italic text_\n  {\n    name: 'EM',\n    start: /(?:^|\\W)(_)[^\\s_]/,\n    end: /[^\\s_](_)(?=$|\\W)/\n  },\n  // Deleted, ~strike this though~\n  {\n    name: 'DL',\n    start: /(?:^|[\\W_])(~)[^\\s~]/,\n    end: /[^\\s~](~)(?=$|[\\W_])/\n  },\n  // Code block `this is monospace`\n  {\n    name: 'CO',\n    start: /(?:^|\\W)(`)[^`]/,\n    end: /[^`](`)(?=$|\\W)/\n  }\n];\n\n// Relative weights of formatting spans. Greater index in array means greater weight.\nconst FMT_WEIGHT = ['QQ'];\n\n// RegExps for entity extraction (RF = reference)\nconst ENTITY_TYPES = [\n  // URLs\n  {\n    name: 'LN',\n    dataName: 'url',\n    pack: function(val) {\n      // Check if the protocol is specified, if not use http\n      if (!/^[a-z]+:\\/\\//i.test(val)) {\n        val = 'http://' + val;\n      }\n      return {\n        url: val\n      };\n    },\n    re: /(?:(?:https?|ftp):\\/\\/|www\\.|ftp\\.)[-A-Z0-9+&@#\\/%=~_|$?!:,.]*[A-Z0-9+&@#\\/%=~_|$]/ig\n  },\n  // Mentions @user (must be 2 or more characters)\n  {\n    name: 'MN',\n    dataName: 'val',\n    pack: function(val) {\n      return {\n        val: val.slice(1)\n      };\n    },\n    re: /\\B@([\\p{L}\\p{N}][._\\p{L}\\p{N}]*[\\p{L}\\p{N}])/ug\n  },\n  // Hashtags #hashtag, like metion 2 or more characters.\n  {\n    name: 'HT',\n    dataName: 'val',\n    pack: function(val) {\n      return {\n        val: val.slice(1)\n      };\n    },\n    re: /\\B#([\\p{L}\\p{N}][._\\p{L}\\p{N}]*[\\p{L}\\p{N}])/ug\n  }\n];\n\n// HTML tag name suggestions\nconst HTML_TAGS = {\n  AU: {\n    name: 'audio',\n    isVoid: false\n  },\n  BN: {\n    name: 'button',\n    isVoid: false\n  },\n  BR: {\n    name: 'br',\n    isVoid: true\n  },\n  CO: {\n    name: 'tt',\n    isVoid: false\n  },\n  DL: {\n    name: 'del',\n    isVoid: false\n  },\n  EM: {\n    name: 'i',\n    isVoid: false\n  },\n  EX: {\n    name: '',\n    isVoid: true\n  },\n  FM: {\n    name: 'div',\n    isVoid: false\n  },\n  HD: {\n    name: '',\n    isVoid: false\n  },\n  HL: {\n    name: 'span',\n    isVoid: false\n  },\n  HT: {\n    name: 'a',\n    isVoid: false\n  },\n  IM: {\n    name: 'img',\n    isVoid: false\n  },\n  LN: {\n    name: 'a',\n    isVoid: false\n  },\n  MN: {\n    name: 'a',\n    isVoid: false\n  },\n  RW: {\n    name: 'div',\n    isVoid: false,\n  },\n  QQ: {\n    name: 'div',\n    isVoid: false\n  },\n  ST: {\n    name: 'b',\n    isVoid: false\n  },\n};\n\n// Convert base64-encoded string into Blob.\nfunction base64toObjectUrl(b64, contentType, logger) {\n  if (!b64) {\n    return null;\n  }\n\n  try {\n    const bin = atob(b64);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return URL.createObjectURL(new Blob([buf], {\n      type: contentType\n    }));\n  } catch (err) {\n    if (logger) {\n      logger(\"Drafty: failed to convert object.\", err.message);\n    }\n  }\n\n  return null;\n}\n\nfunction base64toDataUrl(b64, contentType) {\n  if (!b64) {\n    return null;\n  }\n  contentType = contentType || 'image/jpeg';\n  return 'data:' + contentType + ';base64,' + b64;\n}\n\n// Helpers for converting Drafty to HTML.\nconst DECORATORS = {\n  // Visial styles\n  ST: {\n    open: _ => '<b>',\n    close: _ => '</b>'\n  },\n  EM: {\n    open: _ => '<i>',\n    close: _ => '</i>'\n  },\n  DL: {\n    open: _ => '<del>',\n    close: _ => '</del>'\n  },\n  CO: {\n    open: _ => '<tt>',\n    close: _ => '</tt>'\n  },\n  // Line break\n  BR: {\n    open: _ => '<br/>',\n    close: _ => ''\n  },\n  // Hidden element\n  HD: {\n    open: _ => '',\n    close: _ => ''\n  },\n  // Highlighted element.\n  HL: {\n    open: _ => '<span style=\"color:teal\">',\n    close: _ => '</span>'\n  },\n  // Link (URL)\n  LN: {\n    open: (data) => {\n      return '<a href=\"' + data.url + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        href: data.url,\n        target: '_blank'\n      } : null;\n    },\n  },\n  // Mention\n  MN: {\n    open: (data) => {\n      return '<a href=\"#' + data.val + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        id: data.val\n      } : null;\n    },\n  },\n  // Hashtag\n  HT: {\n    open: (data) => {\n      return '<a href=\"#' + data.val + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        id: data.val\n      } : null;\n    },\n  },\n  // Button\n  BN: {\n    open: _ => '<button>',\n    close: _ => '</button>',\n    props: (data) => {\n      return data ? {\n        'data-act': data.act,\n        'data-val': data.val,\n        'data-name': data.name,\n        'data-ref': data.ref\n      } : null;\n    },\n  },\n  // Audio recording\n  AU: {\n    open: (data) => {\n      const url = data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger);\n      return '<audio controls src=\"' + url + '\">';\n    },\n    close: _ => '</audio>',\n    props: (data) => {\n      if (!data) return null;\n      return {\n        // Embedded data or external link.\n        src: data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        'data-preload': data.ref ? 'metadata' : 'auto',\n        'data-duration': data.duration,\n        'data-name': data.name,\n        'data-size': data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0),\n        'data-mime': data.mime,\n      };\n    }\n  },\n  // Image\n  IM: {\n    open: (data) => {\n      // Don't use data.ref for preview: it's a security risk.\n      const tmpPreviewUrl = base64toDataUrl(data._tempPreview, data.mime);\n      const previewUrl = base64toObjectUrl(data.val, data.mime, Drafty.logger);\n      const downloadUrl = data.ref || previewUrl;\n      return (data.name ? '<a href=\"' + downloadUrl + '\" download=\"' + data.name + '\">' : '') +\n        '<img src=\"' + (tmpPreviewUrl || previewUrl) + '\"' +\n        (data.width ? ' width=\"' + data.width + '\"' : '') +\n        (data.height ? ' height=\"' + data.height + '\"' : '') + ' border=\"0\" />';\n    },\n    close: (data) => {\n      return (data.name ? '</a>' : '');\n    },\n    props: (data) => {\n      if (!data) return null;\n      return {\n        // Temporary preview, or permanent preview, or external link.\n        src: base64toDataUrl(data._tempPreview, data.mime) ||\n          data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        title: data.name,\n        alt: data.name,\n        'data-width': data.width,\n        'data-height': data.height,\n        'data-name': data.name,\n        'data-size': data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0),\n        'data-mime': data.mime,\n      };\n    },\n  },\n  // Form - structured layout of elements.\n  FM: {\n    open: _ => '<div>',\n    close: _ => '</div>'\n  },\n  // Row: logic grouping of elements\n  RW: {\n    open: _ => '<div>',\n    close: _ => '</div>'\n  },\n  // Quoted block.\n  QQ: {\n    open: _ => '<div>',\n    close: _ => '</div>',\n    props: (data) => {\n      return data ? {} : null;\n    },\n  }\n};\n\n/**\n * The main object which performs all the formatting actions.\n * @class Drafty\n * @constructor\n */\nconst Drafty = function() {\n  this.txt = '';\n  this.fmt = [];\n  this.ent = [];\n}\n\n/**\n * Initialize Drafty document to a plain text string.\n *\n * @param {String} plainText - string to use as Drafty content.\n *\n * @returns new Drafty document or null is plainText is not a string or undefined.\n */\nDrafty.init = function(plainText) {\n  if (typeof plainText == 'undefined') {\n    plainText = '';\n  } else if (typeof plainText != 'string') {\n    return null;\n  }\n\n  return {\n    txt: plainText\n  };\n}\n\n/**\n * Parse plain text into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {String} content - plain-text content to parse.\n * @return {Drafty} parsed document or null if the source is not plain text.\n */\nDrafty.parse = function(content) {\n  // Make sure we are parsing strings only.\n  if (typeof content != 'string') {\n    return null;\n  }\n\n  // Split text into lines. It makes further processing easier.\n  const lines = content.split(/\\r?\\n/);\n\n  // Holds entities referenced from text\n  const entityMap = [];\n  const entityIndex = {};\n\n  // Processing lines one by one, hold intermediate result in blx.\n  const blx = [];\n  lines.forEach((line) => {\n    let spans = [];\n    let entities;\n\n    // Find formatted spans in the string.\n    // Try to match each style.\n    INLINE_STYLES.forEach((tag) => {\n      // Each style could be matched multiple times.\n      spans = spans.concat(spannify(line, tag.start, tag.end, tag.name));\n    });\n\n    let block;\n    if (spans.length == 0) {\n      block = {\n        txt: line\n      };\n    } else {\n      // Sort spans by style occurence early -> late, then by length: first long then short.\n      spans.sort((a, b) => {\n        const diff = a.at - b.at;\n        return diff != 0 ? diff : b.end - a.end;\n      });\n\n      // Convert an array of possibly overlapping spans into a tree.\n      spans = toSpanTree(spans);\n\n      // Build a tree representation of the entire string, not\n      // just the formatted parts.\n      const chunks = chunkify(line, 0, line.length, spans);\n\n      const drafty = draftify(chunks, 0);\n\n      block = {\n        txt: drafty.txt,\n        fmt: drafty.fmt\n      };\n    }\n\n    // Extract entities from the cleaned up string.\n    entities = extractEntities(block.txt);\n    if (entities.length > 0) {\n      const ranges = [];\n      for (let i in entities) {\n        // {offset: match['index'], unique: match[0], len: match[0].length, data: ent.packer(), type: ent.name}\n        const entity = entities[i];\n        let index = entityIndex[entity.unique];\n        if (!index) {\n          index = entityMap.length;\n          entityIndex[entity.unique] = index;\n          entityMap.push({\n            tp: entity.type,\n            data: entity.data\n          });\n        }\n        ranges.push({\n          at: entity.offset,\n          len: entity.len,\n          key: index\n        });\n      }\n      block.ent = ranges;\n    }\n\n    blx.push(block);\n  });\n\n  const result = {\n    txt: ''\n  };\n\n  // Merge lines and save line breaks as BR inline formatting.\n  if (blx.length > 0) {\n    result.txt = blx[0].txt;\n    result.fmt = (blx[0].fmt || []).concat(blx[0].ent || []);\n\n    for (let i = 1; i < blx.length; i++) {\n      const block = blx[i];\n      const offset = result.txt.length + 1;\n\n      result.fmt.push({\n        tp: 'BR',\n        len: 1,\n        at: offset - 1\n      });\n\n      result.txt += ' ' + block.txt;\n      if (block.fmt) {\n        result.fmt = result.fmt.concat(block.fmt.map((s) => {\n          s.at += offset;\n          return s;\n        }));\n      }\n      if (block.ent) {\n        result.fmt = result.fmt.concat(block.ent.map((s) => {\n          s.at += offset;\n          return s;\n        }));\n      }\n    }\n\n    if (result.fmt.length == 0) {\n      delete result.fmt;\n    }\n\n    if (entityMap.length > 0) {\n      result.ent = entityMap;\n    }\n  }\n  return result;\n}\n\n/**\n * Append one Drafty document to another.\n *\n * @param {Drafty} first - Drafty document to append to.\n * @param {Drafty|string} second - Drafty document or string being appended.\n *\n * @return {Drafty} first document with the second appended to it.\n */\nDrafty.append = function(first, second) {\n  if (!first) {\n    return second;\n  }\n  if (!second) {\n    return first;\n  }\n\n  first.txt = first.txt || '';\n  const len = first.txt.length;\n\n  if (typeof second == 'string') {\n    first.txt += second;\n  } else if (second.txt) {\n    first.txt += second.txt;\n  }\n\n  if (Array.isArray(second.fmt)) {\n    first.fmt = first.fmt || [];\n    if (Array.isArray(second.ent)) {\n      first.ent = first.ent || [];\n    }\n    second.fmt.forEach(src => {\n      const fmt = {\n        at: (src.at | 0) + len,\n        len: src.len | 0\n      };\n      // Special case for the outside of the normal rendering flow styles.\n      if (src.at == -1) {\n        fmt.at = -1;\n        fmt.len = 0;\n      }\n      if (src.tp) {\n        fmt.tp = src.tp;\n      } else {\n        fmt.key = first.ent.length;\n        first.ent.push(second.ent[src.key || 0]);\n      }\n      first.fmt.push(fmt);\n    });\n  }\n\n  return first;\n}\n\n/**\n * @typedef Drafty.ImageDesc\n * @memberof Drafty\n * @type Object\n * @param {string} mime - mime-type of the image, e.g. \"image/png\"\n * @param {string} preview - base64-encoded image content (or preview, if large image is attached). Could be null/undefined.\n * @param {integer} width - width of the image\n * @param {integer} height - height of the image\n * @param {string} filename - file name suggestion for downloading the image.\n * @param {integer} size - size of the image in bytes. Treat is as an untrusted hint.\n * @param {string} refurl - reference to the content. Could be null/undefined.\n * @param {string} _tempPreview - base64-encoded image preview used during upload process; not serializable.\n * @param {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Insert inline image into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add image to.\n * @param {integer} at - index where the object is inserted. The length of the image is always 1.\n * @param {ImageDesc} imageDesc - object with image paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertImage = function(content, at, imageDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'IM',\n    data: {\n      mime: imageDesc.mime,\n      val: imageDesc.preview,\n      width: imageDesc.width,\n      height: imageDesc.height,\n      name: imageDesc.filename,\n      size: imageDesc.size | 0,\n      ref: imageDesc.refurl\n    }\n  };\n\n  if (imageDesc.urlPromise) {\n    ex.data._tempPreview = imageDesc._tempPreview;\n    ex.data._processing = true;\n    imageDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._tempPreview = undefined;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * @typedef Drafty.AudioDesc\n * @memberof Drafty\n * @type Object\n * @param {string} mime - mime-type of the audio, e.g. \"audio/ogg\".\n * @param {string} data - base64-encoded audio content. Could be null/undefined.\n * @param {integer} duration - duration of the record in milliseconds.\n * @param {string} preview - base64 encoded short array of amplitude values 0..100.\n * @param {string} filename - file name suggestion for downloading the audio.\n * @param {integer} size - size of the recording in bytes. Treat is as an untrusted hint.\n * @param {string} refurl - reference to the content. Could be null/undefined.\n * @param {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Insert audio recording into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add audio record to.\n * @param {integer} at - index where the object is inserted. The length of the record is always 1.\n * @param {AudioDesc} audioDesc - object with the audio paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertAudio = function(content, at, audioDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'AU',\n    data: {\n      mime: audioDesc.mime,\n      val: audioDesc.data,\n      duration: audioDesc.duration | 0,\n      preview: audioDesc.preview,\n      name: audioDesc.filename,\n      size: audioDesc.size | 0,\n      ref: audioDesc.refurl\n    }\n  };\n\n  if (audioDesc.urlPromise) {\n    ex.data._processing = true;\n    audioDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Create a quote to Drafty document.\n *\n * @param {string} header - Quote header (title, etc.).\n * @param {string} uid - UID of the author to mention.\n * @param {Drafty} body - Body of the quoted message.\n *\n * @returns Reply quote Drafty doc with the quote formatting.\n */\nDrafty.quote = function(header, uid, body) {\n  const quote = Drafty.append(Drafty.appendLineBreak(Drafty.mention(header, uid)), body);\n\n  // Wrap into a quote.\n  quote.fmt.push({\n    at: 0,\n    len: quote.txt.length,\n    tp: 'QQ'\n  });\n\n  return quote;\n}\n\n/**\n * Create a Drafty document with a mention.\n *\n * @param {string} name - mentioned name.\n * @param {string} uid - mentioned user ID.\n *\n * @returns {Drafty} document with the mention.\n */\nDrafty.mention = function(name, uid) {\n  return {\n    txt: name || '',\n    fmt: [{\n      at: 0,\n      len: (name || '').length,\n      key: 0\n    }],\n    ent: [{\n      tp: 'MN',\n      data: {\n        val: uid\n      }\n    }]\n  };\n}\n\n/**\n * Append a link to a Drafty document.\n *\n * @param {Drafty} content - Drafty document to append link to.\n * @param {Object} linkData - Link info in format <code>{txt: 'ankor text', url: 'http://...'}</code>.\n *\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.appendLink = function(content, linkData) {\n  content = content || {\n    txt: ''\n  };\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: content.txt.length,\n    len: linkData.txt.length,\n    key: content.ent.length\n  });\n  content.txt += linkData.txt;\n\n  const ex = {\n    tp: 'LN',\n    data: {\n      url: linkData.url\n    }\n  }\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Append image to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add image to.\n * @param {ImageDesc} imageDesc - object with image paramenets.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendImage = function(content, imageDesc) {\n  content = content || {\n    txt: ''\n  };\n  content.txt += ' ';\n  return Drafty.insertImage(content, content.txt.length - 1, imageDesc);\n}\n\n/**\n * Append audio recodring to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add recording to.\n * @param {AudioDesc} audioDesc - object with audio data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendAudio = function(content, audioDesc) {\n  content = content || {\n    txt: ''\n  };\n  content.txt += ' ';\n  return Drafty.insertAudio(content, content.txt.length - 1, audioDesc);\n}\n\n/**\n * @typedef Drafty.AttachmentDesc\n * @memberof Drafty\n * @type Object\n * @param {string} mime - mime-type of the attachment, e.g. \"application/octet-stream\"\n * @param {string} data - base64-encoded in-band content of small attachments. Could be null/undefined.\n * @param {string} filename - file name suggestion for downloading the attachment.\n * @param {integer} size - size of the file in bytes. Treat is as an untrusted hint.\n * @param {string} refurl - reference to the out-of-band content. Could be null/undefined.\n * @param {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Attach file to Drafty content. Either as a blob or as a reference.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to attach file to.\n * @param {AttachmentDesc} object - containing attachment description and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.attachFile = function(content, attachmentDesc) {\n  content = content || {\n    txt: ''\n  };\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: -1,\n    len: 0,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'EX',\n    data: {\n      mime: attachmentDesc.mime,\n      val: attachmentDesc.data,\n      name: attachmentDesc.filename,\n      ref: attachmentDesc.refurl,\n      size: attachmentDesc.size | 0\n    }\n  }\n  if (attachmentDesc.urlPromise) {\n    ex.data._processing = true;\n    attachmentDesc.urlPromise.then(\n      (url) => {\n        ex.data.ref = url;\n        ex.data._processing = undefined;\n      },\n      (err) => {\n        /* catch the error, otherwise it will appear in the console. */\n        ex.data._processing = undefined;\n      }\n    );\n  }\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Wraps drafty document into a simple formatting style.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - document or string to wrap into a style.\n * @param {string} style - two-letter style to wrap into.\n * @param {number} at - index where the style starts, default 0.\n * @param {number} len - length of the form content, default all of it.\n *\n * @return {Drafty} updated document.\n */\nDrafty.wrapInto = function(content, style, at, len) {\n  if (typeof content == 'string') {\n    content = {\n      txt: content\n    };\n  }\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at || 0,\n    len: len || content.txt.length,\n    tp: style,\n  });\n\n  return content;\n}\n\n/**\n * Wraps content into an interactive form.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - to wrap into a form.\n * @param {number} at - index where the forms starts.\n * @param {number} len - length of the form content.\n *\n * @return {Drafty} updated document.\n */\nDrafty.wrapAsForm = function(content, at, len) {\n  return Drafty.wrapInto(content, 'FM', at, len);\n}\n\n/**\n * Insert clickable button into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - Drafty document to insert button to or a string to be used as button text.\n * @param {number} at - location where the button is inserted.\n * @param {number} len - the length of the text to be used as button title.\n * @param {string} name - the button. Client should return it to the server when the button is clicked.\n * @param {string} actionType - the type of the button, one of 'url' or 'pub'.\n * @param {string} actionValue - the value to return on click:\n * @param {string} refUrl - the URL to go to when the 'url' button is clicked.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertButton = function(content, at, len, name, actionType, actionValue, refUrl) {\n  if (typeof content == 'string') {\n    content = {\n      txt: content\n    };\n  }\n\n  if (!content || !content.txt || content.txt.length < at + len) {\n    return null;\n  }\n\n  if (len <= 0 || ['url', 'pub'].indexOf(actionType) == -1) {\n    return null;\n  }\n  // Ensure refUrl is a string.\n  if (actionType == 'url' && !refUrl) {\n    return null;\n  }\n  refUrl = '' + refUrl;\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: len,\n    key: content.ent.length\n  });\n  content.ent.push({\n    tp: 'BN',\n    data: {\n      act: actionType,\n      val: actionValue,\n      ref: refUrl,\n      name: name\n    }\n  });\n\n  return content;\n}\n\n/**\n * Append clickable button to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - Drafty document to insert button to or a string to be used as button text.\n * @param {string} title - the text to be used as button title.\n * @param {string} name - the button. Client should return it to the server when the button is clicked.\n * @param {string} actionType - the type of the button, one of 'url' or 'pub'.\n * @param {string} actionValue - the value to return on click:\n * @param {string} refUrl - the URL to go to when the 'url' button is clicked.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendButton = function(content, title, name, actionType, actionValue, refUrl) {\n  content = content || {\n    txt: ''\n  };\n  const at = content.txt.length;\n  content.txt += title;\n  return Drafty.insertButton(content, at, title.length, name, actionType, actionValue, refUrl);\n}\n\n/**\n * Attach a generic JS object. The object is attached as a json string.\n * Intended for representing a form response.\n *\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - Drafty document to attach file to.\n * @param {Object} data - data to convert to json string and attach.\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.attachJSON = function(content, data) {\n  content = content || {\n    txt: ''\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: -1,\n    len: 0,\n    key: content.ent.length\n  });\n\n  content.ent.push({\n    tp: 'EX',\n    data: {\n      mime: JSON_MIME_TYPE,\n      val: data\n    }\n  });\n\n  return content;\n}\n/**\n * Append line break to a Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - Drafty document to append linebreak to.\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.appendLineBreak = function(content) {\n  content = content || {\n    txt: ''\n  };\n  content.fmt = content.fmt || [];\n  content.fmt.push({\n    at: content.txt.length,\n    len: 1,\n    tp: 'BR'\n  });\n  content.txt += ' ';\n\n  return content;\n}\n/**\n * Given Drafty document, convert it to HTML.\n * No attempt is made to strip pre-existing html markup.\n * This is potentially unsafe because <code>content.txt</code> may contain malicious HTML\n * markup.\n * @memberof Tinode.Drafty\n * @static\n *\n * @param {Drafty} doc - document to convert.\n *\n * @returns {string} HTML-representation of content.\n */\nDrafty.UNSAFE_toHTML = function(doc) {\n  let tree = draftyToTree(doc);\n  const htmlFormatter = function(type, data, values) {\n    const tag = DECORATORS[type];\n    let result = values ? values.join('') : '';\n    if (tag) {\n      result = tag.open(data) + result + tag.close(data);\n    }\n    return result;\n  };\n  return treeBottomUp(tree, htmlFormatter, 0);\n}\n\n/**\n * Callback for applying custom formatting to a Drafty document.\n * Called once for each style span.\n * @memberof Drafty\n * @static\n *\n * @callback Formatter\n * @param {string} style - style code such as \"ST\" or \"IM\".\n * @param {Object} data - entity's data.\n * @param {Object} values - possibly styled subspans contained in this style span.\n * @param {number} index - index of the element guaranteed to be unique.\n */\n\n/**\n * Convert Drafty document to a representation suitable for display.\n * The <code>context</code> may expose a function <code>getFormatter(style)</code>. If it's available\n * it will call it to obtain a <code>formatter</code> for a subtree of styles under the <code>style</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|Object} content - Drafty document to transform.\n * @param {Formatter} formatter - callback which formats individual elements.\n * @param {Object} context - context provided to formatter as <code>this</code>.\n *\n * @return {Object} transformed object\n */\nDrafty.format = function(original, formatter, context) {\n  return treeBottomUp(draftyToTree(original), formatter, 0, [], context);\n}\n\n/**\n * Shorten Drafty document making the drafty text no longer than the limit.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characrets to shorten to.\n * @param {boolean} light - remove heavy data from entities.\n * @returns new shortened Drafty object leaving the original intact.\n */\nDrafty.shorten = function(original, limit, light) {\n  let tree = draftyToTree(original);\n  tree = shortenTree(tree, limit, '…');\n  if (tree && light) {\n    tree = lightEntity(tree);\n  }\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Transform Drafty doc for forwarding: strip leading @mention and any leading line breaks or whitespace.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @returns converted Drafty object leaving the original intact.\n */\nDrafty.forwardedContent = function(original) {\n  let tree = draftyToTree(original);\n  const rmMention = function(node) {\n    if (node.type == 'MN') {\n      if (!node.parent || !node.parent.type) {\n        return null;\n      }\n    }\n    return node;\n  }\n  // Strip leading mention.\n  tree = treeTopDown(tree, rmMention);\n  // Remove leading whitespace.\n  tree = lTrim(tree);\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Prepare Drafty doc for wrapping into QQ as a reply:\n *  - Replace forwarding mention with symbol '➦' and remove data (UID).\n *  - Remove quoted text completely.\n *  - Replace line breaks with spaces.\n *  - Strip entities of heavy content.\n *  - Move attachments to the end of the document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characters to shorten to.\n * @returns converted Drafty object leaving the original intact.\n */\nDrafty.replyContent = function(original, limit) {\n  const convMNnQQnBR = function(node) {\n    if (node.type == 'QQ') {\n      return null;\n    } else if (node.type == 'MN') {\n      if ((!node.parent || !node.parent.type) && (node.text || '').startsWith('➦')) {\n        node.text = '➦';\n        delete node.children;\n        delete node.data;\n      }\n    } else if (node.type == 'BR') {\n      node.text = ' ';\n      delete node.type;\n      delete node.children;\n    }\n    return node;\n  }\n\n  let tree = draftyToTree(original);\n  if (!tree) {\n    return original;\n  }\n\n  // Strip leading mention.\n  tree = treeTopDown(tree, convMNnQQnBR);\n  // Move attachments to the end of the doc.\n  tree = attachmentsToEnd(tree, MAX_PREVIEW_ATTACHMENTS);\n  // Shorten the doc.\n  tree = shortenTree(tree, limit, '…');\n  // Strip heavy elements except IM.data['val'] (have to keep them to generate previews later).\n  tree = lightEntity(tree, node => (node.type == 'IM' ? ['val'] : null));\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n\n/**\n * Generate drafty preview:\n *  - Shorten the document.\n *  - Strip all heavy entity data leaving just inline styles and entity references.\n *  - Replace line breaks with spaces.\n *  - Replace content of QQ with a space.\n *  - Replace forwarding mention with symbol '➦'.\n * move all attachments to the end of the document and make them visible.\n * The <code>context</code> may expose a function <code>getFormatter(style)</code>. If it's available\n * it will call it to obtain a <code>formatter</code> for a subtree of styles under the <code>style</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characters to shorten to.\n * @param {boolean} forwarding - this a forwarding message preview.\n * @returns new shortened Drafty object leaving the original intact.\n */\nDrafty.preview = function(original, limit, forwarding) {\n  let tree = draftyToTree(original);\n\n  // Move attachments to the end.\n  tree = attachmentsToEnd(tree, MAX_PREVIEW_ATTACHMENTS);\n\n  // Convert leading mention to '➦' and replace QQ and BR with a space ' '.\n  const convMNnQQnBR = function(node) {\n    if (node.type == 'MN') {\n      if ((!node.parent || !node.parent.type) && (node.text || '').startsWith('➦')) {\n        node.text = '➦';\n        delete node.children;\n      }\n    } else if (node.type == 'QQ') {\n      node.text = ' ';\n      delete node.children;\n    } else if (node.type == 'BR') {\n      node.text = ' ';\n      delete node.children;\n      delete node.type;\n    }\n    return node;\n  }\n  tree = treeTopDown(tree, convMNnQQnBR);\n\n  tree = shortenTree(tree, limit, '…');\n  if (forwarding) {\n    // Keep IM data for preview.\n    tree = lightEntity(tree, node => (node.type == 'IM' ? ['val'] : null));\n  } else {\n    tree = lightEntity(tree);\n  }\n\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Given Drafty document, convert it to plain text.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to convert to plain text.\n * @returns {string} plain-text representation of the drafty document.\n */\nDrafty.toPlainText = function(content) {\n  return typeof content == 'string' ? content : content.txt;\n}\n\n/**\n * Check if the document has no markup and no entities.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - content to check for presence of markup.\n * @returns <code>true</code> is content is plain text, <code>false</code> otherwise.\n */\nDrafty.isPlainText = function(content) {\n  return typeof content == 'string' || !(content.fmt || content.ent);\n}\n\n/**\n * Checks if the object represets is a valid Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - content to check for validity.\n * @returns <code>true</code> is content is valid, <code>false</code> otherwise.\n */\nDrafty.isValid = function(content) {\n  if (!content) {\n    return false;\n  }\n\n  const {\n    txt,\n    fmt,\n    ent\n  } = content;\n\n  if (!txt && txt !== '' && !fmt && !ent) {\n    return false;\n  }\n\n  const txt_type = typeof txt;\n  if (txt_type != 'string' && txt_type != 'undefined' && txt !== null) {\n    return false;\n  }\n\n  if (typeof fmt != 'undefined' && !Array.isArray(fmt) && fmt !== null) {\n    return false;\n  }\n\n  if (typeof ent != 'undefined' && !Array.isArray(ent) && ent !== null) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Check if the drafty document has attachments: style EX and outside of normal rendering flow,\n * i.e. <code>at = -1</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to check for attachments.\n * @returns <code>true</code> if there are attachments.\n */\nDrafty.hasAttachments = function(content) {\n  if (!Array.isArray(content.fmt)) {\n    return false;\n  }\n  for (let i in content.fmt) {\n    const fmt = content.fmt[i];\n    if (fmt && fmt.at < 0) {\n      const ent = content.ent[fmt.key | 0];\n      return ent && ent.tp == 'EX' && ent.data;\n    }\n  }\n  return false;\n}\n\n/**\n * Callback for applying custom formatting/transformation to a Drafty document.\n * Called once for each entity.\n * @memberof Drafty\n * @static\n *\n * @callback EntityCallback\n * @param {Object} data entity data.\n * @param {string} entity type.\n * @param {number} index entity's index in `content.ent`.\n */\n\n/**\n * Enumerate attachments: style EX and outside of normal rendering flow, i.e. <code>at = -1</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to process for attachments.\n * @param {EntityCallback} callback - callback to call for each attachment.\n * @param {Object} context - value of \"this\" for callback.\n */\nDrafty.attachments = function(content, callback, context) {\n  if (!Array.isArray(content.fmt)) {\n    return;\n  }\n  let i = 0;\n  content.fmt.forEach(fmt => {\n    if (fmt && fmt.at < 0) {\n      const ent = content.ent[fmt.key | 0];\n      if (ent && ent.tp == 'EX' && ent.data) {\n        callback.call(context, ent.data, i++, 'EX');\n      }\n    }\n  });\n}\n\n/**\n * Check if the drafty document has entities.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to check for entities.\n * @returns <code>true</code> if there are entities.\n */\nDrafty.hasEntities = function(content) {\n  return content.ent && content.ent.length > 0;\n}\n\n/**\n * Enumerate entities.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with entities to enumerate.\n * @param {EntityCallback} callback - callback to call for each entity.\n * @param {Object} context - value of \"this\" for callback.\n */\nDrafty.entities = function(content, callback, context) {\n  if (content.ent && content.ent.length > 0) {\n    for (let i in content.ent) {\n      if (content.ent[i]) {\n        callback.call(context, content.ent[i].data, i, content.ent[i].tp);\n      }\n    }\n  }\n}\n\n/**\n * Remove unrecognized fields from entity data\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with entities to enumerate.\n * @returns content.\n */\nDrafty.sanitizeEntities = function(content) {\n  if (content && content.ent && content.ent.length > 0) {\n    for (let i in content.ent) {\n      const ent = content.ent[i];\n      if (ent && ent.data) {\n        const data = copyEntData(ent.data);\n        if (data) {\n          content.ent[i].data = data;\n        } else {\n          delete content.ent[i].data;\n        }\n      }\n    }\n  }\n  return content;\n}\n\n/**\n * Given the entity, get URL which can be used for downloading\n * entity data.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the URl from.\n * @returns {string} URL to download entity data or <code>null</code>.\n */\nDrafty.getDownloadUrl = function(entData) {\n  let url = null;\n  if (entData.mime != JSON_MIME_TYPE && entData.val) {\n    url = base64toObjectUrl(entData.val, entData.mime, Drafty.logger);\n  } else if (typeof entData.ref == 'string') {\n    url = entData.ref;\n  }\n  return url;\n}\n\n/**\n * Check if the entity data is not ready for sending, such as being uploaded to the server.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entity.data to get the URl from.\n * @returns {boolean} true if upload is in progress, false otherwise.\n */\nDrafty.isProcessing = function(entData) {\n  return !!entData._processing;\n}\n\n/**\n * Given the entity, get URL which can be used for previewing\n * the entity.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entity.data to get the URl from.\n *\n * @returns {string} url for previewing or null if no such url is available.\n */\nDrafty.getPreviewUrl = function(entData) {\n  return entData.val ? base64toObjectUrl(entData.val, entData.mime, Drafty.logger) : null;\n}\n\n/**\n * Get approximate size of the entity.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the size for.\n * @returns {number} size of entity data in bytes.\n */\nDrafty.getEntitySize = function(entData) {\n  // Either size hint or length of value. The value is base64 encoded,\n  // the actual object size is smaller than the encoded length.\n  return entData.size ? entData.size : entData.val ? (entData.val.length * 0.75) | 0 : 0;\n}\n\n/**\n * Get entity mime type.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the type for.\n * @returns {string} mime type of entity.\n */\nDrafty.getEntityMimeType = function(entData) {\n  return entData.mime || 'text/plain';\n}\n\n/**\n * Get HTML tag for a given two-letter style name.\n * @memberof Drafty\n * @static\n *\n * @param {string} style - two-letter style, like ST or LN.\n *\n * @returns {string} HTML tag name if style is found, {code: undefined} if style is falsish or not found.\n */\nDrafty.tagName = function(style) {\n  return HTML_TAGS[style] && HTML_TAGS[style].name;\n}\n\n/**\n * For a given data bundle generate an object with HTML attributes,\n * for instance, given {url: \"http://www.example.com/\"} return\n * {href: \"http://www.example.com/\"}\n * @memberof Drafty\n * @static\n *\n * @param {string} style - two-letter style to generate attributes for.\n * @param {Object} data - data bundle to convert to attributes\n *\n * @returns {Object} object with HTML attributes.\n */\nDrafty.attrValue = function(style, data) {\n  if (data && DECORATORS[style]) {\n    return DECORATORS[style].props(data);\n  }\n\n  return undefined;\n}\n\n/**\n * Drafty MIME type.\n * @memberof Drafty\n * @static\n *\n * @returns {string} content-Type \"text/x-drafty\".\n */\nDrafty.getContentType = function() {\n  return DRAFTY_MIME_TYPE;\n}\n\n// =================\n// Utility methods.\n// =================\n\n// Take a string and defined earlier style spans, re-compose them into a tree where each leaf is\n// a same-style (including unstyled) string. I.e. 'hello *bold _italic_* and ~more~ world' ->\n// ('hello ', (b: 'bold ', (i: 'italic')), ' and ', (s: 'more'), ' world');\n//\n// This is needed in order to clear markup, i.e. 'hello *world*' -> 'hello world' and convert\n// ranges from markup-ed offsets to plain text offsets.\nfunction chunkify(line, start, end, spans) {\n  const chunks = [];\n\n  if (spans.length == 0) {\n    return [];\n  }\n\n  for (let i in spans) {\n    // Get the next chunk from the queue\n    const span = spans[i];\n\n    // Grab the initial unstyled chunk\n    if (span.at > start) {\n      chunks.push({\n        txt: line.slice(start, span.at)\n      });\n    }\n\n    // Grab the styled chunk. It may include subchunks.\n    const chunk = {\n      tp: span.tp\n    };\n    const chld = chunkify(line, span.at + 1, span.end, span.children);\n    if (chld.length > 0) {\n      chunk.children = chld;\n    } else {\n      chunk.txt = span.txt;\n    }\n    chunks.push(chunk);\n    start = span.end + 1; // '+1' is to skip the formatting character\n  }\n\n  // Grab the remaining unstyled chunk, after the last span\n  if (start < end) {\n    chunks.push({\n      txt: line.slice(start, end)\n    });\n  }\n\n  return chunks;\n}\n\n// Detect starts and ends of formatting spans. Unformatted spans are\n// ignored at this stage.\nfunction spannify(original, re_start, re_end, type) {\n  const result = [];\n  let index = 0;\n  let line = original.slice(0); // make a copy;\n\n  while (line.length > 0) {\n    // match[0]; // match, like '*abc*'\n    // match[1]; // match captured in parenthesis, like 'abc'\n    // match['index']; // offset where the match started.\n\n    // Find the opening token.\n    const start = re_start.exec(line);\n    if (start == null) {\n      break;\n    }\n\n    // Because javascript RegExp does not support lookbehind, the actual offset may not point\n    // at the markup character. Find it in the matched string.\n    let start_offset = start['index'] + start[0].lastIndexOf(start[1]);\n    // Clip the processed part of the string.\n    line = line.slice(start_offset + 1);\n    // start_offset is an offset within the clipped string. Convert to original index.\n    start_offset += index;\n    // Index now point to the beginning of 'line' within the 'original' string.\n    index = start_offset + 1;\n\n    // Find the matching closing token.\n    const end = re_end ? re_end.exec(line) : null;\n    if (end == null) {\n      break;\n    }\n    let end_offset = end['index'] + end[0].indexOf(end[1]);\n    // Clip the processed part of the string.\n    line = line.slice(end_offset + 1);\n    // Update offsets\n    end_offset += index;\n    // Index now points to the beginning of 'line' within the 'original' string.\n    index = end_offset + 1;\n\n    result.push({\n      txt: original.slice(start_offset + 1, end_offset),\n      children: [],\n      at: start_offset,\n      end: end_offset,\n      tp: type\n    });\n  }\n\n  return result;\n}\n\n// Convert linear array or spans into a tree representation.\n// Keep standalone and nested spans, throw away partially overlapping spans.\nfunction toSpanTree(spans) {\n  if (spans.length == 0) {\n    return [];\n  }\n\n  const tree = [spans[0]];\n  let last = spans[0];\n  for (let i = 1; i < spans.length; i++) {\n    // Keep spans which start after the end of the previous span or those which\n    // are complete within the previous span.\n    if (spans[i].at > last.end) {\n      // Span is completely outside of the previous span.\n      tree.push(spans[i]);\n      last = spans[i];\n    } else if (spans[i].end <= last.end) {\n      // Span is fully inside of the previous span. Push to subnode.\n      last.children.push(spans[i]);\n    }\n    // Span could partially overlap, ignoring it as invalid.\n  }\n\n  // Recursively rearrange the subnodes.\n  for (let i in tree) {\n    tree[i].children = toSpanTree(tree[i].children);\n  }\n\n  return tree;\n}\n\n// Convert drafty document to a tree.\nfunction draftyToTree(doc) {\n  if (!doc) {\n    return null;\n  }\n\n  doc = (typeof doc == 'string') ? {\n    txt: doc\n  } : doc;\n  let {\n    txt,\n    fmt,\n    ent\n  } = doc;\n\n  txt = txt || '';\n  if (!Array.isArray(ent)) {\n    ent = [];\n  }\n\n  if (!Array.isArray(fmt) || fmt.length == 0) {\n    if (ent.length == 0) {\n      return {\n        text: txt\n      };\n    }\n\n    // Handle special case when all values in fmt are 0 and fmt therefore is skipped.\n    fmt = [{\n      at: 0,\n      len: 0,\n      key: 0\n    }];\n  }\n\n  // Sanitize spans.\n  const spans = [];\n  const attachments = [];\n  fmt.forEach((span) => {\n    if (!span || typeof span != 'object') {\n      return;\n    }\n\n    if (!['undefined', 'number'].includes(typeof span.at)) {\n      // Present, but non-numeric 'at'.\n      return;\n    }\n    if (!['undefined', 'number'].includes(typeof span.len)) {\n      // Present, but non-numeric 'len'.\n      return;\n    }\n    let at = span.at | 0;\n    let len = span.len | 0;\n    if (len < 0) {\n      // Invalid span length.\n      return;\n    }\n\n    let key = span.key || 0;\n    if (ent.length > 0 && (typeof key != 'number' || key < 0 || key >= ent.length)) {\n      // Invalid key value.\n      return;\n    }\n\n    if (at <= -1) {\n      // Attachment. Store attachments separately.\n      attachments.push({\n        start: -1,\n        end: 0,\n        key: key\n      });\n      return;\n    } else if (at + len > txt.length) {\n      // Span is out of bounds.\n      return;\n    }\n\n    if (!span.tp) {\n      if (ent.length > 0 && (typeof ent[key] == 'object')) {\n        spans.push({\n          start: at,\n          end: at + len,\n          key: key\n        });\n      }\n    } else {\n      spans.push({\n        type: span.tp,\n        start: at,\n        end: at + len\n      });\n    }\n  });\n\n  // Sort spans first by start index (asc) then by length (desc), then by weight.\n  spans.sort((a, b) => {\n    let diff = a.start - b.start;\n    if (diff != 0) {\n      return diff;\n    }\n    diff = b.end - a.end;\n    if (diff != 0) {\n      return diff;\n    }\n    return FMT_WEIGHT.indexOf(b.type) - FMT_WEIGHT.indexOf(a.type);\n  });\n\n  // Move attachments to the end of the list.\n  if (attachments.length > 0) {\n    spans.push(...attachments);\n  }\n\n  spans.forEach((span) => {\n    if (ent.length > 0 && !span.type && ent[span.key] && typeof ent[span.key] == 'object') {\n      span.type = ent[span.key].tp;\n      span.data = ent[span.key].data;\n    }\n\n    // Is type still undefined? Hide the invalid element!\n    if (!span.type) {\n      span.type = 'HD';\n    }\n  });\n\n  let tree = spansToTree({}, txt, 0, txt.length, spans);\n\n  // Flatten tree nodes.\n  const flatten = function(node) {\n    if (Array.isArray(node.children) && node.children.length == 1) {\n      // Unwrap.\n      const child = node.children[0];\n      if (!node.type) {\n        const parent = node.parent;\n        node = child;\n        node.parent = parent;\n      } else if (!child.type && !child.children) {\n        node.text = child.text;\n        delete node.children;\n      }\n    }\n    return node;\n  }\n  tree = treeTopDown(tree, flatten);\n\n  return tree;\n}\n\n// Add tree node to a parent tree.\nfunction addNode(parent, n) {\n  if (!n) {\n    return parent;\n  }\n\n  if (!parent.children) {\n    parent.children = [];\n  }\n\n  // If text is present, move it to a subnode.\n  if (parent.text) {\n    parent.children.push({\n      text: parent.text,\n      parent: parent\n    });\n    delete parent.text;\n  }\n\n  n.parent = parent;\n  parent.children.push(n);\n\n  return parent;\n}\n\n// Returns a tree of nodes.\nfunction spansToTree(parent, text, start, end, spans) {\n  if (!spans || spans.length == 0) {\n    if (start < end) {\n      addNode(parent, {\n        text: text.substring(start, end)\n      });\n    }\n    return parent;\n  }\n\n  // Process subspans.\n  for (let i = 0; i < spans.length; i++) {\n    const span = spans[i];\n    if (span.start < 0 && span.type == 'EX') {\n      addNode(parent, {\n        type: span.type,\n        data: span.data,\n        key: span.key,\n        att: true\n      });\n      continue;\n    }\n\n    // Add un-styled range before the styled span starts.\n    if (start < span.start) {\n      addNode(parent, {\n        text: text.substring(start, span.start)\n      });\n      start = span.start;\n    }\n\n    // Get all spans which are within the current span.\n    const subspans = [];\n    while (i < spans.length - 1) {\n      const inner = spans[i + 1];\n      if (inner.start < 0) {\n        // Attachments are in the end. Stop.\n        break;\n      } else if (inner.start < span.end) {\n        if (inner.end <= span.end) {\n          const tag = HTML_TAGS[inner.tp] || {};\n          if (inner.start < inner.end || tag.isVoid) {\n            // Valid subspan: completely within the current span and\n            // either non-zero length or zero length is acceptable.\n            subspans.push(inner);\n          }\n        }\n        i++;\n        // Overlapping subspans are ignored.\n      } else {\n        // Past the end of the current span. Stop.\n        break;\n      }\n    }\n\n    addNode(parent, spansToTree({\n      type: span.type,\n      data: span.data,\n      key: span.key\n    }, text, start, span.end, subspans));\n    start = span.end;\n  }\n\n  // Add the last unformatted range.\n  if (start < end) {\n    addNode(parent, {\n      text: text.substring(start, end)\n    });\n  }\n\n  return parent;\n}\n\n// Append a tree to a Drafty doc.\nfunction treeToDrafty(doc, tree, keymap) {\n  if (!tree) {\n    return doc;\n  }\n\n  doc.txt = doc.txt || '';\n\n  // Checkpoint to measure length of the current tree node.\n  const start = doc.txt.length;\n\n  if (tree.text) {\n    doc.txt += tree.text;\n  } else if (Array.isArray(tree.children)) {\n    tree.children.forEach((c) => {\n      treeToDrafty(doc, c, keymap);\n    });\n  }\n\n  if (tree.type) {\n    const len = doc.txt.length - start;\n    doc.fmt = doc.fmt || [];\n    if (Object.keys(tree.data || {}).length > 0) {\n      doc.ent = doc.ent || [];\n      const newKey = (typeof keymap[tree.key] == 'undefined') ? doc.ent.length : keymap[tree.key];\n      keymap[tree.key] = newKey;\n      doc.ent[newKey] = {\n        tp: tree.type,\n        data: tree.data\n      };\n      if (tree.att) {\n        // Attachment.\n        doc.fmt.push({\n          at: -1,\n          len: 0,\n          key: newKey\n        });\n      } else {\n        doc.fmt.push({\n          at: start,\n          len: len,\n          key: newKey\n        });\n      }\n    } else {\n      doc.fmt.push({\n        tp: tree.type,\n        at: start,\n        len: len\n      });\n    }\n  }\n  return doc;\n}\n\n// Traverse the tree top down transforming the nodes: apply transformer to every tree node.\nfunction treeTopDown(src, transformer, context) {\n  if (!src) {\n    return null;\n  }\n\n  let dst = transformer.call(context, src);\n  if (!dst || !dst.children) {\n    return dst;\n  }\n\n  const children = [];\n  for (let i in dst.children) {\n    let n = dst.children[i];\n    if (n) {\n      n = treeTopDown(n, transformer, context);\n      if (n) {\n        children.push(n);\n      }\n    }\n  }\n\n  if (children.length == 0) {\n    dst.children = null;\n  } else {\n    dst.children = children;\n  }\n\n  return dst;\n}\n\n// Traverse the tree bottom-up: apply formatter to every node.\n// The formatter must maintain its state through context.\nfunction treeBottomUp(src, formatter, index, stack, context) {\n  if (!src) {\n    return null;\n  }\n\n  if (stack && src.type) {\n    stack.push(src.type);\n  }\n\n  let values = [];\n  for (let i in src.children) {\n    const n = treeBottomUp(src.children[i], formatter, i, stack, context);\n    if (n) {\n      values.push(n);\n    }\n  }\n  if (values.length == 0) {\n    if (src.text) {\n      values = [src.text];\n    } else {\n      values = null;\n    }\n  }\n\n  if (stack && src.type) {\n    stack.pop();\n  }\n\n  return formatter.call(context, src.type, src.data, values, index, stack);\n}\n\n// Clip tree to the provided limit.\nfunction shortenTree(tree, limit, tail) {\n  if (!tree) {\n    return null;\n  }\n\n  if (tail) {\n    limit -= tail.length;\n  }\n\n  const shortener = function(node) {\n    if (limit <= -1) {\n      // Limit -1 means the doc was already clipped.\n      return null;\n    }\n\n    if (node.att) {\n      // Attachments are unchanged.\n      return node;\n    }\n    if (limit == 0) {\n      node.text = tail;\n      limit = -1;\n    } else if (node.text) {\n      const len = node.text.length;\n      if (len > limit) {\n        node.text = node.text.substring(0, limit) + tail;\n        limit = -1;\n      } else {\n        limit -= len;\n      }\n    }\n    return node;\n  }\n\n  return treeTopDown(tree, shortener);\n}\n\n// Strip heavy entities from a tree.\nfunction lightEntity(tree, allow) {\n  const lightCopy = (node) => {\n    const data = copyEntData(node.data, true, allow ? allow(node) : null);\n    if (data) {\n      node.data = data;\n    } else {\n      delete node.data;\n    }\n    return node;\n  }\n  return treeTopDown(tree, lightCopy);\n}\n\n// Remove spaces and breaks on the left.\nfunction lTrim(tree) {\n  if (tree.type == 'BR') {\n    tree = null;\n  } else if (tree.text) {\n    if (!tree.type) {\n      tree.text = tree.text.trimStart();\n      if (!tree.text) {\n        tree = null;\n      }\n    }\n  } else if (!tree.type && tree.children && tree.children.length > 0) {\n    const c = lTrim(tree.children[0]);\n    if (c) {\n      tree.children[0] = c;\n    } else {\n      tree.children.shift();\n      if (!tree.type && tree.children.length == 0) {\n        tree = null;\n      }\n    }\n  }\n  return tree;\n}\n\n// Move attachments to the end. Attachments must be at the top level, no need to traverse the tree.\nfunction attachmentsToEnd(tree, limit) {\n  if (!tree) {\n    return null;\n  }\n\n  if (tree.att) {\n    tree.text = ' ';\n    delete tree.att;\n    delete tree.children;\n  } else if (tree.children) {\n    const attachments = [];\n    const children = [];\n    for (let i in tree.children) {\n      const c = tree.children[i];\n      if (c.att) {\n        if (attachments.length == limit) {\n          // Too many attachments to preview;\n          continue;\n        }\n        if (c.data['mime'] == JSON_MIME_TYPE) {\n          // JSON attachments are not shown in preview.\n          continue;\n        }\n\n        delete c.att;\n        delete c.children;\n        c.text = ' ';\n        attachments.push(c);\n      } else {\n        children.push(c);\n      }\n    }\n    tree.children = children.concat(attachments);\n  }\n  return tree;\n}\n\n// Get a list of entities from a text.\nfunction extractEntities(line) {\n  let match;\n  let extracted = [];\n  ENTITY_TYPES.forEach((entity) => {\n    while ((match = entity.re.exec(line)) !== null) {\n      extracted.push({\n        offset: match['index'],\n        len: match[0].length,\n        unique: match[0],\n        data: entity.pack(match[0]),\n        type: entity.name\n      });\n    }\n  });\n\n  if (extracted.length == 0) {\n    return extracted;\n  }\n\n  // Remove entities detected inside other entities, like #hashtag in a URL.\n  extracted.sort((a, b) => {\n    return a.offset - b.offset;\n  });\n\n  let idx = -1;\n  extracted = extracted.filter((el) => {\n    const result = (el.offset > idx);\n    idx = el.offset + el.len;\n    return result;\n  });\n\n  return extracted;\n}\n\n// Convert the chunks into format suitable for serialization.\nfunction draftify(chunks, startAt) {\n  let plain = '';\n  let ranges = [];\n  for (let i in chunks) {\n    const chunk = chunks[i];\n    if (!chunk.txt) {\n      const drafty = draftify(chunk.children, plain.length + startAt);\n      chunk.txt = drafty.txt;\n      ranges = ranges.concat(drafty.fmt);\n    }\n\n    if (chunk.tp) {\n      ranges.push({\n        at: plain.length + startAt,\n        len: chunk.txt.length,\n        tp: chunk.tp\n      });\n    }\n\n    plain += chunk.txt;\n  }\n  return {\n    txt: plain,\n    fmt: ranges\n  };\n}\n\n// Create a copy of entity data with (light=false) or without (light=true) the large payload.\n// The array 'allow' contains a list of fields exempt from stripping.\nfunction copyEntData(data, light, allow) {\n  if (data && Object.entries(data).length > 0) {\n    allow = allow || [];\n    const dc = {};\n    ALLOWED_ENT_FIELDS.forEach((key) => {\n      if (data[key]) {\n        if (light && !allow.includes(key) &&\n          (typeof data[key] == 'string' || Array.isArray(data[key])) &&\n          data[key].length > MAX_PREVIEW_DATA_SIZE) {\n          return;\n        }\n        if (typeof data[key] == 'object') {\n          return;\n        }\n        dc[key] = data[key];\n      }\n    });\n\n    if (Object.entries(dc).length != 0) {\n      return dc;\n    }\n  }\n  return null;\n}\n\nif (typeof module != 'undefined') {\n  module.exports = Drafty;\n}\n","/**\n * @file Utilities for uploading and downloading files.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport {\n  jsonParseHelper\n} from './utils.js';\n\nlet XHRProvider;\n\n/**\n * @class LargeFileHelper - utilities for uploading and downloading files out of band.\n * Don't instantiate this class directly. Use {Tinode.getLargeFileHelper} instead.\n * @memberof Tinode\n *\n * @param {Tinode} tinode - the main Tinode object.\n * @param {string} version - protocol version, i.e. '0'.\n */\nexport default class LargeFileHelper {\n  constructor(tinode, version) {\n    this._tinode = tinode;\n    this._version = version;\n\n    this._apiKey = tinode._apiKey;\n    this._authToken = tinode.getAuthToken();\n    this._reqId = tinode.getNextUniqueId();\n    this.xhr = new XHRProvider();\n\n    // Promise\n    this.toResolve = null;\n    this.toReject = null;\n\n    // Callbacks\n    this.onProgress = null;\n    this.onSuccess = null;\n    this.onFailure = null;\n  }\n\n  /**\n   * Start uploading the file to a non-default endpoint.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {string} baseUrl alternative base URL of upload server.\n   * @param {File|Blob} data to upload.\n   * @param {string} avatarFor topic name if the upload represents an avatar.\n   * @param {Callback} onProgress callback. Takes one {float} parameter 0..1\n   * @param {Callback} onSuccess callback. Called when the file is successfully uploaded.\n   * @param {Callback} onFailure callback. Called in case of a failure.\n   *\n   * @returns {Promise} resolved/rejected when the upload is completed/failed.\n   */\n  uploadWithBaseUrl(baseUrl, data, avatarFor, onProgress, onSuccess, onFailure) {\n    if (!this._authToken) {\n      throw new Error(\"Must authenticate first\");\n    }\n    const instance = this;\n\n    let url = `/v${this._version}/file/u/`;\n    if (baseUrl) {\n      let base = baseUrl;\n      if (base.endsWith('/')) {\n        // Removing trailing slash.\n        base = base.slice(0, -1);\n      }\n      if (base.startsWith('http://') || base.startsWith('https://')) {\n        url = base + url;\n      } else {\n        throw new Error(`Invalid base URL '${baseUrl}'`);\n      }\n    }\n    this.xhr.open('POST', url, true);\n    this.xhr.setRequestHeader('X-Tinode-APIKey', this._apiKey);\n    this.xhr.setRequestHeader('X-Tinode-Auth', `Token ${this._authToken.token}`);\n    const result = new Promise((resolve, reject) => {\n      this.toResolve = resolve;\n      this.toReject = reject;\n    });\n\n    this.onProgress = onProgress;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n\n    this.xhr.upload.onprogress = (e) => {\n      if (e.lengthComputable && instance.onProgress) {\n        instance.onProgress(e.loaded / e.total);\n      }\n    };\n\n    this.xhr.onload = function() {\n      let pkt;\n      try {\n        pkt = JSON.parse(this.response, jsonParseHelper);\n      } catch (err) {\n        instance._tinode.logger(\"ERROR: Invalid server response in LargeFileHelper\", this.response);\n        pkt = {\n          ctrl: {\n            code: this.status,\n            text: this.statusText\n          }\n        };\n      }\n\n      if (this.status >= 200 && this.status < 300) {\n        if (instance.toResolve) {\n          instance.toResolve(pkt.ctrl.params.url);\n        }\n        if (instance.onSuccess) {\n          instance.onSuccess(pkt.ctrl);\n        }\n      } else if (this.status >= 400) {\n        if (instance.toReject) {\n          instance.toReject(new Error(`${pkt.ctrl.text} (${pkt.ctrl.code})`));\n        }\n        if (instance.onFailure) {\n          instance.onFailure(pkt.ctrl);\n        }\n      } else {\n        instance._tinode.logger(\"ERROR: Unexpected server response status\", this.status, this.response);\n      }\n    };\n\n    this.xhr.onerror = function(e) {\n      if (instance.toReject) {\n        instance.toReject(new Error(\"failed\"));\n      }\n      if (instance.onFailure) {\n        instance.onFailure(null);\n      }\n    };\n\n    this.xhr.onabort = function(e) {\n      if (instance.toReject) {\n        instance.toReject(new Error(\"upload cancelled by user\"));\n      }\n      if (instance.onFailure) {\n        instance.onFailure(null);\n      }\n    };\n\n    try {\n      const form = new FormData();\n      form.append('file', data);\n      form.set('id', this._reqId);\n      if (avatarFor) {\n        form.set('topic', avatarFor);\n      }\n      this.xhr.send(form);\n    } catch (err) {\n      if (this.toReject) {\n        this.toReject(err);\n      }\n      if (this.onFailure) {\n        this.onFailure(null);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Start uploading the file to default endpoint.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {File|Blob} data to upload\n   * @param {string} avatarFor topic name if the upload represents an avatar.\n   * @param {Callback} onProgress callback. Takes one {float} parameter 0..1\n   * @param {Callback} onSuccess callback. Called when the file is successfully uploaded.\n   * @param {Callback} onFailure callback. Called in case of a failure.\n   *\n   * @returns {Promise} resolved/rejected when the upload is completed/failed.\n   */\n  upload(data, avatarFor, onProgress, onSuccess, onFailure) {\n    const baseUrl = (this._tinode._secure ? 'https://' : 'http://') + this._tinode._host;\n    return this.uploadWithBaseUrl(baseUrl, data, avatarFor, onProgress, onSuccess, onFailure);\n  }\n  /**\n   * Download the file from a given URL using GET request. This method works with the Tinode server only.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {string} relativeUrl - URL to download the file from. Must be relative url, i.e. must not contain the host.\n   * @param {string=} filename - file name to use for the downloaded file.\n   *\n   * @returns {Promise} resolved/rejected when the download is completed/failed.\n   */\n  download(relativeUrl, filename, mimetype, onProgress, onError) {\n    if (!Tinode.isRelativeURL(relativeUrl)) {\n      // As a security measure refuse to download from an absolute URL.\n      if (onError) {\n        onError(`The URL '${relativeUrl}' must be relative, not absolute`);\n      }\n      return;\n    }\n    if (!this._authToken) {\n      if (onError) {\n        onError(\"Must authenticate first\");\n      }\n      return;\n    }\n    const instance = this;\n    // Get data as blob (stored by the browser as a temporary file).\n    this.xhr.open('GET', relativeUrl, true);\n    this.xhr.setRequestHeader('X-Tinode-APIKey', this._apiKey);\n    this.xhr.setRequestHeader('X-Tinode-Auth', 'Token ' + this._authToken.token);\n    this.xhr.responseType = 'blob';\n\n    this.onProgress = onProgress;\n    this.xhr.onprogress = function(e) {\n      if (instance.onProgress) {\n        // Passing e.loaded instead of e.loaded/e.total because e.total\n        // is always 0 with gzip compression enabled by the server.\n        instance.onProgress(e.loaded);\n      }\n    };\n\n    const result = new Promise((resolve, reject) => {\n      this.toResolve = resolve;\n      this.toReject = reject;\n    });\n\n    // The blob needs to be saved as file. There is no known way to\n    // save the blob as file other than to fake a click on an <a href... download=...>.\n    this.xhr.onload = function() {\n      if (this.status == 200) {\n        const link = document.createElement('a');\n        // URL.createObjectURL is not available in non-browser environment. This call will fail.\n        link.href = window.URL.createObjectURL(new Blob([this.response], {\n          type: mimetype\n        }));\n        link.style.display = 'none';\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(link.href);\n        if (instance.toResolve) {\n          instance.toResolve();\n        }\n      } else if (this.status >= 400 && instance.toReject) {\n        // The this.responseText is undefined, must use this.response which is a blob.\n        // Need to convert this.response to JSON. The blob can only be accessed by the\n        // FileReader.\n        const reader = new FileReader();\n        reader.onload = function() {\n          try {\n            const pkt = JSON.parse(this.result, jsonParseHelper);\n            instance.toReject(new Error(`${pkt.ctrl.text} (${pkt.ctrl.code})`));\n          } catch (err) {\n            instance._tinode.logger(\"ERROR: Invalid server response in LargeFileHelper\", this.result);\n            instance.toReject(err);\n          }\n        };\n        reader.readAsText(this.response);\n      }\n    };\n\n    this.xhr.onerror = function(e) {\n      if (instance.toReject) {\n        instance.toReject(new Error(\"failed\"));\n      }\n    };\n\n    this.xhr.onabort = function() {\n      if (instance.toReject) {\n        instance.toReject(null);\n      }\n    };\n\n    try {\n      this.xhr.send();\n    } catch (err) {\n      if (this.toReject) {\n        this.toReject(err);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Try to cancel an ongoing upload or download.\n   * @memberof Tinode.LargeFileHelper#\n   */\n  cancel() {\n    if (this.xhr && this.xhr.readyState < 4) {\n      this.xhr.abort();\n    }\n  }\n  /**\n   * Get unique id of this request.\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @returns {string} unique id\n   */\n  getId() {\n    return this._reqId;\n  }\n  /**\n   * To use LargeFileHelper in a non browser context, supply XMLHttpRequest provider.\n   * @static\n   * @memberof LargeFileHelper\n   * @param xhrProvider XMLHttpRequest provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProvider(xhrProvider) {\n    XHRProvider = xhrProvider;\n  }\n}\n","/**\n * @file Helper class for constructing {@link Tinode.GetQuery}.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n/**\n * Helper class for constructing {@link Tinode.GetQuery}.\n *\n * @class MetaGetBuilder\n * @memberof Tinode\n *\n * @param {Tinode.Topic} parent topic which instantiated this builder.\n */\nexport default class MetaGetBuilder {\n  constructor(parent) {\n    this.topic = parent;\n    this.what = {};\n  }\n\n  // Get timestamp of the most recent desc update.\n  #get_desc_ims() {\n    return this.topic.updated;\n  }\n\n  // Get timestamp of the most recent subs update.\n  #get_subs_ims() {\n    if (this.topic.isP2PType()) {\n      return this.#get_desc_ims();\n    }\n    return this.topic._lastSubsUpdate;\n  }\n  /**\n   * Add query parameters to fetch messages within explicit limits.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} since - messages newer than this (inclusive);\n   * @param {number=} before - older than this (exclusive)\n   * @param {number=} limit - number of messages to fetch\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withData(since, before, limit) {\n    this.what['data'] = {\n      since: since,\n      before: before,\n      limit: limit\n    };\n    return this;\n  }\n  /**\n   * Add query parameters to fetch messages newer than the latest saved message.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - number of messages to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterData(limit) {\n    return this.withData(this.topic._maxSeq > 0 ? this.topic._maxSeq + 1 : undefined, undefined, limit);\n  }\n  /**\n   * Add query parameters to fetch messages older than the earliest saved message.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - maximum number of messages to fetch.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withEarlierData(limit) {\n    return this.withData(undefined, this.topic._minSeq > 0 ? this.topic._minSeq : undefined, limit);\n  }\n  /**\n   * Add query parameters to fetch topic description if it's newer than the given timestamp.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch messages newer than this timestamp.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withDesc(ims) {\n    this.what['desc'] = {\n      ims: ims\n    };\n    return this;\n  }\n  /**\n   * Add query parameters to fetch topic description if it's newer than the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterDesc() {\n    return this.withDesc(this.#get_desc_ims());\n  }\n  /**\n   * Add query parameters to fetch subscriptions.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch subscriptions modified more recently than this timestamp\n   * @param {number=} limit - maximum number of subscriptions to fetch.\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withSub(ims, limit, userOrTopic) {\n    const opts = {\n      ims: ims,\n      limit: limit\n    };\n    if (this.topic.getType() == 'me') {\n      opts.topic = userOrTopic;\n    } else {\n      opts.user = userOrTopic;\n    }\n    this.what['sub'] = opts;\n    return this;\n  }\n  /**\n   * Add query parameters to fetch a single subscription.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch subscriptions modified more recently than this timestamp\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withOneSub(ims, userOrTopic) {\n    return this.withSub(ims, undefined, userOrTopic);\n  }\n  /**\n   * Add query parameters to fetch a single subscription if it's been updated since the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterOneSub(userOrTopic) {\n    return this.withOneSub(this.topic._lastSubsUpdate, userOrTopic);\n  }\n  /**\n   * Add query parameters to fetch subscriptions updated since the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - maximum number of subscriptions to fetch.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterSub(limit) {\n    return this.withSub(this.#get_subs_ims(), limit);\n  }\n  /**\n   * Add query parameters to fetch topic tags.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withTags() {\n    this.what['tags'] = true;\n    return this;\n  }\n  /**\n   * Add query parameters to fetch user's credentials. <code>'me'</code> topic only.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withCred() {\n    if (this.topic.getType() == 'me') {\n      this.what['cred'] = true;\n    } else {\n      this.topic._tinode.logger(\"ERROR: Invalid topic type for MetaGetBuilder:withCreds\", this.topic.getType());\n    }\n    return this;\n  }\n  /**\n   * Add query parameters to fetch deleted messages within explicit limits. Any/all parameters can be null.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} since - ids of messages deleted since this 'del' id (inclusive)\n   * @param {number=} limit - number of deleted message ids to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withDel(since, limit) {\n    if (since || limit) {\n      this.what['del'] = {\n        since: since,\n        limit: limit\n      };\n    }\n    return this;\n  }\n  /**\n   * Add query parameters to fetch messages deleted after the saved <code>'del'</code> id.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - number of deleted message ids to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterDel(limit) {\n    // Specify 'since' only if we have already received some messages. If\n    // we have no locally cached messages then we don't care if any messages were deleted.\n    return this.withDel(this.topic._maxSeq > 0 ? this.topic._maxDel + 1 : undefined, limit);\n  }\n\n  /**\n   * Extract subquery: get an object that contains specified subquery.\n   * @memberof Tinode.MetaGetBuilder#\n   * @param {string} what - subquery to return: one of 'data', 'sub', 'desc', 'tags', 'cred', 'del'.\n   * @returns {Object} requested subquery or <code>undefined</code>.\n   */\n  extract(what) {\n    return this.what[what];\n  }\n\n  /**\n   * Construct parameters.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.GetQuery} Get query\n   */\n  build() {\n    const what = [];\n    let params = {};\n    ['data', 'sub', 'desc', 'tags', 'cred', 'del'].forEach((key) => {\n      if (this.what.hasOwnProperty(key)) {\n        what.push(key);\n        if (Object.getOwnPropertyNames(this.what[key]).length > 0) {\n          params[key] = this.what[key];\n        }\n      }\n    });\n    if (what.length > 0) {\n      params.what = what.join(' ');\n    } else {\n      params = undefined;\n    }\n    return params;\n  }\n}\n","/**\n * @file Topic management.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport AccessMode from './access-mode.js';\nimport CBuffer from './cbuffer.js';\nimport * as Const from './config.js';\nimport Drafty from './drafty.js';\nimport MetaGetBuilder from './meta-builder.js';\nimport {\n  mergeObj,\n  mergeToCache,\n  normalizeArray\n} from './utils.js';\n\nexport class Topic {\n  /**\n   * @callback Tinode.Topic.onData\n   * @param {Data} data - Data packet\n   */\n  /**\n   * Topic is a class representing a logical communication channel.\n   * @class Topic\n   * @memberof Tinode\n   *\n   * @param {string} name - Name of the topic to create.\n   * @param {Object=} callbacks - Object with various event callbacks.\n   * @param {Tinode.Topic.onData} callbacks.onData - Callback which receives a <code>{data}</code> message.\n   * @param {callback} callbacks.onMeta - Callback which receives a <code>{meta}</code> message.\n   * @param {callback} callbacks.onPres - Callback which receives a <code>{pres}</code> message.\n   * @param {callback} callbacks.onInfo - Callback which receives an <code>{info}</code> message.\n   * @param {callback} callbacks.onMetaDesc - Callback which receives changes to topic desctioption {@link desc}.\n   * @param {callback} callbacks.onMetaSub - Called for a single subscription record change.\n   * @param {callback} callbacks.onSubsUpdated - Called after a batch of subscription changes have been recieved and cached.\n   * @param {callback} callbacks.onDeleteTopic - Called after the topic is deleted.\n   * @param {callback} callbacls.onAllMessagesReceived - Called when all requested <code>{data}</code> messages have been recived.\n   */\n  constructor(name, callbacks) {\n    // Parent Tinode object.\n    this._tinode = null;\n\n    // Server-provided data, locally immutable.\n    // topic name\n    this.name = name;\n    // Timestamp when the topic was created.\n    this.created = null;\n    // Timestamp when the topic was last updated.\n    this.updated = null;\n    // Timestamp of the last messages\n    this.touched = new Date(0);\n    // Access mode, see AccessMode\n    this.acs = new AccessMode(null);\n    // Per-topic private data (accessible by current user only).\n    this.private = null;\n    // Per-topic public data (accessible by all users).\n    this.public = null;\n    // Per-topic system-provided data (accessible by all users).\n    this.trusted = null;\n\n    // Locally cached data\n    // Subscribed users, for tracking read/recv/msg notifications.\n    this._users = {};\n\n    // Current value of locally issued seqId, used for pending messages.\n    this._queuedSeqId = Const.LOCAL_SEQID;\n\n    // The maximum known {data.seq} value.\n    this._maxSeq = 0;\n    // The minimum known {data.seq} value.\n    this._minSeq = 0;\n    // Indicator that the last request for earlier messages returned 0.\n    this._noEarlierMsgs = false;\n    // The maximum known deletion ID.\n    this._maxDel = 0;\n    // User discovery tags\n    this._tags = [];\n    // Credentials such as email or phone number.\n    this._credentials = [];\n    // Message cache, sorted by message seq values, from old to new.\n    this._messages = new CBuffer((a, b) => {\n      return a.seq - b.seq;\n    }, true);\n    // Boolean, true if the topic is currently live\n    this._attached = false;\n    // Timestap of the most recently updated subscription.\n    this._lastSubsUpdate = new Date(0);\n    // Topic created but not yet synced with the server. Used only during initialization.\n    this._new = true;\n    // The topic is deleted at the server, this is a local copy.\n    this._deleted = false;\n\n    // Callbacks\n    if (callbacks) {\n      this.onData = callbacks.onData;\n      this.onMeta = callbacks.onMeta;\n      this.onPres = callbacks.onPres;\n      this.onInfo = callbacks.onInfo;\n      // A single desc update;\n      this.onMetaDesc = callbacks.onMetaDesc;\n      // A single subscription record;\n      this.onMetaSub = callbacks.onMetaSub;\n      // All subscription records received;\n      this.onSubsUpdated = callbacks.onSubsUpdated;\n      this.onTagsUpdated = callbacks.onTagsUpdated;\n      this.onCredsUpdated = callbacks.onCredsUpdated;\n      this.onDeleteTopic = callbacks.onDeleteTopic;\n      this.onAllMessagesReceived = callbacks.onAllMessagesReceived;\n    }\n  }\n\n  // Static methods.\n\n  /**\n   * Determine topic type from topic's name: grp, p2p, me, fnd, sys.\n   * @memberof Tinode.Topic#\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {string} One of <code>\"me\"</code>, <code>\"fnd\"</code>, <code>\"sys\"</code>, <code>\"grp\"</code>,\n   *    <code>\"p2p\"</code> or <code>undefined</code>.\n   */\n  static topicType(name) {\n    const types = {\n      'me': Const.TOPIC_ME,\n      'fnd': Const.TOPIC_FND,\n      'grp': Const.TOPIC_GRP,\n      'new': Const.TOPIC_GRP,\n      'nch': Const.TOPIC_GRP,\n      'chn': Const.TOPIC_GRP,\n      'usr': Const.TOPIC_P2P,\n      'sys': Const.TOPIC_SYS\n    };\n    return types[(typeof name == 'string') ? name.substring(0, 3) : 'xxx'];\n  }\n\n  /**\n   * Check if the given topic name is a name of a 'me' topic.\n   * @memberof Tinode.Topic#\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a 'me' topic, <code>false</code> otherwise.\n   */\n  static isMeTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_ME;\n  }\n\n  /**\n   * Check if the given topic name is a name of a group topic.\n   * @memberof Tinode.Topic#\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a group topic, <code>false</code> otherwise.\n   */\n  static isGroupTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_GRP;\n  }\n\n  /**\n   * Check if the given topic name is a name of a p2p topic.\n   * @memberof Tinode.Topic#\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p topic, <code>false</code> otherwise.\n   */\n  static isP2PTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_P2P;\n  }\n\n  /**\n   * Check if the given topic name is a name of a communication topic, i.e. P2P or group.\n   * @memberof Tinode.Topic#\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p or group topic, <code>false</code> otherwise.\n   */\n  static isCommTopicName(name) {\n    return Topic.isP2PTopicName(name) || Topic.isGroupTopicName(name);\n  }\n\n  /**\n   * Check if the topic name is a name of a new topic.\n   * @memberof Tinode.Topic#\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a new topic, <code>false</code> otherwise.\n   */\n  static isNewGroupTopicName(name) {\n    return (typeof name == 'string') &&\n      (name.substring(0, 3) == Const.TOPIC_NEW || name.substring(0, 3) == Const.TOPIC_NEW_CHAN);\n  }\n\n  /**\n   * Check if the topic name is a name of a channel.\n   * @memberof Tinode.Topic#\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a channel, <code>false</code> otherwise.\n   */\n  static isChannelTopicName(name) {\n    return (typeof name == 'string') &&\n      (name.substring(0, 3) == Const.TOPIC_CHAN || name.substring(0, 3) == Const.TOPIC_NEW_CHAN);\n  }\n\n  /**\n   * Check if the topic is subscribed.\n   * @memberof Tinode.Topic#\n   * @returns {boolean} True is topic is attached/subscribed, false otherwise.\n   */\n  isSubscribed() {\n    return this._attached;\n  }\n\n  /**\n   * Request topic to subscribe. Wrapper for {@link Tinode#subscribe}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.GetQuery=} getParams - get query parameters.\n   * @param {Tinode.SetParams=} setParams - set parameters.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  subscribe(getParams, setParams) {\n    // If the topic is already subscribed, return resolved promise\n    if (this._attached) {\n      return Promise.resolve(this);\n    }\n\n    // If the topic is deleted, reject subscription requests.\n    if (this._deleted) {\n      return Promise.reject(new Error(\"Conversation deleted\"));\n    }\n\n    // Send subscribe message, handle async response.\n    // If topic name is explicitly provided, use it. If no name, then it's a new group topic,\n    // use \"new\".\n    return this._tinode.subscribe(this.name || Const.TOPIC_NEW, getParams, setParams).then((ctrl) => {\n      if (ctrl.code >= 300) {\n        // Do nothing if subscription status has not changed.\n        return ctrl;\n      }\n\n      this._attached = true;\n      this._deleted = false;\n      this.acs = (ctrl.params && ctrl.params.acs) ? ctrl.params.acs : this.acs;\n\n      // Set topic name for new topics and add it to cache.\n      if (this._new) {\n        delete this._new;\n\n        if (this.name != ctrl.topic) {\n          // Name may change new123456 -> grpAbCdEf. Remove from cache under the old name.\n          this._cacheDelSelf();\n          this.name = ctrl.topic;\n        }\n        this._cachePutSelf();\n\n        this.created = ctrl.ts;\n        this.updated = ctrl.ts;\n\n        if (this.name != Const.TOPIC_ME && this.name != Const.TOPIC_FND) {\n          // Add the new topic to the list of contacts maintained by the 'me' topic.\n          const me = this._tinode.getMeTopic();\n          if (me.onMetaSub) {\n            me.onMetaSub(this);\n          }\n          if (me.onSubsUpdated) {\n            me.onSubsUpdated([this.name], 1);\n          }\n        }\n\n        if (setParams && setParams.desc) {\n          setParams.desc._noForwarding = true;\n          this._processMetaDesc(setParams.desc);\n        }\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * Create a draft of a message without sending it to the server.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string | Object} data - Content to wrap in a draft.\n   * @param {boolean=} noEcho - If <code>true</code> server will not echo message back to originating\n   * session. Otherwise the server will send a copy of the message to sender.\n   *\n   * @returns {Object} message draft.\n   */\n  createMessage(data, noEcho) {\n    return this._tinode.createMessage(this.name, data, noEcho);\n  }\n  /**\n   * Immediately publish data to topic. Wrapper for {@link Tinode#publish}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string | Object} data - Data to publish, either plain string or a Drafty object.\n   * @param {boolean=} noEcho - If <code>true</code> server will not echo message back to originating\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  publish(data, noEcho) {\n    return this.publishMessage(this.createMessage(data, noEcho));\n  }\n  /**\n   * Publish message created by {@link Tinode.Topic#createMessage}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub - {data} object to publish. Must be created by {@link Tinode.Topic#createMessage}\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  publishMessage(pub) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot publish on inactive topic\"));\n    }\n    if (this._sending) {\n      return Promise.reject(new Error(\"The message is already being sent\"));\n    }\n\n    // Send data.\n    pub._sending = true;\n    pub._failed = false;\n\n    // Extract refereces to attachments and out of band image records.\n    let attachments = null;\n    if (Drafty.hasEntities(pub.content)) {\n      attachments = [];\n      Drafty.entities(pub.content, (data) => {\n        if (data && data.ref) {\n          attachments.push(data.ref);\n        }\n      });\n      if (attachments.length == 0) {\n        attachments = null;\n      }\n    }\n\n    return this._tinode.publishMessage(pub, attachments).then((ctrl) => {\n      pub._sending = false;\n      pub.ts = ctrl.ts;\n      this.swapMessageId(pub, ctrl.params.seq);\n      this._routeData(pub);\n      return ctrl;\n    }).catch((err) => {\n      this._tinode.logger(\"WARNING: Message rejected by the server\", err);\n      pub._sending = false;\n      pub._failed = true;\n      if (this.onData) {\n        this.onData();\n      }\n    });\n  }\n  /**\n   * Add message to local message cache, send to the server when the promise is resolved.\n   * If promise is null or undefined, the message will be sent immediately.\n   * The message is sent when the\n   * The message should be created by {@link Tinode.Topic#createMessage}.\n   * This is probably not the final API.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub - Message to use as a draft.\n   * @param {Promise} prom - Message will be sent when this promise is resolved, discarded if rejected.\n   *\n   * @returns {Promise} derived promise.\n   */\n  publishDraft(pub, prom) {\n    const seq = pub.seq || this._getQueuedSeqId();\n    if (!pub._noForwarding) {\n      // The 'seq', 'ts', and 'from' are added to mimic {data}. They are removed later\n      // before the message is sent.\n      pub._noForwarding = true;\n      pub.seq = seq;\n      pub.ts = new Date();\n      pub.from = this._tinode.getCurrentUserID();\n\n      // Don't need an echo message because the message is added to local cache right away.\n      pub.noecho = true;\n      // Add to cache.\n      this._messages.put(pub);\n      this._tinode._db.addMessage(pub);\n\n      if (this.onData) {\n        this.onData(pub);\n      }\n    }\n    // If promise is provided, send the queued message when it's resolved.\n    // If no promise is provided, create a resolved one and send immediately.\n    return (prom || Promise.resolve())\n      .then(_ => {\n        if (pub._cancelled) {\n          return {\n            code: 300,\n            text: \"cancelled\"\n          };\n        }\n        return this.publishMessage(pub);\n      }).catch(err => {\n        this._tinode.logger(\"WARNING: Message draft rejected\", err);\n        pub._sending = false;\n        pub._failed = true;\n        if (this.onData) {\n          this.onData();\n        }\n        // Rethrow to let caller know that the operation failed.\n        throw err;\n      });\n  }\n\n  /**\n   * Leave the topic, optionally unsibscribe. Leaving the topic means the topic will stop\n   * receiving updates from the server. Unsubscribing will terminate user's relationship with the topic.\n   * Wrapper for {@link Tinode#leave}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean=} unsub - If true, unsubscribe, otherwise just leave.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  leave(unsub) {\n    // It's possible to unsubscribe (unsub==true) from inactive topic.\n    if (!this._attached && !unsub) {\n      return Promise.reject(new Error(\"Cannot leave inactive topic\"));\n    }\n\n    // Send a 'leave' message, handle async response\n    return this._tinode.leave(this.name, unsub).then((ctrl) => {\n      this._resetSub();\n      if (unsub) {\n        this._gone();\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * Request topic metadata from the server.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.GetQuery} request parameters\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  getMeta(params) {\n    // Send {get} message, return promise.\n    return this._tinode.getMeta(this.name, params);\n  }\n\n  /**\n   * Request more messages from the server\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} limit number of messages to get.\n   * @param {boolean} forward if true, request newer messages.\n   */\n  getMessagesPage(limit, forward) {\n    let query = forward ?\n      this.startMetaQuery().withLaterData(limit) :\n      this.startMetaQuery().withEarlierData(limit);\n\n    // First try fetching from DB, then from the server.\n    return this._loadMessages(this._tinode._db, query.extract('data'))\n      .then((count) => {\n        if (count == limit) {\n          // Got enough messages from local cache.\n          return Promise.resolve({\n            topic: this.name,\n            code: 200,\n            params: {\n              count: count\n            }\n          });\n        }\n\n        // Reduce the count of requested messages.\n        limit -= count;\n        // Update query with new values loaded from DB.\n        query = forward ? this.startMetaQuery().withLaterData(limit) :\n          this.startMetaQuery().withEarlierData(limit);\n        let promise = this.getMeta(query.build());\n        if (!forward) {\n          promise = promise.then((ctrl) => {\n            if (ctrl && ctrl.params && !ctrl.params.count) {\n              this._noEarlierMsgs = true;\n            }\n          });\n        }\n        return promise;\n      });\n  }\n  /**\n   * Update topic metadata.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.SetParams} params parameters to update.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  setMeta(params) {\n    if (params.tags) {\n      params.tags = normalizeArray(params.tags);\n    }\n    // Send Set message, handle async response.\n    return this._tinode.setMeta(this.name, params)\n      .then((ctrl) => {\n        if (ctrl && ctrl.code >= 300) {\n          // Not modified\n          return ctrl;\n        }\n\n        if (params.sub) {\n          params.sub.topic = this.name;\n          if (ctrl.params && ctrl.params.acs) {\n            params.sub.acs = ctrl.params.acs;\n            params.sub.updated = ctrl.ts;\n          }\n          if (!params.sub.user) {\n            // This is a subscription update of the current user.\n            // Assign user ID otherwise the update will be ignored by _processMetaSub.\n            params.sub.user = this._tinode.getCurrentUserID();\n            if (!params.desc) {\n              // Force update to topic's asc.\n              params.desc = {};\n            }\n          }\n          params.sub._noForwarding = true;\n          this._processMetaSub([params.sub]);\n        }\n\n        if (params.desc) {\n          if (ctrl.params && ctrl.params.acs) {\n            params.desc.acs = ctrl.params.acs;\n            params.desc.updated = ctrl.ts;\n          }\n          this._processMetaDesc(params.desc);\n        }\n\n        if (params.tags) {\n          this._processMetaTags(params.tags);\n        }\n        if (params.cred) {\n          this._processMetaCreds([params.cred], true);\n        }\n\n        return ctrl;\n      });\n  }\n  /**\n   * Update access mode of the current user or of another topic subsriber.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - UID of the user to update or null to update current user.\n   * @param {string} update - the update value, full or delta.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  updateMode(uid, update) {\n    const user = uid ? this.subscriber(uid) : null;\n    const am = user ?\n      user.acs.updateGiven(update).getGiven() :\n      this.getAccessMode().updateWant(update).getWant();\n\n    return this.setMeta({\n      sub: {\n        user: uid,\n        mode: am\n      }\n    });\n  }\n  /**\n   * Create new topic subscription. Wrapper for {@link Tinode#setMeta}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - ID of the user to invite\n   * @param {string=} mode - Access mode. <code>null</code> means to use default.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  invite(uid, mode) {\n    return this.setMeta({\n      sub: {\n        user: uid,\n        mode: mode\n      }\n    });\n  }\n  /**\n   * Archive or un-archive the topic. Wrapper for {@link Tinode#setMeta}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} arch - true to archive the topic, false otherwise.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  archive(arch) {\n    if (this.private && (!this.private.arch == !arch)) {\n      return Promise.resolve(arch);\n    }\n    return this.setMeta({\n      desc: {\n        private: {\n          arch: arch ? true : Const.DEL_CHAR\n        }\n      }\n    });\n  }\n  /**\n   * Delete messages. Hard-deleting messages requires Owner permission.\n   * Wrapper for {@link Tinode#delMessages}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.DelRange[]} ranges - Ranges of message IDs to delete.\n   * @param {boolean=} hard - Hard or soft delete\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessages(ranges, hard) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete messages in inactive topic\"));\n    }\n\n    // Sort ranges in accending order by low, the descending by hi.\n    ranges.sort((r1, r2) => {\n      if (r1.low < r2.low) {\n        return true;\n      }\n      if (r1.low == r2.low) {\n        return !r2.hi || (r1.hi >= r2.hi);\n      }\n      return false;\n    });\n\n    // Remove pending messages from ranges possibly clipping some ranges.\n    let tosend = ranges.reduce((out, r) => {\n      if (r.low < Const.LOCAL_SEQID) {\n        if (!r.hi || r.hi < Const.LOCAL_SEQID) {\n          out.push(r);\n        } else {\n          // Clip hi to max allowed value.\n          out.push({\n            low: r.low,\n            hi: this._maxSeq + 1\n          });\n        }\n      }\n      return out;\n    }, []);\n\n    // Send {del} message, return promise\n    let result;\n    if (tosend.length > 0) {\n      result = this._tinode.delMessages(this.name, tosend, hard);\n    } else {\n      result = Promise.resolve({\n        params: {\n          del: 0\n        }\n      });\n    }\n    // Update local cache.\n    return result.then((ctrl) => {\n      if (ctrl.params.del > this._maxDel) {\n        this._maxDel = ctrl.params.del;\n      }\n\n      ranges.forEach((r) => {\n        if (r.hi) {\n          this.flushMessageRange(r.low, r.hi);\n        } else {\n          this.flushMessage(r.low);\n        }\n      });\n\n      this._updateDeletedRanges();\n\n      if (this.onData) {\n        // Calling with no parameters to indicate the messages were deleted.\n        this.onData();\n      }\n      return ctrl;\n    });\n  }\n  /**\n   * Delete all messages. Hard-deleting messages requires Owner permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessagesAll(hardDel) {\n    if (!this._maxSeq || this._maxSeq <= 0) {\n      // There are no messages to delete.\n      return Promise.resolve();\n    }\n    return this.delMessages([{\n      low: 1,\n      hi: this._maxSeq + 1,\n      _all: true\n    }], hardDel);\n  }\n  /**\n   * Delete multiple messages defined by their IDs. Hard-deleting messages requires Owner permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.DelRange[]} list - list of seq IDs to delete\n   * @param {boolean=} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessagesList(list, hardDel) {\n    // Sort the list in ascending order\n    list.sort((a, b) => a - b);\n    // Convert the array of IDs to ranges.\n    let ranges = list.reduce((out, id) => {\n      if (out.length == 0) {\n        // First element.\n        out.push({\n          low: id\n        });\n      } else {\n        let prev = out[out.length - 1];\n        if ((!prev.hi && (id != prev.low + 1)) || (id > prev.hi)) {\n          // New range.\n          out.push({\n            low: id\n          });\n        } else {\n          // Expand existing range.\n          prev.hi = prev.hi ? Math.max(prev.hi, id + 1) : id + 1;\n        }\n      }\n      return out;\n    }, []);\n    // Send {del} message, return promise\n    return this.delMessages(ranges, hardDel);\n  }\n  /**\n   * Delete topic. Requires Owner permission. Wrapper for {@link Tinode#delTopic}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} hard - had-delete topic.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  delTopic(hard) {\n    if (this._deleted) {\n      // The topic is already deleted at the server, just remove from DB.\n      this._gone();\n      return Promise.resolve(null);\n    }\n\n    return this._tinode.delTopic(this.name, hard).then((ctrl) => {\n      this._deleted = true;\n      this._resetSub();\n      this._gone();\n      return ctrl;\n    });\n  }\n  /**\n   * Delete subscription. Requires Share permission. Wrapper for {@link Tinode#delSubscription}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} user - ID of the user to remove subscription for.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delSubscription(user) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete subscription in inactive topic\"));\n    }\n    // Send {del} message, return promise\n    return this._tinode.delSubscription(this.name, user).then((ctrl) => {\n      // Remove the object from the subscription cache;\n      delete this._users[user];\n      // Notify listeners\n      if (this.onSubsUpdated) {\n        this.onSubsUpdated(Object.keys(this._users));\n      }\n      return ctrl;\n    });\n  }\n  /**\n   * Send a read/recv notification.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} what - what notification to send: <code>recv</code>, <code>read</code>.\n   * @param {number} seq - ID or the message read or received.\n   */\n  note(what, seq) {\n    if (!this._attached) {\n      // Cannot sending {note} on an inactive topic\".\n      return;\n    }\n\n    // Update local cache with the new count.\n    const user = this._users[this._tinode.getCurrentUserID()];\n    let update = false;\n    if (user) {\n      // Self-subscription is found.\n      if (!user[what] || user[what] < seq) {\n        user[what] = seq;\n        update = true;\n      }\n    } else {\n      // Self-subscription is not found.\n      update = (this[what] | 0) < seq;\n    }\n\n    if (update) {\n      // Send notification to the server.\n      this._tinode.note(this.name, what, seq);\n      // Update locally cached contact with the new count.\n      this._updateReadRecv(what, seq);\n\n      if (this.acs != null && !this.acs.isMuted()) {\n        const me = this._tinode.getMeTopic();\n        // Sent a notification to 'me' listeners.\n        me._refreshContact(what, this);\n      }\n    }\n  }\n  /**\n   * Send a 'recv' receipt. Wrapper for {@link Tinode#noteRecv}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - ID of the message to aknowledge.\n   */\n  noteRecv(seq) {\n    this.note('recv', seq);\n  }\n  /**\n   * Send a 'read' receipt. Wrapper for {@link Tinode#noteRead}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - ID of the message to aknowledge or 0/undefined to acknowledge the latest messages.\n   */\n  noteRead(seq) {\n    seq = seq || this._maxSeq;\n    if (seq > 0) {\n      this.note('read', seq);\n    }\n  }\n  /**\n   * Send a key-press notification. Wrapper for {@link Tinode#noteKeyPress}.\n   * @memberof Tinode.Topic#\n   */\n  noteKeyPress() {\n    if (this._attached) {\n      this._tinode.noteKeyPress(this.name);\n    } else {\n      this._tinode.logger(\"INFO: Cannot send notification in inactive topic\");\n    }\n  }\n  // Update cached read/recv/unread counts.\n  _updateReadRecv(what, seq, ts) {\n    let oldVal, doUpdate = false;\n\n    seq = seq | 0;\n    this.seq = this.seq | 0;\n    this.read = this.read | 0;\n    this.recv = this.recv | 0;\n    switch (what) {\n      case 'recv':\n        oldVal = this.recv;\n        this.recv = Math.max(this.recv, seq);\n        doUpdate = (oldVal != this.recv);\n        break;\n      case 'read':\n        oldVal = this.read;\n        this.read = Math.max(this.read, seq);\n        doUpdate = (oldVal != this.read);\n        break;\n      case 'msg':\n        oldVal = this.seq;\n        this.seq = Math.max(this.seq, seq);\n        if (!this.touched || this.touched < ts) {\n          this.touched = ts;\n        }\n        doUpdate = (oldVal != this.seq);\n        break;\n    }\n\n    // Sanity checks.\n    if (this.recv < this.read) {\n      this.recv = this.read;\n      doUpdate = true;\n    }\n    if (this.seq < this.recv) {\n      this.seq = this.recv;\n      if (!this.touched || this.touched < ts) {\n        this.touched = ts;\n      }\n      doUpdate = true;\n    }\n    this.unread = this.seq - this.read;\n    return doUpdate;\n  }\n  /**\n   * Get user description from global cache. The user does not need to be a\n   * subscriber of this topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - ID of the user to fetch.\n   * @return {Object} user description or undefined.\n   */\n  userDesc(uid) {\n    // TODO: handle asynchronous requests\n    const user = this._cacheGetUser(uid);\n    if (user) {\n      return user; // Promise.resolve(user)\n    }\n  }\n  /**\n   * Get description of the p2p peer from subscription cache.\n   * @memberof Tinode.Topic#\n   *\n   * @return {Object} peer's description or undefined.\n   */\n  p2pPeerDesc() {\n    if (!this.isP2PType()) {\n      return undefined;\n    }\n    return this._users[this.name];\n  }\n  /**\n   * Iterate over cached subscribers. If callback is undefined, use this.onMetaSub.\n   * @memberof Tinode.Topic#\n   *\n   * @param {function} callback - Callback which will receive subscribers one by one.\n   * @param {Object=} context - Value of `this` inside the `callback`.\n   */\n  subscribers(callback, context) {\n    const cb = (callback || this.onMetaSub);\n    if (cb) {\n      for (let idx in this._users) {\n        cb.call(context, this._users[idx], idx, this._users);\n      }\n    }\n  }\n  /**\n   * Get a copy of cached tags.\n   * @memberof Tinode.Topic#\n   *\n   * @return {Array.<string>} a copy of tags\n   */\n  tags() {\n    // Return a copy.\n    return this._tags.slice(0);\n  }\n  /**\n   * Get cached subscription for the given user ID.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - id of the user to query for\n   * @return user description or undefined.\n   */\n  subscriber(uid) {\n    return this._users[uid];\n  }\n  /**\n   * Iterate over cached messages: call <code>callback</code> for each message in the range [sindeIdx, beforeIdx).\n   * If <code>callback</code> is undefined, use <code>this.onData</code>.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.ForEachCallbackType} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {number} sinceId - Optional seqId to start iterating from (inclusive).\n   * @param {number} beforeId - Optional seqId to stop iterating before it is reached (exclusive).\n   * @param {Object} context - Value of `this` inside the `callback`.\n   */\n  messages(callback, sinceId, beforeId, context) {\n    const cb = (callback || this.onData);\n    if (cb) {\n      const startIdx = typeof sinceId == 'number' ? this._messages.find({\n        seq: sinceId\n      }, true) : undefined;\n      const beforeIdx = typeof beforeId == 'number' ? this._messages.find({\n        seq: beforeId\n      }, true) : undefined;\n      if (startIdx != -1 && beforeIdx != -1) {\n        this._messages.forEach(cb, startIdx, beforeIdx, context);\n      }\n    }\n  }\n  /**\n   * Get the message from cache by <code>seq</code>.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - message seqId to search for.\n   * @returns {Object} the message with the given <code>seq</code> or <code>undefined</code>, if no such message is found.\n   */\n  findMessage(seq) {\n    const idx = this._messages.find({\n      seq: seq\n    });\n    if (idx >= 0) {\n      return this._messages.getAt(idx);\n    }\n    return undefined;\n  }\n  /**\n   * Get the most recent message from cache. This method counts all messages, including deleted ranges.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolen} skipDeleted - if the last message is a deleted range, get the one before it.\n   * @returns {Object} the most recent cached message or <code>undefined</code>, if no messages are cached.\n   */\n  latestMessage(skipDeleted) {\n    const msg = this._messages.getLast();\n    if (!skipDeleted || !msg || msg._status != Const.MESSAGE_STATUS_DEL_RANGE) {\n      return msg;\n    }\n    return this._messages.getLast(1);\n  }\n  /**\n   * Get the maximum cached seq ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the greatest seq ID in cache.\n   */\n  maxMsgSeq() {\n    return this._maxSeq;\n  }\n  /**\n   * Get the maximum deletion ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the greatest deletion ID.\n   */\n  maxClearId() {\n    return this._maxDel;\n  }\n  /**\n   * Get the number of messages in the cache.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} count of cached messages.\n   */\n  messageCount() {\n    return this._messages.length();\n  }\n  /**\n   * Iterate over cached unsent messages. Wraps {@link Tinode.Topic#messages}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {function} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {Object} context - Value of <code>this</code> inside the <code>callback</code>.\n   */\n  queuedMessages(callback, context) {\n    if (!callback) {\n      throw new Error(\"Callback must be provided\");\n    }\n    this.messages(callback, Const.LOCAL_SEQID, undefined, context);\n  }\n  /**\n   * Get the number of topic subscribers who marked this message as either recv or read\n   * Current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} what - what action to consider: received <code>\"recv\"</code> or read <code>\"read\"</code>.\n   * @param {number} seq - ID or the message read or received.\n   *\n   * @returns {number} the number of subscribers who marked the message with the given ID as read or received.\n   */\n  msgReceiptCount(what, seq) {\n    let count = 0;\n    if (seq > 0) {\n      const me = this._tinode.getCurrentUserID();\n      for (let idx in this._users) {\n        const user = this._users[idx];\n        if (user.user !== me && user[what] >= seq) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n  /**\n   * Get the number of topic subscribers who marked this message (and all older messages) as read.\n   * The current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - message id to check.\n   * @returns {number} number of subscribers who claim to have received the message.\n   */\n  msgReadCount(seq) {\n    return this.msgReceiptCount('read', seq);\n  }\n  /**\n   * Get the number of topic subscribers who marked this message (and all older messages) as received.\n   * The current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - Message id to check.\n   * @returns {number} Number of subscribers who claim to have received the message.\n   */\n  msgRecvCount(seq) {\n    return this.msgReceiptCount('recv', seq);\n  }\n  /**\n   * Check if cached message IDs indicate that the server may have more messages.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} newer - if <code>true</code>, check for newer messages only.\n   */\n  msgHasMoreMessages(newer) {\n    return newer ? this.seq > this._maxSeq :\n      // _minSeq could be more than 1, but earlier messages could have been deleted.\n      (this._minSeq > 1 && !this._noEarlierMsgs);\n  }\n  /**\n   * Check if the given seq Id is id of the most recent message.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to check\n   */\n  isNewMessage(seqId) {\n    return this._maxSeq <= seqId;\n  }\n  /**\n   * Remove one message from local cache.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to remove from cache.\n   * @returns {Message} removed message or undefined if such message was not found.\n   */\n  flushMessage(seqId) {\n    const idx = this._messages.find({\n      seq: seqId\n    });\n    if (idx >= 0) {\n      this._tinode._db.remMessages(this.name, seqId);\n      return this._messages.delAt(idx);\n    }\n    return undefined;\n  }\n  /**\n   * Update message's seqId.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub message object.\n   * @param {number} newSeqId new seq id for pub.\n   */\n  swapMessageId(pub, newSeqId) {\n    const idx = this._messages.find(pub);\n    const numMessages = this._messages.length();\n    if (0 <= idx && idx < numMessages) {\n      // Remove message with the old seq ID.\n      this._messages.delAt(idx);\n      this._tinode._db.remMessages(this.name, pub.seq);\n      // Add message with the new seq ID.\n      pub.seq = newSeqId;\n      this._messages.put(pub);\n      this._tinode._db.addMessage(pub);\n    }\n  }\n  /**\n   * Remove a range of messages from the local cache.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} fromId seq ID of the first message to remove (inclusive).\n   * @param {number} untilId seqID of the last message to remove (exclusive).\n   *\n   * @returns {Message[]} array of removed messages (could be empty).\n   */\n  flushMessageRange(fromId, untilId) {\n    // Remove range from persistent cache.\n    this._tinode._db.remMessages(this.name, fromId, untilId);\n    // start, end: find insertion points (nearest == true).\n    const since = this._messages.find({\n      seq: fromId\n    }, true);\n    return since >= 0 ? this._messages.delRange(since, this._messages.find({\n      seq: untilId\n    }, true)) : [];\n  }\n  /**\n   * Attempt to stop message from being sent.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to stop sending and remove from cache.\n   *\n   * @returns {boolean} <code>true</code> if message was cancelled, <code>false</code> otherwise.\n   */\n  cancelSend(seqId) {\n    const idx = this._messages.find({\n      seq: seqId\n    });\n    if (idx >= 0) {\n      const msg = this._messages.getAt(idx);\n      const status = this.msgStatus(msg);\n      if (status == Const.MESSAGE_STATUS_QUEUED || status == Const.MESSAGE_STATUS_FAILED) {\n        this._tinode._db.remMessages(this.name, seqId);\n        msg._cancelled = true;\n        this._messages.delAt(idx);\n        if (this.onData) {\n          // Calling with no parameters to indicate the message was deleted.\n          this.onData();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Get type of the topic: me, p2p, grp, fnd...\n   * @memberof Tinode.Topic#\n   *\n   * @returns {string} One of 'me', 'p2p', 'grp', 'fnd', 'sys' or <code>undefined</code>.\n   */\n  getType() {\n    return Topic.topicType(this.name);\n  }\n  /**\n   * Get current user's access mode of the topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.AccessMode} - user's access mode\n   */\n  getAccessMode() {\n    return this.acs;\n  }\n  /**\n   * Set current user's access mode of the topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {AccessMode | Object} acs - access mode to set.\n   */\n  setAccessMode(acs) {\n    return this.acs = new AccessMode(acs);\n  }\n  /**\n   * Get topic's default access mode.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.DefAcs} - access mode, such as {auth: `RWP`, anon: `N`}.\n   */\n  getDefaultAccess() {\n    return this.defacs;\n  }\n  /**\n   * Initialize new meta {@link Tinode.GetQuery} builder. The query is attched to the current topic.\n   * It will not work correctly if used with a different topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.MetaGetBuilder} query attached to the current topic.\n   */\n  startMetaQuery() {\n    return new MetaGetBuilder(this);\n  }\n  /**\n   * Check if topic is archived, i.e. private.arch == true.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is archived, <code>false</code> otherwise.\n   */\n  isArchived() {\n    return this.private && !!this.private.arch;\n  }\n  /**\n   * Check if topic is a 'me' topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a 'me' topic, <code>false</code> otherwise.\n   */\n  isMeType() {\n    return Topic.isMeTopicName(this.name);\n  }\n  /**\n   * Check if topic is a channel.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a channel, <code>false</code> otherwise.\n   */\n  isChannelType() {\n    return Topic.isChannelTopicName(this.name);\n  }\n  /**\n   * Check if topic is a group topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a group, <code>false</code> otherwise.\n   */\n  isGroupType() {\n    return Topic.isGroupTopicName(this.name);\n  }\n  /**\n   * Check if topic is a p2p topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a p2p topic, <code>false</code> otherwise.\n   */\n  isP2PType() {\n    return Topic.isP2PTopicName(this.name);\n  }\n  /**\n   * Check if topic is a communication topic, i.e. a group or p2p topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a p2p or group topic, <code>false</code> otherwise.\n   */\n  isCommType() {\n    return Topic.isCommTopicName(this.name);\n  }\n  /**\n   * Get status (queued, sent, received etc) of a given message in the context\n   * of this topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Message} msg - message to check for status.\n   * @param {boolean} upd - update chached message status.\n   *\n   * @returns message status constant.\n   */\n  msgStatus(msg, upd) {\n    let status = Const.MESSAGE_STATUS_NONE;\n    if (this._tinode.isMe(msg.from)) {\n      if (msg._sending) {\n        status = Const.MESSAGE_STATUS_SENDING;\n      } else if (msg._failed || msg._cancelled) {\n        status = Const.MESSAGE_STATUS_FAILED;\n      } else if (msg.seq >= Const.LOCAL_SEQID) {\n        status = Const.MESSAGE_STATUS_QUEUED;\n      } else if (this.msgReadCount(msg.seq) > 0) {\n        status = Const.MESSAGE_STATUS_READ;\n      } else if (this.msgRecvCount(msg.seq) > 0) {\n        status = Const.MESSAGE_STATUS_RECEIVED;\n      } else if (msg.seq > 0) {\n        status = Const.MESSAGE_STATUS_SENT;\n      }\n    } else if (msg._status == Const.MESSAGE_STATUS_DEL_RANGE) {\n      status == Const.MESSAGE_STATUS_DEL_RANGE;\n    } else {\n      status = Const.MESSAGE_STATUS_TO_ME;\n    }\n\n    if (upd && msg._status != status) {\n      msg._status = status;\n      this._tinode._db.updMessageStatus(this.name, msg.seq, status);\n    }\n\n    return status;\n  }\n  // Process data message\n  _routeData(data) {\n    if (data.content) {\n      if (!this.touched || this.touched < data.ts) {\n        this.touched = data.ts;\n        this._tinode._db.updTopic(this);\n      }\n    }\n\n    if (data.seq > this._maxSeq) {\n      this._maxSeq = data.seq;\n    }\n    if (data.seq < this._minSeq || this._minSeq == 0) {\n      this._minSeq = data.seq;\n    }\n\n    if (!data._noForwarding) {\n      this._messages.put(data);\n      this._tinode._db.addMessage(data);\n      this._updateDeletedRanges();\n    }\n\n    if (this.onData) {\n      this.onData(data);\n    }\n\n    // Update locally cached contact with the new message count.\n    const what = ((!this.isChannelType() && !data.from) || this._tinode.isMe(data.from)) ? 'read' : 'msg';\n    this._updateReadRecv(what, data.seq, data.ts);\n    // Notify 'me' listeners of the change.\n    this._tinode.getMeTopic()._refreshContact(what, this);\n  }\n  // Process metadata message\n  _routeMeta(meta) {\n    if (meta.desc) {\n      this._processMetaDesc(meta.desc);\n    }\n    if (meta.sub && meta.sub.length > 0) {\n      this._processMetaSub(meta.sub);\n    }\n    if (meta.del) {\n      this._processDelMessages(meta.del.clear, meta.del.delseq);\n    }\n    if (meta.tags) {\n      this._processMetaTags(meta.tags);\n    }\n    if (meta.cred) {\n      this._processMetaCreds(meta.cred);\n    }\n    if (this.onMeta) {\n      this.onMeta(meta);\n    }\n  }\n  // Process presence change message\n  _routePres(pres) {\n    let user, uid;\n    switch (pres.what) {\n      case 'del':\n        // Delete cached messages.\n        this._processDelMessages(pres.clear, pres.delseq);\n        break;\n      case 'on':\n      case 'off':\n        // Update online status of a subscription.\n        user = this._users[pres.src];\n        if (user) {\n          user.online = pres.what == 'on';\n        } else {\n          this._tinode.logger(\"WARNING: Presence update for an unknown user\", this.name, pres.src);\n        }\n        break;\n      case 'term':\n        // Attachment to topic is terminated probably due to cluster rehashing.\n        this._resetSub();\n        break;\n      case 'upd':\n        // A topic subscriber has updated his description.\n        // Issue {get sub} only if the current user has no p2p topics with the updated user (p2p name is not in cache).\n        // Otherwise 'me' will issue a {get desc} request.\n        if (pres.src && !this._tinode.isTopicCached(pres.src)) {\n          this.getMeta(this.startMetaQuery().withLaterOneSub(pres.src).build());\n        }\n        break;\n      case 'acs':\n        uid = pres.src || this._tinode.getCurrentUserID();\n        user = this._users[uid];\n        if (!user) {\n          // Update for an unknown user: notification of a new subscription.\n          const acs = new AccessMode().updateAll(pres.dacs);\n          if (acs && acs.mode != AccessMode._NONE) {\n            user = this._cacheGetUser(uid);\n            if (!user) {\n              user = {\n                user: uid,\n                acs: acs\n              };\n              this.getMeta(this.startMetaQuery().withOneSub(undefined, uid).build());\n            } else {\n              user.acs = acs;\n            }\n            user.updated = new Date();\n            this._processMetaSub([user]);\n          }\n        } else {\n          // Known user\n          user.acs.updateAll(pres.dacs);\n          // Update user's access mode.\n          this._processMetaSub([{\n            user: uid,\n            updated: new Date(),\n            acs: user.acs\n          }]);\n        }\n        break;\n      default:\n        this._tinode.logger(\"INFO: Ignored presence update\", pres.what);\n    }\n\n    if (this.onPres) {\n      this.onPres(pres);\n    }\n  }\n  // Process {info} message\n  _routeInfo(info) {\n    if (info.what !== 'kp') {\n      const user = this._users[info.from];\n      if (user) {\n        user[info.what] = info.seq;\n        if (user.recv < user.read) {\n          user.recv = user.read;\n        }\n      }\n      const msg = this.latestMessage();\n      if (msg) {\n        this.msgStatus(msg, true);\n      }\n\n      // If this is an update from the current user, update the cache with the new count.\n      if (this._tinode.isMe(info.from)) {\n        this._updateReadRecv(info.what, info.seq);\n      }\n\n      // Notify 'me' listener of the status change.\n      this._tinode.getMeTopic()._refreshContact(info.what, this);\n    }\n    if (this.onInfo) {\n      this.onInfo(info);\n    }\n  }\n  // Called by Tinode when meta.desc packet is received.\n  // Called by 'me' topic on contact update (desc._noForwarding is true).\n  _processMetaDesc(desc) {\n    if (this.isP2PType()) {\n      // Synthetic desc may include defacs for p2p topics which is useless.\n      // Remove it.\n      delete desc.defacs;\n\n      // Update to p2p desc is the same as user update. Update cached user.\n      this._tinode._db.updUser(this.name, desc.public);\n    }\n\n    // Copy parameters from desc object to this topic.\n    mergeObj(this, desc);\n    // Update persistent cache.\n    this._tinode._db.updTopic(this);\n\n    // Notify 'me' listener, if available:\n    if (this.name !== Const.TOPIC_ME && !desc._noForwarding) {\n      const me = this._tinode.getMeTopic();\n      if (me.onMetaSub) {\n        me.onMetaSub(this);\n      }\n      if (me.onSubsUpdated) {\n        me.onSubsUpdated([this.name], 1);\n      }\n    }\n\n    if (this.onMetaDesc) {\n      this.onMetaDesc(this);\n    }\n  }\n  // Called by Tinode when meta.sub is recived or in response to received\n  // {ctrl} after setMeta-sub.\n  _processMetaSub(subs) {\n    for (let idx in subs) {\n      const sub = subs[idx];\n\n      // Fill defaults.\n      sub.online = !!sub.online;\n      // Update timestamp of the most recent subscription update.\n      this._lastSubsUpdate = new Date(Math.max(this._lastSubsUpdate, sub.updated));\n\n      let user = null;\n      if (!sub.deleted) {\n        // If this is a change to user's own permissions, update them in topic too.\n        // Desc will update 'me' topic.\n        if (this._tinode.isMe(sub.user) && sub.acs) {\n          this._processMetaDesc({\n            updated: sub.updated,\n            touched: sub.touched,\n            acs: sub.acs\n          });\n        }\n        user = this._updateCachedUser(sub.user, sub);\n      } else {\n        // Subscription is deleted, remove it from topic (but leave in Users cache)\n        delete this._users[sub.user];\n        user = sub;\n      }\n\n      if (this.onMetaSub) {\n        this.onMetaSub(user);\n      }\n    }\n\n    if (this.onSubsUpdated) {\n      this.onSubsUpdated(Object.keys(this._users));\n    }\n  }\n  // Called by Tinode when meta.tags is recived.\n  _processMetaTags(tags) {\n    if (tags.length == 1 && tags[0] == Const.DEL_CHAR) {\n      tags = [];\n    }\n    this._tags = tags;\n    if (this.onTagsUpdated) {\n      this.onTagsUpdated(tags);\n    }\n  }\n  // Do nothing for topics other than 'me'\n  _processMetaCreds(creds) {}\n  // Delete cached messages and update cached transaction IDs\n  _processDelMessages(clear, delseq) {\n    this._maxDel = Math.max(clear, this._maxDel);\n    this.clear = Math.max(clear, this.clear);\n    const topic = this;\n    let count = 0;\n    if (Array.isArray(delseq)) {\n      delseq.forEach(function(range) {\n        if (!range.hi) {\n          count++;\n          topic.flushMessage(range.low);\n        } else {\n          for (let i = range.low; i < range.hi; i++) {\n            count++;\n            topic.flushMessage(i);\n          }\n        }\n      });\n    }\n\n    if (count > 0) {\n      this._updateDeletedRanges();\n\n      if (this.onData) {\n        this.onData();\n      }\n    }\n  }\n  // Topic is informed that the entire response to {get what=data} has been received.\n  _allMessagesReceived(count) {\n    this._updateDeletedRanges();\n\n    if (this.onAllMessagesReceived) {\n      this.onAllMessagesReceived(count);\n    }\n  }\n  // Reset subscribed state\n  _resetSub() {\n    this._attached = false;\n  }\n  // This topic is either deleted or unsubscribed from.\n  _gone() {\n    this._messages.reset();\n    this._tinode._db.remMessages(this.name);\n    this._users = {};\n    this.acs = new AccessMode(null);\n    this.private = null;\n    this.public = null;\n    this.trusted = null;\n    this._maxSeq = 0;\n    this._minSeq = 0;\n    this._attached = false;\n\n    const me = this._tinode.getMeTopic();\n    if (me) {\n      me._routePres({\n        _noForwarding: true,\n        what: 'gone',\n        topic: Const.TOPIC_ME,\n        src: this.name\n      });\n    }\n    if (this.onDeleteTopic) {\n      this.onDeleteTopic();\n    }\n  }\n  // Update global user cache and local subscribers cache.\n  // Don't call this method for non-subscribers.\n  _updateCachedUser(uid, obj) {\n    // Fetch user object from the global cache.\n    // This is a clone of the stored object\n    let cached = this._cacheGetUser(uid);\n    cached = mergeObj(cached || {}, obj);\n    // Save to global cache\n    this._cachePutUser(uid, cached);\n    // Save to the list of topic subsribers.\n    return mergeToCache(this._users, uid, cached);\n  }\n  // Get local seqId for a queued message.\n  _getQueuedSeqId() {\n    return this._queuedSeqId++;\n  }\n  // Calculate ranges of missing messages.\n  _updateDeletedRanges() {\n    const ranges = [];\n\n    // Gap marker, possibly empty.\n    let prev = null;\n\n    // Check for gap in the beginning, before the first message.\n    const first = this._messages.getAt(0);\n    if (first && this._minSeq > 1 && !this._noEarlierMsgs) {\n      // Some messages are missing in the beginning.\n      if (first.hi) {\n        // The first message already represents a gap.\n        if (first.seq > 1) {\n          first.seq = 1;\n        }\n        if (first.hi < this._minSeq - 1) {\n          first.hi = this._minSeq - 1;\n        }\n        prev = first;\n      } else {\n        // Create new gap.\n        prev = {\n          seq: 1,\n          hi: this._minSeq - 1\n        };\n        ranges.push(prev);\n      }\n    } else {\n      // No gap in the beginning.\n      prev = {\n        seq: 0,\n        hi: 0\n      };\n    }\n\n    // Find new gaps in the list of received messages. The list contains messages-proper as well\n    // as placeholders for deleted ranges.\n    // The messages are iterated by seq ID in ascending order.\n    this._messages.filter((data) => {\n      // Do not create a gap between the last sent message and the first unsent as well as between unsent messages.\n      if (data.seq >= Const.LOCAL_SEQID) {\n        return true;\n      }\n\n      // Check for a gap between the previous message/marker and this message/marker.\n      if (data.seq == (prev.hi || prev.seq) + 1) {\n        // No gap between this message and the previous.\n        if (data.hi && prev.hi) {\n          // Two gap markers in a row. Extend the previous one, discard the current.\n          prev.hi = data.hi;\n          return false;\n        }\n        prev = data;\n\n        // Keep current.\n        return true;\n      }\n\n      // Found a new gap.\n      // Check if the previous is also a gap marker.\n      if (prev.hi) {\n        // Alter it instead of creating a new one.\n        prev.hi = data.hi || data.seq;\n      } else {\n        // Previous is not a gap marker. Create a new one.\n        prev = {\n          seq: prev.seq + 1,\n          hi: data.hi || data.seq\n        };\n        ranges.push(prev);\n      }\n\n      // If marker, remove; keep if regular message.\n      if (!data.hi) {\n        // Keeping the current regular message, save it as previous.\n        prev = data;\n        return true;\n      }\n\n      // Discard the current gap marker: we either created an earlier gap, or extended the prevous one.\n      return false;\n    });\n\n    // Check for missing messages at the end.\n    // All messages could be missing or it could be a new topic with no messages.\n    const last = this._messages.getLast();\n    const maxSeq = Math.max(this.seq, this._maxSeq) || 0;\n    if ((maxSeq > 0 && !last) || (last && ((last.hi || last.seq) < maxSeq))) {\n      if (last && last.hi) {\n        // Extend existing gap\n        last.hi = maxSeq;\n      } else {\n        // Create new gap.\n        ranges.push({\n          seq: last ? last.seq + 1 : 1,\n          hi: maxSeq\n        });\n      }\n    }\n\n    // Insert new gaps into cache.\n    ranges.forEach((gap) => {\n      gap._status = Const.MESSAGE_STATUS_DEL_RANGE;\n      this._messages.put(gap);\n    });\n  }\n  // Load most recent messages from persistent cache.\n  _loadMessages(db, params) {\n    const {\n      since,\n      before,\n      limit\n    } = params || {};\n    return db.readMessages(this.name, {\n        since: since,\n        before: before,\n        limit: limit || Const.DEFAULT_MESSAGES_PAGE\n      })\n      .then((msgs) => {\n        msgs.forEach((data) => {\n          if (data.seq > this._maxSeq) {\n            this._maxSeq = data.seq;\n          }\n          if (data.seq < this._minSeq || this._minSeq == 0) {\n            this._minSeq = data.seq;\n          }\n          this._messages.put(data);\n        });\n        if (msgs.length > 0) {\n          this._updateDeletedRanges();\n        }\n        return msgs.length;\n      });\n  }\n  // Push or {pres}: message received.\n  _updateReceived(seq, act) {\n    this.touched = new Date();\n    this.seq = seq | 0;\n    // Check if message is sent by the current user. If so it's been read already.\n    if (!act || this._tinode.isMe(act)) {\n      this.read = this.read ? Math.max(this.read, this.seq) : this.seq;\n      this.recv = this.recv ? Math.max(this.read, this.recv) : this.read;\n    }\n    this.unread = this.seq - (this.read | 0);\n    this._tinode._db.updTopic(this);\n  }\n}\n\n\n/**\n * @class TopicMe - special case of {@link Tinode.Topic} for\n * managing data of the current user, including contact list.\n * @extends Tinode.Topic\n * @memberof Tinode\n *\n * @param {TopicMe.Callbacks} callbacks - Callbacks to receive various events.\n */\n/**\n * @class TopicMe - special case of {@link Tinode.Topic} for\n * managing data of the current user, including contact list.\n * @extends Tinode.Topic\n * @memberof Tinode\n *\n * @param {TopicMe.Callbacks} callbacks - Callbacks to receive various events.\n */\nexport class TopicMe extends Topic {\n  onContactUpdate;\n\n  constructor(callbacks) {\n    super(Const.TOPIC_ME, callbacks);\n\n    // me-specific callbacks\n    if (callbacks) {\n      this.onContactUpdate = callbacks.onContactUpdate;\n    }\n  }\n\n  // Override the original Topic._processMetaDesc.\n  _processMetaDesc(desc) {\n    // Check if online contacts need to be turned off because P permission was removed.\n    const turnOff = (desc.acs && !desc.acs.isPresencer()) && (this.acs && this.acs.isPresencer());\n\n    // Copy parameters from desc object to this topic.\n    mergeObj(this, desc);\n    this._tinode._db.updTopic(this);\n    // Update current user's record in the global cache.\n    this._updateCachedUser(this._tinode._myUID, desc);\n\n    // 'P' permission was removed. All topics are offline now.\n    if (turnOff) {\n      this._tinode.mapTopics((cont) => {\n        if (cont.online) {\n          cont.online = false;\n          cont.seen = Object.assign(cont.seen || {}, {\n            when: new Date()\n          });\n          this._refreshContact('off', cont);\n        }\n      });\n    }\n\n    if (this.onMetaDesc) {\n      this.onMetaDesc(this);\n    }\n  }\n\n  // Override the original Topic._processMetaSub\n  _processMetaSub(subs) {\n    let updateCount = 0;\n    subs.forEach((sub) => {\n      const topicName = sub.topic;\n      // Don't show 'me' and 'fnd' topics in the list of contacts.\n      if (topicName == Const.TOPIC_FND || topicName == Const.TOPIC_ME) {\n        return;\n      }\n      sub.online = !!sub.online;\n\n      let cont = null;\n      if (sub.deleted) {\n        cont = sub;\n        this._tinode.cacheRemTopic(topicName);\n        this._tinode._db.remTopic(topicName);\n      } else {\n        // Ensure the values are defined and are integers.\n        if (typeof sub.seq != 'undefined') {\n          sub.seq = sub.seq | 0;\n          sub.recv = sub.recv | 0;\n          sub.read = sub.read | 0;\n          sub.unread = sub.seq - sub.read;\n        }\n\n        const topic = this._tinode.getTopic(topicName);\n        if (topic._new) {\n          delete topic._new;\n        }\n\n        cont = mergeObj(topic, sub);\n        this._tinode._db.updTopic(cont);\n\n        if (Topic.isP2PTopicName(topicName)) {\n          this._cachePutUser(topicName, cont);\n          this._tinode._db.updUser(topicName, cont.public);\n        }\n        // Notify topic of the update if it's an external update.\n        if (!sub._noForwarding && topic) {\n          sub._noForwarding = true;\n          topic._processMetaDesc(sub);\n        }\n      }\n\n      updateCount++;\n\n      if (this.onMetaSub) {\n        this.onMetaSub(cont);\n      }\n    });\n\n    if (this.onSubsUpdated && updateCount > 0) {\n      const keys = [];\n      subs.forEach((s) => {\n        keys.push(s.topic);\n      });\n      this.onSubsUpdated(keys, updateCount);\n    }\n  }\n\n  // Called by Tinode when meta.sub is recived.\n  _processMetaCreds(creds, upd) {\n    if (creds.length == 1 && creds[0] == Const.DEL_CHAR) {\n      creds = [];\n    }\n    if (upd) {\n      creds.forEach((cr) => {\n        if (cr.val) {\n          // Adding a credential.\n          let idx = this._credentials.findIndex((el) => {\n            return el.meth == cr.meth && el.val == cr.val;\n          });\n          if (idx < 0) {\n            // Not found.\n            if (!cr.done) {\n              // Unconfirmed credential replaces previous unconfirmed credential of the same method.\n              idx = this._credentials.findIndex((el) => {\n                return el.meth == cr.meth && !el.done;\n              });\n              if (idx >= 0) {\n                // Remove previous unconfirmed credential.\n                this._credentials.splice(idx, 1);\n              }\n            }\n            this._credentials.push(cr);\n          } else {\n            // Found. Maybe change 'done' status.\n            this._credentials[idx].done = cr.done;\n          }\n        } else if (cr.resp) {\n          // Handle credential confirmation.\n          const idx = this._credentials.findIndex((el) => {\n            return el.meth == cr.meth && !el.done;\n          });\n          if (idx >= 0) {\n            this._credentials[idx].done = true;\n          }\n        }\n      });\n    } else {\n      this._credentials = creds;\n    }\n    if (this.onCredsUpdated) {\n      this.onCredsUpdated(this._credentials);\n    }\n  }\n\n  // Process presence change message\n  _routePres(pres) {\n    if (pres.what == 'term') {\n      // The 'me' topic itself is detached. Mark as unsubscribed.\n      this._resetSub();\n      return;\n    }\n\n    if (pres.what == 'upd' && pres.src == Const.TOPIC_ME) {\n      // Update to me's description. Request updated value.\n      this.getMeta(this.startMetaQuery().withDesc().build());\n      return;\n    }\n\n    const cont = this._tinode.cacheGetTopic(pres.src);\n    if (cont) {\n      switch (pres.what) {\n        case 'on': // topic came online\n          cont.online = true;\n          break;\n        case 'off': // topic went offline\n          if (cont.online) {\n            cont.online = false;\n            cont.seen = Object.assign(cont.seen || {}, {\n              when: new Date()\n            });\n          }\n          break;\n        case 'msg': // new message received\n          cont._updateReceived(pres.seq, pres.act);\n          break;\n        case 'upd': // desc updated\n          // Request updated subscription.\n          this.getMeta(this.startMetaQuery().withLaterOneSub(pres.src).build());\n          break;\n        case 'acs': // access mode changed\n          if (cont.acs) {\n            cont.acs.updateAll(pres.dacs);\n          } else {\n            cont.acs = new AccessMode().updateAll(pres.dacs);\n          }\n          cont.touched = new Date();\n          break;\n        case 'ua':\n          // user agent changed.\n          cont.seen = {\n            when: new Date(),\n            ua: pres.ua\n          };\n          break;\n        case 'recv':\n          // user's other session marked some messges as received.\n          pres.seq = pres.seq | 0;\n          cont.recv = cont.recv ? Math.max(cont.recv, pres.seq) : pres.seq;\n          break;\n        case 'read':\n          // user's other session marked some messages as read.\n          pres.seq = pres.seq | 0;\n          cont.read = cont.read ? Math.max(cont.read, pres.seq) : pres.seq;\n          cont.recv = cont.recv ? Math.max(cont.read, cont.recv) : cont.recv;\n          cont.unread = cont.seq - cont.read;\n          break;\n        case 'gone':\n          // topic deleted or unsubscribed from.\n          if (!cont._deleted) {\n            cont._deleted = true;\n            cont._attached = false;\n            this._tinode._db.markTopicAsDeleted(pres.src);\n          } else {\n            this._tinode._db.remTopic(pres.src);\n          }\n          break;\n        case 'del':\n          // Update topic.del value.\n          break;\n        default:\n          this._tinode.logger(\"INFO: Unsupported presence update in 'me'\", pres.what);\n      }\n\n      this._refreshContact(pres.what, cont);\n    } else {\n      if (pres.what == 'acs') {\n        // New subscriptions and deleted/banned subscriptions have full\n        // access mode (no + or - in the dacs string). Changes to known subscriptions are sent as\n        // deltas, but they should not happen here.\n        const acs = new AccessMode(pres.dacs);\n        if (!acs || acs.mode == AccessMode._INVALID) {\n          this._tinode.logger(\"ERROR: Invalid access mode update\", pres.src, pres.dacs);\n          return;\n        } else if (acs.mode == AccessMode._NONE) {\n          this._tinode.logger(\"WARNING: Removing non-existent subscription\", pres.src, pres.dacs);\n          return;\n        } else {\n          // New subscription. Send request for the full description.\n          // Using .withOneSub (not .withLaterOneSub) to make sure IfModifiedSince is not set.\n          this.getMeta(this.startMetaQuery().withOneSub(undefined, pres.src).build());\n          // Create a dummy entry to catch online status update.\n          const dummy = this._tinode.getTopic(pres.src);\n          dummy.topic = pres.src;\n          dummy.online = false;\n          dummy.acs = acs;\n          this._tinode._db.updTopic(dummy);\n        }\n      } else if (pres.what == 'tags') {\n        this.getMeta(this.startMetaQuery().withTags().build());\n      }\n    }\n\n    if (this.onPres) {\n      this.onPres(pres);\n    }\n  }\n\n  // Contact is updated, execute callbacks.\n  _refreshContact(what, cont) {\n    if (this.onContactUpdate) {\n      this.onContactUpdate(what, cont);\n    }\n  }\n\n  /**\n   * Publishing to TopicMe is not supported. {@link Topic#publish} is overriden and thows an {Error} if called.\n   * @memberof Tinode.TopicMe#\n   * @throws {Error} Always throws an error.\n   */\n  publish() {\n    return Promise.reject(new Error(\"Publishing to 'me' is not supported\"));\n  }\n\n  /**\n   * Delete validation credential.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} topic - Name of the topic to delete\n   * @param {string} user - User ID to remove.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCredential(method, value) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete credential in inactive 'me' topic\"));\n    }\n    // Send {del} message, return promise\n    return this._tinode.delCredential(method, value).then((ctrl) => {\n      // Remove deleted credential from the cache.\n      const index = this._credentials.findIndex((el) => {\n        return el.meth == method && el.val == value;\n      });\n      if (index > -1) {\n        this._credentials.splice(index, 1);\n      }\n      // Notify listeners\n      if (this.onCredsUpdated) {\n        this.onCredsUpdated(this._credentials);\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * @callback contactFilter\n   * @param {Object} contact to check for inclusion.\n   * @returns {boolean} <code>true</code> if contact should be processed, <code>false</code> to exclude it.\n   */\n  /**\n   * Iterate over cached contacts.\n   *\n   * @function\n   * @memberof Tinode.TopicMe#\n   * @param {TopicMe.ContactCallback} callback - Callback to call for each contact.\n   * @param {contactFilter=} filter - Optionally filter contacts; include all if filter is false-ish, otherwise\n   *      include those for which filter returns true-ish.\n   * @param {Object=} context - Context to use for calling the `callback`, i.e. the value of `this` inside the callback.\n   */\n  contacts(callback, filter, context) {\n    this._tinode.mapTopics((c, idx) => {\n      if (c.isCommType() && (!filter || filter(c))) {\n        callback.call(context, c, idx);\n      }\n    });\n  }\n\n  /**\n   * Get a contact from cache.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to get, either a UID (for p2p topics) or a topic name.\n   * @returns {Tinode.Contact} - Contact or `undefined`.\n   */\n  getContact(name) {\n    return this._tinode.cacheGetTopic(name);\n  }\n\n  /**\n   * Get access mode of a given contact from cache.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to get access mode for, either a UID (for p2p topics)\n   *        or a topic name; if missing, access mode for the 'me' topic itself.\n   * @returns {string} - access mode, such as `RWP`.\n   */\n  getAccessMode(name) {\n    if (name) {\n      const cont = this._tinode.cacheGetTopic(name);\n      return cont ? cont.acs : null;\n    }\n    return this.acs;\n  }\n\n  /**\n   * Check if contact is archived, i.e. contact.private.arch == true.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to check archived status, either a UID (for p2p topics) or a topic name.\n   * @returns {boolean} - true if contact is archived, false otherwise.\n   */\n  isArchived(name) {\n    const cont = this._tinode.cacheGetTopic(name);\n    return cont && cont.private && !!cont.private.arch;\n  }\n\n  /**\n   * @typedef Tinode.Credential\n   * @memberof Tinode\n   * @type Object\n   * @property {string} meth - validation method such as 'email' or 'tel'.\n   * @property {string} val - credential value, i.e. 'jdoe@example.com' or '+17025551234'\n   * @property {boolean} done - true if credential is validated.\n   */\n  /**\n   * Get the user's credentials: email, phone, etc.\n   * @memberof Tinode.TopicMe#\n   *\n   * @returns {Tinode.Credential[]} - array of credentials.\n   */\n  getCredentials() {\n    return this._credentials;\n  }\n}\n\n/**\n * @class TopicFnd - special case of {@link Tinode.Topic} for searching for\n * contacts and group topics.\n * @extends Tinode.Topic\n * @memberof Tinode\n *\n * @param {TopicFnd.Callbacks} callbacks - Callbacks to receive various events.\n */\nexport class TopicFnd extends Topic {\n  // List of users and topics uid or topic_name -> Contact object)\n  _contacts = {};\n\n  constructor(callbacks) {\n    super(Const.TOPIC_FND, callbacks);\n  }\n\n  // Override the original Topic._processMetaSub\n  _processMetaSub(subs) {\n    let updateCount = Object.getOwnPropertyNames(this._contacts).length;\n    // Reset contact list.\n    this._contacts = {};\n    for (let idx in subs) {\n      let sub = subs[idx];\n      const indexBy = sub.topic ? sub.topic : sub.user;\n\n      sub = mergeToCache(this._contacts, indexBy, sub);\n      updateCount++;\n\n      if (this.onMetaSub) {\n        this.onMetaSub(sub);\n      }\n    }\n\n    if (updateCount > 0 && this.onSubsUpdated) {\n      this.onSubsUpdated(Object.keys(this._contacts));\n    }\n  }\n\n  /**\n   * Publishing to TopicFnd is not supported. {@link Topic#publish} is overriden and thows an {Error} if called.\n   * @memberof Tinode.TopicFnd#\n   * @throws {Error} Always throws an error.\n   */\n  publish() {\n    return Promise.reject(new Error(\"Publishing to 'fnd' is not supported\"));\n  }\n\n  /**\n   * setMeta to TopicFnd resets contact list in addition to sending the message.\n   * @memberof Tinode.TopicFnd#\n   * @param {Tinode.SetParams} params parameters to update.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  setMeta(params) {\n    return Object.getPrototypeOf(TopicFnd.prototype).setMeta.call(this, params).then(() => {\n      if (Object.keys(this._contacts).length > 0) {\n        this._contacts = {};\n        if (this.onSubsUpdated) {\n          this.onSubsUpdated([]);\n        }\n      }\n    });\n  }\n\n  /**\n   * Iterate over found contacts. If callback is undefined, use {@link this.onMetaSub}.\n   * @function\n   * @memberof Tinode.TopicFnd#\n   * @param {TopicFnd.ContactCallback} callback - Callback to call for each contact.\n   * @param {Object} context - Context to use for calling the `callback`, i.e. the value of `this` inside the callback.\n   */\n  contacts(callback, context) {\n    const cb = (callback || this.onMetaSub);\n    if (cb) {\n      for (let idx in this._contacts) {\n        cb.call(context, this._contacts[idx], idx, this._contacts);\n      }\n    }\n  }\n}\n","/**\n * @file Utilities used in multiple places.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport AccessMode from './access-mode.js';\nimport {\n  DEL_CHAR\n} from './config.js';\n\n// Attempt to convert date and AccessMode strings to objects.\nexport function jsonParseHelper(key, val) {\n  // Try to convert string timestamps with optional milliseconds to Date,\n  // e.g. 2015-09-02T01:45:43[.123]Z\n  if (typeof val == 'string' && val.length >= 20 && val.length <= 24 && ['ts', 'touched', 'updated', 'created', 'when', 'deleted', 'expires'].includes(key)) {\n\n    const date = new Date(val);\n    if (!isNaN(date)) {\n      return date;\n    }\n  } else if (key === 'acs' && typeof val === 'object') {\n    return new AccessMode(val);\n  }\n  return val;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\nfunction isValidDate(d) {\n  return (d instanceof Date) && !isNaN(d) && (d.getTime() != 0);\n}\n\n// RFC3339 formater of Date\nexport function rfc3339DateString(d) {\n  if (!isValidDate(d)) {\n    return undefined;\n  }\n\n  const pad = function(val, sp) {\n    sp = sp || 2;\n    return '0'.repeat(sp - ('' + val).length) + val;\n  };\n\n  const millis = d.getUTCMilliseconds();\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) +\n    'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) +\n    (millis ? '.' + pad(millis, 3) : '') + 'Z';\n}\n\n// Recursively merge src's own properties to dst.\n// Ignore properties where ignore[property] is true.\n// Array and Date objects are shallow-copied.\nexport function mergeObj(dst, src, ignore) {\n  if (typeof src != 'object') {\n    if (src === undefined) {\n      return dst;\n    }\n    if (src === DEL_CHAR) {\n      return undefined;\n    }\n    return src;\n  }\n  // JS is crazy: typeof null is 'object'.\n  if (src === null) {\n    return src;\n  }\n\n  // Handle Date\n  if (src instanceof Date && !isNaN(src)) {\n    return (!dst || !(dst instanceof Date) || isNaN(dst) || dst < src) ? src : dst;\n  }\n\n  // Access mode\n  if (src instanceof AccessMode) {\n    return new AccessMode(src);\n  }\n\n  // Handle Array\n  if (src instanceof Array) {\n    return src;\n  }\n\n  if (!dst || dst === DEL_CHAR) {\n    dst = src.constructor();\n  }\n\n  for (let prop in src) {\n    if (src.hasOwnProperty(prop) && (!ignore || !ignore[prop]) && (prop != '_noForwarding')) {\n      try {\n        dst[prop] = mergeObj(dst[prop], src[prop]);\n      } catch (err) {\n        // FIXME: probably need to log something here.\n      }\n    }\n  }\n  return dst;\n}\n\n// Update object stored in a cache. Returns updated value.\nexport function mergeToCache(cache, key, newval, ignore) {\n  cache[key] = mergeObj(cache[key], newval, ignore);\n  return cache[key];\n}\n\n// Strips all values from an object of they evaluate to false or if their name starts with '_'.\n// Used on all outgoing object before serialization to string.\nexport function simplify(obj) {\n  Object.keys(obj).forEach((key) => {\n    if (key[0] == '_') {\n      // Strip fields like \"obj._key\".\n      delete obj[key];\n    } else if (!obj[key]) {\n      // Strip fields which evaluate to false.\n      delete obj[key];\n    } else if (Array.isArray(obj[key]) && obj[key].length == 0) {\n      // Strip empty arrays.\n      delete obj[key];\n    } else if (!obj[key]) {\n      // Strip fields which evaluate to false.\n      delete obj[key];\n    } else if (obj[key] instanceof Date) {\n      // Strip invalid or zero date.\n      if (!isValidDate(obj[key])) {\n        delete obj[key];\n      }\n    } else if (typeof obj[key] == 'object') {\n      simplify(obj[key]);\n      // Strip empty objects.\n      if (Object.getOwnPropertyNames(obj[key]).length == 0) {\n        delete obj[key];\n      }\n    }\n  });\n  return obj;\n};\n\n\n// Trim whitespace, strip empty and duplicate elements elements.\n// If the result is an empty array, add a single element \"\\u2421\" (Unicode Del character).\nexport function normalizeArray(arr) {\n  let out = [];\n  if (Array.isArray(arr)) {\n    // Trim, throw away very short and empty tags.\n    for (let i = 0, l = arr.length; i < l; i++) {\n      let t = arr[i];\n      if (t) {\n        t = t.trim().toLowerCase();\n        if (t.length > 1) {\n          out.push(t);\n        }\n      }\n    }\n    out.sort().filter(function(item, pos, ary) {\n      return !pos || item != ary[pos - 1];\n    });\n  }\n  if (out.length == 0) {\n    // Add single tag with a Unicode Del character, otherwise an ampty array\n    // is ambiguos. The Del tag will be stripped by the server.\n    out.push(DEL_CHAR);\n  }\n  return out;\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const FACTOR = new Uint16Array(8)\n\nfunction factor4096 (i, n) {\n  while (n > 0) {\n    const f = i & 4095\n    FACTOR[--n] = f\n    i = (i - f) / 4096\n  }\n  return FACTOR\n}\n\nmodule.exports = class BigSparseArray {\n  constructor () {\n    this.tiny = new TinyArray()\n    this.maxLength = 4096\n    this.factor = 1\n  }\n\n  set (index, val) {\n    if (val !== undefined) {\n      while (index >= this.maxLength) {\n        this.maxLength *= 4096\n        this.factor++\n        if (!this.tiny.isEmptyish()) {\n          const t = new TinyArray()\n          t.set(0, this.tiny)\n          this.tiny = t\n        }\n      }\n    }\n\n    const f = factor4096(index, this.factor)\n    const last = this.factor - 1\n\n    let tiny = this.tiny\n    for (let i = 0; i < last; i++) {\n      const next = tiny.get(f[i])\n      if (next === undefined) {\n        if (val === undefined) return\n        tiny = tiny.set(f[i], new TinyArray())\n      } else {\n        tiny = next\n      }\n    }\n\n    return tiny.set(f[last], val)\n  }\n\n  get (index) {\n    if (index >= this.maxLength) return\n\n    const f = factor4096(index, this.factor)\n    const last = this.factor - 1\n\n    let tiny = this.tiny\n    for (let i = 0; i < last; i++) {\n      tiny = tiny.get(f[i])\n      if (tiny === undefined) return\n    }\n\n    return tiny.get(f[last])\n  }\n}\n\nclass TinyArray {\n  constructor () {\n    this.s = 0\n    this.b = new Array(1)\n    this.f = new Uint16Array(1)\n  }\n\n  isEmptyish () {\n    return this.b.length === 1 && this.b[0] === undefined\n  }\n\n  get (i) {\n    if (this.s === 12) return this.b[i]\n    const f = i >>> this.s\n    const r = i & (this.b.length - 1)\n    return this.f[r] === f ? this.b[r] : undefined\n  }\n\n  set (i, v) {\n    while (this.s !== 12) {\n      const f = i >>> this.s\n      const r = i & (this.b.length - 1)\n      const o = this.b[r]\n\n      if (o === undefined || f === this.f[r]) {\n        this.b[r] = v\n        this.f[r] = f\n        return v\n      }\n\n      this.grow()\n    }\n\n    this.b[i] = v\n    return v\n  }\n\n  grow () {\n    const os = this.s\n    const ob = this.b\n    const of = this.f\n\n    this.s += 4\n    this.b = new Array(this.b.length << 4)\n    this.f = this.s === 12 ? null : new Uint8Array(this.b.length)\n\n    const m = this.b.length - 1\n\n    for (let or = 0; or < ob.length; or++) {\n      if (ob[or] === undefined) continue\n\n      const i = of[or] << os | or\n      const f = i >>> this.s\n      const r = i & m\n\n      this.b[r] = ob[or]\n      if (this.s !== 12) this.f[r] = f\n    }\n  }\n}\n","var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./blake2b.wat\nvar require_blake2b = __commonJS({\n  \"wasm-binary:./blake2b.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"\");\n  }\n});\n\n// wasm-module:./blake2b.wat\nvar bytes = require_blake2b();\nvar compiled = WebAssembly.compile(bytes);\nmodule.exports = async (imports) => {\n  const instance = await WebAssembly.instantiate(await compiled, imports);\n  return instance.exports;\n};\n","var assert = require('nanoassert')\nvar b4a = require('b4a')\n\nvar wasm = null\nvar wasmPromise = typeof WebAssembly !== \"undefined\" && require('./blake2b')().then(mod => {\n  wasm = mod\n})\n\nvar head = 64\nvar freeList = []\n\nmodule.exports = Blake2b\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nfunction Blake2b (digestLength, key, salt, personal, noAssert) {\n  if (!(this instanceof Blake2b)) return new Blake2b(digestLength, key, salt, personal, noAssert)\n  if (!wasm) throw new Error('WASM not loaded. Wait for Blake2b.ready(cb)')\n  if (!digestLength) digestLength = 32\n\n  if (noAssert !== true) {\n    assert(digestLength >= BYTES_MIN, 'digestLength must be at least ' + BYTES_MIN + ', was given ' + digestLength)\n    assert(digestLength <= BYTES_MAX, 'digestLength must be at most ' + BYTES_MAX + ', was given ' + digestLength)\n    if (key != null) {\n      assert(key instanceof Uint8Array, 'key must be Uint8Array or Buffer')\n      assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n      assert(key.length <= KEYBYTES_MAX, 'key must be at least ' + KEYBYTES_MAX + ', was given ' + key.length)\n    }\n    if (salt != null) {\n      assert(salt instanceof Uint8Array, 'salt must be Uint8Array or Buffer')\n      assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    }\n    if (personal != null) {\n      assert(personal instanceof Uint8Array, 'personal must be Uint8Array or Buffer')\n      assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n    }\n  }\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += 216\n  }\n\n  this.digestLength = digestLength\n  this.finalized = false\n  this.pointer = freeList.pop()\n  this._memory = new Uint8Array(wasm.memory.buffer)\n\n  this._memory.fill(0, 0, 64)\n  this._memory[0] = this.digestLength\n  this._memory[1] = key ? key.length : 0\n  this._memory[2] = 1 // fanout\n  this._memory[3] = 1 // depth\n\n  if (salt) this._memory.set(salt, 32)\n  if (personal) this._memory.set(personal, 48)\n\n  if (this.pointer + 216 > this._memory.length) this._realloc(this.pointer + 216) // we need 216 bytes for the state\n  wasm.blake2b_init(this.pointer, this.digestLength)\n\n  if (key) {\n    this.update(key)\n    this._memory.fill(0, head, head + key.length) // whiteout key\n    this._memory[this.pointer + 200] = 128\n  }\n}\n\nBlake2b.prototype._realloc = function (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - this._memory.length) / 65536)))\n  this._memory = new Uint8Array(wasm.memory.buffer)\n}\n\nBlake2b.prototype.update = function (input) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  assert(input instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n\n  if (head + input.length > this._memory.length) this._realloc(head + input.length)\n  this._memory.set(input, head)\n  wasm.blake2b_update(this.pointer, head, head + input.length)\n  return this\n}\n\nBlake2b.prototype.digest = function (enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  this.finalized = true\n\n  freeList.push(this.pointer)\n  wasm.blake2b_final(this.pointer)\n\n  if (!enc || enc === 'binary') {\n    return this._memory.slice(this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(this._memory, enc, this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  assert(enc instanceof Uint8Array && enc.length >= this.digestLength, 'input must be Uint8Array or Buffer')\n  for (var i = 0; i < this.digestLength; i++) {\n    enc[i] = this._memory[this.pointer + 128 + i]\n  }\n\n  return enc\n}\n\n// libsodium compat\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.WASM = wasm\nBlake2b.SUPPORTED = typeof WebAssembly !== 'undefined'\n\nBlake2b.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasmPromise) return cb(new Error('WebAssembly not supported'))\n  return wasmPromise.then(() => cb(), cb)\n}\n\nBlake2b.prototype.ready = Blake2b.ready\n\nBlake2b.prototype.getPartialHash = function () {\n  return this._memory.slice(this.pointer, this.pointer + 216);\n}\n\nBlake2b.prototype.setPartialHash = function (ph) {\n  this._memory.set(ph, this.pointer);\n}\n\nfunction noop () {}\n","var assert = require('nanoassert')\nvar b2wasm = require('blake2b-wasm')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  for (i = 0; i < 12; i++) {\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n}\n\n// reusable parameter_block\nvar parameter_block = new Uint8Array([\n  0, 0, 0, 0,      //  0: outlen, keylen, fanout, depth\n  0, 0, 0, 0,      //  4: leaf length, sequential mode\n  0, 0, 0, 0,      //  8: node offset\n  0, 0, 0, 0,      // 12: node offset\n  0, 0, 0, 0,      // 16: node depth, inner length, rfu\n  0, 0, 0, 0,      // 20: rfu\n  0, 0, 0, 0,      // 24: rfu\n  0, 0, 0, 0,      // 28: rfu\n  0, 0, 0, 0,      // 32: salt\n  0, 0, 0, 0,      // 36: salt\n  0, 0, 0, 0,      // 40: salt\n  0, 0, 0, 0,      // 44: salt\n  0, 0, 0, 0,      // 48: personal\n  0, 0, 0, 0,      // 52: personal\n  0, 0, 0, 0,      // 56: personal\n  0, 0, 0, 0       // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction Blake2b (outlen, key, salt, personal) {\n  // zero out parameter_block before usage\n  parameter_block.fill(0)\n  // state, 'param block'\n\n  this.b = new Uint8Array(128)\n  this.h = new Uint32Array(16)\n  this.t = 0 // input count\n  this.c = 0 // pointer within buffer\n  this.outlen = outlen // output length in bytes\n\n  parameter_block[0] = outlen\n  if (key) parameter_block[1] = key.length\n  parameter_block[2] = 1 // fanout\n  parameter_block[3] = 1 // depth\n\n  if (salt) parameter_block.set(salt, 32)\n  if (personal) parameter_block.set(personal, 48)\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    this.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameter_block, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(this, key)\n    // at the end\n    this.c = 128\n  }\n}\n\nBlake2b.prototype.update = function (input) {\n  assert(input instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n  blake2bUpdate(this, input)\n  return this\n}\n\nBlake2b.prototype.digest = function (out) {\n  var buf = (!out || out === 'binary' || out === 'hex') ? new Uint8Array(this.outlen) : out\n  assert(buf instanceof Uint8Array, 'out must be \"binary\", \"hex\", Uint8Array, or Buffer')\n  assert(buf.length >= this.outlen, 'out must have at least outlen bytes of space')\n  blake2bFinal(this, buf)\n  if (out === 'hex') return hexSlice(buf)\n  return buf\n}\n\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.ready = function (cb) {\n  b2wasm.ready(function () {\n    cb() // ignore the error\n  })\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx, out) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\nfunction hexSlice (buf) {\n  var str = ''\n  for (var i = 0; i < buf.length; i++) str += toHex(buf[i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nvar Proto = Blake2b\n\nmodule.exports = function createHash (outlen, key, salt, personal, noAssert) {\n  if (noAssert !== true) {\n    assert(outlen >= BYTES_MIN, 'outlen must be at least ' + BYTES_MIN + ', was given ' + outlen)\n    assert(outlen <= BYTES_MAX, 'outlen must be at most ' + BYTES_MAX + ', was given ' + outlen)\n    if (key != null) {\n      assert(key instanceof Uint8Array, 'key must be Uint8Array or Buffer')\n      assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n      assert(key.length <= KEYBYTES_MAX, 'key must be at most ' + KEYBYTES_MAX + ', was given ' + key.length)\n    }\n    if (salt != null) {\n      assert(salt instanceof Uint8Array, 'salt must be Uint8Array or Buffer')\n      assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    }\n    if (personal != null) {\n      assert(personal instanceof Uint8Array, 'personal must be Uint8Array or Buffer')\n      assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n    }\n  }\n\n  return new Proto(outlen, key, salt, personal)\n}\n\nmodule.exports.ready = function (cb) {\n  b2wasm.ready(function () { // ignore errors\n    cb()\n  })\n}\n\nmodule.exports.WASM_SUPPORTED = b2wasm.SUPPORTED\nmodule.exports.WASM_LOADED = false\n\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nb2wasm.ready(function (err) {\n  if (!err) {\n    module.exports.WASM_LOADED = true\n    module.exports = b2wasm\n  }\n})\n","function allocUnsafe (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n\n  if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n\n  if (Buffer.allocUnsafe) {\n    return Buffer.allocUnsafe(size)\n  } else {\n    return new Buffer(size)\n  }\n}\n\nmodule.exports = allocUnsafe\n","var bufferFill = require('buffer-fill')\nvar allocUnsafe = require('buffer-alloc-unsafe')\n\nmodule.exports = function alloc (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n\n  if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n\n  if (Buffer.alloc) {\n    return Buffer.alloc(size, fill, encoding)\n  }\n\n  var buffer = allocUnsafe(size)\n\n  if (size === 0) {\n    return buffer\n  }\n\n  if (fill === undefined) {\n    return bufferFill(buffer, 0)\n  }\n\n  if (typeof encoding !== 'string') {\n    encoding = undefined\n  }\n\n  return bufferFill(buffer, fill, encoding)\n}\n","/* Node.js 6.4.0 and up has full support */\nvar hasFullSupport = (function () {\n  try {\n    if (!Buffer.isEncoding('latin1')) {\n      return false\n    }\n\n    var buf = Buffer.alloc ? Buffer.alloc(4) : new Buffer(4)\n\n    buf.fill('ab', 'ucs2')\n\n    return (buf.toString('hex') === '61006200')\n  } catch (_) {\n    return false\n  }\n}())\n\nfunction isSingleByte (val) {\n  return (val.length === 1 && val.charCodeAt(0) < 256)\n}\n\nfunction fillWithNumber (buffer, val, start, end) {\n  if (start < 0 || end > buffer.length) {\n    throw new RangeError('Out of range index')\n  }\n\n  start = start >>> 0\n  end = end === undefined ? buffer.length : end >>> 0\n\n  if (end > start) {\n    buffer.fill(val, start, end)\n  }\n\n  return buffer\n}\n\nfunction fillWithBuffer (buffer, val, start, end) {\n  if (start < 0 || end > buffer.length) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return buffer\n  }\n\n  start = start >>> 0\n  end = end === undefined ? buffer.length : end >>> 0\n\n  var pos = start\n  var len = val.length\n  while (pos <= (end - len)) {\n    val.copy(buffer, pos)\n    pos += len\n  }\n\n  if (pos !== end) {\n    val.copy(buffer, pos, 0, end - pos)\n  }\n\n  return buffer\n}\n\nfunction fill (buffer, val, start, end, encoding) {\n  if (hasFullSupport) {\n    return buffer.fill(val, start, end, encoding)\n  }\n\n  if (typeof val === 'number') {\n    return fillWithNumber(buffer, val, start, end)\n  }\n\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = buffer.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = buffer.length\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n\n    if (encoding === 'latin1') {\n      encoding = 'binary'\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n\n    if (val === '') {\n      return fillWithNumber(buffer, 0, start, end)\n    }\n\n    if (isSingleByte(val)) {\n      return fillWithNumber(buffer, val.charCodeAt(0), start, end)\n    }\n\n    val = new Buffer(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    return fillWithBuffer(buffer, val, start, end)\n  }\n\n  // Other values (e.g. undefined, boolean, object) results in zero-fill\n  return fillWithNumber(buffer, 0, start, end)\n}\n\nmodule.exports = fill\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","const assert = require('nanoassert')\n\nmodule.exports = Chacha20\n\nconst constant = [1634760805, 857760878, 2036477234, 1797285236]\n\nfunction Chacha20 (nonce, key, counter) {\n  assert(key.byteLength === 32)\n  assert(nonce.byteLength === 8 || nonce.byteLength === 12)\n\n  const n = new Uint32Array(nonce.buffer, nonce.byteOffset, nonce.byteLength / 4)\n  const k = new Uint32Array(key.buffer, key.byteOffset, key.byteLength / 4)\n\n  if (!counter) counter = 0\n  assert(counter < Number.MAX_SAFE_INTEGER)\n\n  this.finalized = false\n  this.pos = 0\n  this.state = new Uint32Array(16)\n\n  for (let i = 0; i < 4; i++) this.state[i] = constant[i]\n  for (let i = 0; i < 8; i++) this.state[4 + i] = k[i]\n\n  this.state[12] = counter & 0xffffffff\n\n  if (n.byteLength === 8) {\n    this.state[13] = (counter && 0xffffffff00000000) >> 32\n    this.state[14] = n[0]\n    this.state[15] = n[1]\n  } else {\n    this.state[13] = n[0]\n    this.state[14] = n[1]\n    this.state[15] = n[2]\n  }\n\n  return this\n}\n\nChacha20.prototype.update = function (output, input) {\n  assert(!this.finalized, 'cipher finalized.')\n  assert(output.byteLength >= input.byteLength,\n    'output cannot be shorter than input.')\n\n  let len = input.length\n  let offset = this.pos % 64\n  this.pos += len\n\n  // input position\n  let j = 0\n\n  let keyStream = chacha20Block(this.state)\n\n  // try to finsih the current block\n  while (offset > 0 && len > 0) {\n    output[j] = input[j++] ^ keyStream[offset]\n    offset = (offset + 1) & 0x3f\n    if (!offset) this.state[12]++\n    len--\n  }\n\n  // encrypt rest block at a time\n  while (len > 0) {\n    keyStream = chacha20Block(this.state)\n\n    // less than a full block remaining\n    if (len < 64) {\n      for (let i = 0; i < len; i++) {\n        output[j] = input[j++] ^ keyStream[offset++]\n        offset &= 0x3f\n      }\n\n      return\n    }\n\n    for (; offset < 64;) {\n      output[j] = input[j++] ^ keyStream[offset++]\n    }\n\n    this.state[12]++\n    offset = 0\n    len -= 64\n  }\n}\n\nChacha20.prototype.final = function () {\n  this.state.fill(0)\n  this.pos = 0\n  this.finalized = true\n}\n\nfunction chacha20Block (state) {\n  // working state\n  const ws = new Uint32Array(16)\n  for (let i = 16; i--;) ws[i] = state[i]\n\n  for (let i = 0; i < 20; i += 2) {\n    QR(ws, 0, 4, 8, 12) // column 0\n    QR(ws, 1, 5, 9, 13) // column 1\n    QR(ws, 2, 6, 10, 14) // column 2\n    QR(ws, 3, 7, 11, 15) // column 3\n\n    QR(ws, 0, 5, 10, 15) // diagonal 1 (main diagonal)\n    QR(ws, 1, 6, 11, 12) // diagonal 2\n    QR(ws, 2, 7, 8, 13) // diagonal 3\n    QR(ws, 3, 4, 9, 14) // diagonal 4\n  }\n\n  for (let i = 0; i < 16; i++) {\n    ws[i] += state[i]\n  }\n\n  return new Uint8Array(ws.buffer, ws.byteOffset, ws.byteLength)\n}\n\nfunction rotl (a, b) {\n  return ((a << b) | (a >>> (32 - b)))\n}\n\nfunction QR (obj, a, b, c, d) {\n  obj[a] += obj[b]\n  obj[d] ^= obj[a]\n  obj[d] = rotl(obj[d], 16)\n\n  obj[c] += obj[d]\n  obj[b] ^= obj[c]\n  obj[b] = rotl(obj[b], 12)\n\n  obj[a] += obj[b]\n  obj[d] ^= obj[a]\n  obj[d] = rotl(obj[d], 8)\n\n  obj[c] += obj[d]\n  obj[b] ^= obj[c]\n  obj[b] = rotl(obj[b], 7)\n}\n","const LE = exports.LE = (new Uint8Array(new Uint16Array([0xff]).buffer))[0] === 0xff\n\nexports.BE = !LE\n","const b4a = require('b4a')\n\nconst { BE } = require('./endian')\n\nexports.state = function (start = 0, end = 0, buffer = null) {\n  return { start, end, buffer, cache: null }\n}\n\nconst raw = exports.raw = require('./raw')\n\nconst uint = exports.uint = {\n  preencode (state, n) {\n    state.end += n <= 0xfc ? 1 : n <= 0xffff ? 3 : n <= 0xffffffff ? 5 : 9\n  },\n  encode (state, n) {\n    if (n <= 0xfc) uint8.encode(state, n)\n    else if (n <= 0xffff) {\n      state.buffer[state.start++] = 0xfd\n      uint16.encode(state, n)\n    } else if (n <= 0xffffffff) {\n      state.buffer[state.start++] = 0xfe\n      uint32.encode(state, n)\n    } else {\n      state.buffer[state.start++] = 0xff\n      uint64.encode(state, n)\n    }\n  },\n  decode (state) {\n    const a = uint8.decode(state)\n    if (a <= 0xfc) return a\n    if (a === 0xfd) return uint16.decode(state)\n    if (a === 0xfe) return uint32.decode(state)\n    return uint64.decode(state)\n  }\n}\n\nconst uint8 = exports.uint8 = {\n  preencode (state, n) {\n    state.end += 1\n  },\n  encode (state, n) {\n    state.buffer[state.start++] = n\n  },\n  decode (state) {\n    if (state.start >= state.end) throw new Error('Out of bounds')\n    return state.buffer[state.start++]\n  }\n}\n\nconst uint16 = exports.uint16 = {\n  preencode (state, n) {\n    state.end += 2\n  },\n  encode (state, n) {\n    state.buffer[state.start++] = n\n    state.buffer[state.start++] = n >>> 8\n  },\n  decode (state) {\n    if (state.end - state.start < 2) throw new Error('Out of bounds')\n    return (\n      state.buffer[state.start++] +\n      state.buffer[state.start++] * 0x100\n    )\n  }\n}\n\nconst uint24 = exports.uint24 = {\n  preencode (state, n) {\n    state.end += 3\n  },\n  encode (state, n) {\n    state.buffer[state.start++] = n\n    state.buffer[state.start++] = n >>> 8\n    state.buffer[state.start++] = n >>> 16\n  },\n  decode (state) {\n    if (state.end - state.start < 3) throw new Error('Out of bounds')\n    return (\n      state.buffer[state.start++] +\n      state.buffer[state.start++] * 0x100 +\n      state.buffer[state.start++] * 0x10000\n    )\n  }\n}\n\nconst uint32 = exports.uint32 = {\n  preencode (state, n) {\n    state.end += 4\n  },\n  encode (state, n) {\n    state.buffer[state.start++] = n\n    state.buffer[state.start++] = n >>> 8\n    state.buffer[state.start++] = n >>> 16\n    state.buffer[state.start++] = n >>> 24\n  },\n  decode (state) {\n    if (state.end - state.start < 4) throw new Error('Out of bounds')\n    return (\n      state.buffer[state.start++] +\n      state.buffer[state.start++] * 0x100 +\n      state.buffer[state.start++] * 0x10000 +\n      state.buffer[state.start++] * 0x1000000\n    )\n  }\n}\n\nconst uint40 = exports.uint40 = {\n  preencode (state, n) {\n    state.end += 5\n  },\n  encode (state, n) {\n    const r = Math.floor(n / 0x100)\n    uint8.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 5) throw new Error('Out of bounds')\n    return uint8.decode(state) + 0x100 * uint32.decode(state)\n  }\n}\n\nconst uint48 = exports.uint48 = {\n  preencode (state, n) {\n    state.end += 6\n  },\n  encode (state, n) {\n    const r = Math.floor(n / 0x10000)\n    uint16.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 6) throw new Error('Out of bounds')\n    return uint16.decode(state) + 0x10000 * uint32.decode(state)\n  }\n}\n\nconst uint56 = exports.uint56 = {\n  preencode (state, n) {\n    state.end += 7\n  },\n  encode (state, n) {\n    const r = Math.floor(n / 0x1000000)\n    uint24.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 7) throw new Error('Out of bounds')\n    return uint24.decode(state) + 0x1000000 * uint32.decode(state)\n  }\n}\n\nconst uint64 = exports.uint64 = {\n  preencode (state, n) {\n    state.end += 8\n  },\n  encode (state, n) {\n    const r = Math.floor(n / 0x100000000)\n    uint32.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 8) throw new Error('Out of bounds')\n    return uint32.decode(state) + 0x100000000 * uint32.decode(state)\n  }\n}\n\nexports.int = zigZag(uint)\nexports.int8 = zigZag(uint8)\nexports.int16 = zigZag(uint16)\nexports.int24 = zigZag(uint24)\nexports.int32 = zigZag(uint32)\nexports.int40 = zigZag(uint40)\nexports.int48 = zigZag(uint48)\nexports.int56 = zigZag(uint56)\nexports.int64 = zigZag(uint64)\n\nexports.lexint = require('./lexint')\n\nexports.float32 = {\n  preencode (state, n) {\n    state.end += 4\n  },\n  encode (state, n) {\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 4)\n    view.setFloat32(0, n, true) // little endian\n    state.start += 4\n  },\n  decode (state) {\n    if (state.end - state.start < 4) throw new Error('Out of bounds')\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 4)\n    const float = view.getFloat32(0, true) // little endian\n    state.start += 4\n    return float\n  }\n}\n\nexports.float64 = {\n  preencode (state, n) {\n    state.end += 8\n  },\n  encode (state, n) {\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8)\n    view.setFloat64(0, n, true) // little endian\n    state.start += 8\n  },\n  decode (state) {\n    if (state.end - state.start < 8) throw new Error('Out of bounds')\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8)\n    const float = view.getFloat64(0, true) // little endian\n    state.start += 8\n    return float\n  }\n}\n\nconst buffer = exports.buffer = {\n  preencode (state, b) {\n    if (b) uint8array.preencode(state, b)\n    else state.end++\n  },\n  encode (state, b) {\n    if (b) uint8array.encode(state, b)\n    else state.buffer[state.start++] = 0\n  },\n  decode (state) {\n    const len = uint.decode(state)\n    if (len === 0) return null\n    if (state.end - state.start < len) throw new Error('Out of bounds')\n    return state.buffer.subarray(state.start, (state.start += len))\n  }\n}\n\nexports.binary = {\n  ...buffer,\n  preencode (state, b) {\n    if (typeof b === 'string') utf8.preencode(state, b)\n    else buffer.preencode(state, b)\n  },\n  encode (state, b) {\n    if (typeof b === 'string') utf8.encode(state, b)\n    else buffer.encode(state, b)\n  }\n}\n\nfunction typedarray (TypedArray, swap) {\n  const n = TypedArray.BYTES_PER_ELEMENT\n\n  return {\n    preencode (state, b) {\n      uint.preencode(state, b.length)\n      state.end += b.byteLength\n    },\n    encode (state, b) {\n      uint.encode(state, b.length)\n\n      const view = new Uint8Array(b.buffer, b.byteOffset, b.byteLength)\n\n      if (BE && swap) swap(view)\n\n      state.buffer.set(view, state.start)\n      state.start += b.byteLength\n    },\n    decode (state) {\n      const len = uint.decode(state)\n\n      let b = state.buffer.subarray(state.start, state.start += len * n)\n      if (b.byteLength !== len * n) throw new Error('Out of bounds')\n      if ((b.byteOffset % n) !== 0) b = new Uint8Array(b)\n\n      if (BE && swap) swap(b)\n\n      return new TypedArray(b.buffer, b.byteOffset, b.byteLength / n)\n    }\n  }\n}\n\nconst uint8array = exports.uint8array = typedarray(Uint8Array)\nexports.uint16array = typedarray(Uint16Array, b4a.swap16)\nexports.uint32array = typedarray(Uint32Array, b4a.swap32)\n\nexports.int8array = typedarray(Int8Array)\nexports.int16array = typedarray(Int16Array, b4a.swap16)\nexports.int32array = typedarray(Int32Array, b4a.swap32)\n\nexports.float32array = typedarray(Float32Array, b4a.swap32)\nexports.float64array = typedarray(Float64Array, b4a.swap64)\n\nfunction string (encoding) {\n  return {\n    preencode (state, s) {\n      const len = b4a.byteLength(s, encoding)\n      uint.preencode(state, len)\n      state.end += len\n    },\n    encode (state, s) {\n      const len = b4a.byteLength(s, encoding)\n      uint.encode(state, len)\n      b4a.write(state.buffer, s, state.start, encoding)\n      state.start += len\n    },\n    decode (state) {\n      const len = uint.decode(state)\n      if (state.end - state.start < len) throw new Error('Out of bounds')\n      return b4a.toString(state.buffer, encoding, state.start, (state.start += len))\n    },\n    fixed (n) {\n      return {\n        preencode (state) {\n          state.end += n\n        },\n        encode (state, s) {\n          b4a.write(state.buffer, s, state.start, n, encoding)\n          state.start += n\n        },\n        decode (state) {\n          if (state.end - state.start < n) throw new Error('Out of bounds')\n          return b4a.toString(state.buffer, encoding, state.start, (state.start += n))\n        }\n      }\n    }\n  }\n}\n\nconst utf8 = exports.string = exports.utf8 = string('utf-8')\nexports.ascii = string('ascii')\nexports.hex = string('hex')\nexports.base64 = string('base64')\nexports.ucs2 = exports.utf16le = string('utf16le')\n\nexports.bool = {\n  preencode (state, b) {\n    state.end++\n  },\n  encode (state, b) {\n    state.buffer[state.start++] = b ? 1 : 0\n  },\n  decode (state) {\n    if (state.start >= state.end) throw Error('Out of bounds')\n    return state.buffer[state.start++] === 1\n  }\n}\n\nconst fixed = exports.fixed = function fixed (n) {\n  return {\n    preencode (state, s) {\n      state.end += n\n    },\n    encode (state, s) {\n      state.buffer.set(s, state.start)\n      state.start += n\n    },\n    decode (state) {\n      if (state.end - state.start < n) throw new Error('Out of bounds')\n      return state.buffer.subarray(state.start, (state.start += n))\n    }\n  }\n}\n\nexports.fixed32 = fixed(32)\nexports.fixed64 = fixed(64)\n\nexports.none = {\n  preencode (state, m) {\n    // do nothing\n  },\n  encode (state, m) {\n    // do nothing\n  },\n  decode (state) {\n    return null\n  }\n}\n\nexports.array = function array (enc) {\n  return {\n    preencode (state, list) {\n      uint.preencode(state, list.length)\n      for (let i = 0; i < list.length; i++) enc.preencode(state, list[i])\n    },\n    encode (state, list) {\n      uint.encode(state, list.length)\n      for (let i = 0; i < list.length; i++) enc.encode(state, list[i])\n    },\n    decode (state) {\n      const len = uint.decode(state)\n      if (len > 0x100000) throw new Error('Array is too big')\n      const arr = new Array(len)\n      for (let i = 0; i < len; i++) arr[i] = enc.decode(state)\n      return arr\n    }\n  }\n}\n\nexports.json = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v))\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v))\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\n\nexports.ndjson = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v) + '\\n')\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v) + '\\n')\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\n\nexports.from = function from (enc) {\n  if (typeof enc === 'string') return fromNamed(enc)\n  if (enc.preencode) return enc\n  if (enc.encodingLength) return fromAbstractEncoder(enc)\n  return fromCodec(enc)\n}\n\nfunction fromNamed (enc) {\n  switch (enc) {\n    case 'ascii': return raw.ascii\n    case 'utf-8':\n    case 'utf8': return raw.utf8\n    case 'hex': return raw.hex\n    case 'base64': return raw.base64\n    case 'utf16-le':\n    case 'utf16le':\n    case 'ucs-2':\n    case 'ucs2': return raw.ucs2\n    case 'ndjson': return raw.ndjson\n    case 'json': return raw.json\n    case 'binary':\n    default: return raw.binary\n  }\n}\n\nfunction fromCodec (enc) {\n  let tmpM = null\n  let tmpBuf = null\n\n  return {\n    preencode (state, m) {\n      tmpM = m\n      tmpBuf = enc.encode(m)\n      state.end += tmpBuf.byteLength\n    },\n    encode (state, m) {\n      raw.encode(state, m === tmpM ? tmpBuf : enc.encode(m))\n      tmpM = tmpBuf = null\n    },\n    decode (state) {\n      return enc.decode(raw.decode(state))\n    }\n  }\n}\n\nfunction fromAbstractEncoder (enc) {\n  return {\n    preencode (state, m) {\n      state.end += enc.encodingLength(m)\n    },\n    encode (state, m) {\n      enc.encode(m, state.buffer, state.start)\n      state.start += enc.encode.bytes\n    },\n    decode (state) {\n      const m = enc.decode(state.buffer, state.start, state.end)\n      state.start += enc.decode.bytes\n      return m\n    }\n  }\n}\n\nexports.encode = function encode (enc, m) {\n  const state = exports.state()\n  enc.preencode(state, m)\n  state.buffer = b4a.allocUnsafe(state.end)\n  enc.encode(state, m)\n  return state.buffer\n}\n\nexports.decode = function decode (enc, buffer) {\n  return enc.decode(exports.state(0, buffer.byteLength, buffer))\n}\n\nfunction zigZag (enc) {\n  return {\n    preencode (state, n) {\n      enc.preencode(state, zigZagEncode(n))\n    },\n    encode (state, n) {\n      enc.encode(state, zigZagEncode(n))\n    },\n    decode (state) {\n      return zigZagDecode(enc.decode(state))\n    }\n  }\n}\n\nfunction zigZagDecode (n) {\n  return n === 0 ? n : (n & 1) === 0 ? n / 2 : -(n + 1) / 2\n}\n\nfunction zigZagEncode (n) {\n  // 0, -1, 1, -2, 2, ...\n  return n < 0 ? (2 * -n) - 1 : n === 0 ? 0 : 2 * n\n}\n","module.exports = {\n  preencode,\n  encode,\n  decode\n}\n\nfunction preencode (state, num) {\n  if (num < 251) {\n    state.end++\n  } else if (num < 256) {\n    state.end += 2\n  } else if (num < 0x10000) {\n    state.end += 3\n  } else if (num < 0x1000000) {\n    state.end += 4\n  } else if (num < 0x100000000) {\n    state.end += 5\n  } else {\n    state.end++\n    const exp = Math.floor(Math.log(num) / Math.log(2)) - 32\n    preencode(state, exp)\n    state.end += 6\n  }\n}\n\nfunction encode (state, num) {\n  const max = 251\n  const x = num - max\n\n  if (num < max) {\n    state.buffer[state.start++] = num\n  } else if (num < 256) {\n    state.buffer[state.start++] = max\n    state.buffer[state.start++] = x\n  } else if (num < 0x10000) {\n    state.buffer[state.start++] = max + 1\n    state.buffer[state.start++] = x >> 8 & 0xff\n    state.buffer[state.start++] = x & 0xff\n  } else if (num < 0x1000000) {\n    state.buffer[state.start++] = max + 2\n    state.buffer[state.start++] = x >> 16\n    state.buffer[state.start++] = x >> 8 & 0xff\n    state.buffer[state.start++] = x & 0xff\n  } else if (num < 0x100000000) {\n    state.buffer[state.start++] = max + 3\n    state.buffer[state.start++] = x >> 24\n    state.buffer[state.start++] = x >> 16 & 0xff\n    state.buffer[state.start++] = x >> 8 & 0xff\n    state.buffer[state.start++] = x & 0xff\n  } else {\n    // need to use Math here as bitwise ops are 32 bit\n    const exp = Math.floor(Math.log(x) / Math.log(2)) - 32\n    state.buffer[state.start++] = 0xff\n\n    encode(state, exp)\n    const rem = x / Math.pow(2, exp - 11)\n\n    for (let i = 5; i >= 0; i--) {\n      state.buffer[state.start++] = rem / Math.pow(2, 8 * i) & 0xff\n    }\n  }\n}\n\nfunction decode (state) {\n  const max = 251\n\n  if (state.end - state.start < 1) throw new Error('Out of bounds')\n\n  const flag = state.buffer[state.start++]\n\n  if (flag < max) return flag\n\n  if (state.end - state.start < flag - max + 1) {\n    throw new Error('Out of bounds.')\n  }\n\n  if (flag < 252) {\n    return state.buffer[state.start++] +\n      max\n  }\n\n  if (flag < 253) {\n    return (state.buffer[state.start++] << 8) +\n      state.buffer[state.start++] +\n      max\n  }\n\n  if (flag < 254) {\n    return (state.buffer[state.start++] << 16) +\n      (state.buffer[state.start++] << 8) +\n      state.buffer[state.start++] +\n      max\n  }\n\n  // << 24 result may be interpreted as negative\n  if (flag < 255) {\n    return (state.buffer[state.start++] * 0x1000000) +\n      (state.buffer[state.start++] << 16) +\n      (state.buffer[state.start++] << 8) +\n      state.buffer[state.start++] +\n      max\n  }\n\n  const exp = decode(state)\n\n  if (state.end - state.start < 6) throw new Error('Out of bounds')\n\n  let rem = 0\n  for (let i = 5; i >= 0; i--) {\n    rem += state.buffer[state.start++] * Math.pow(2, 8 * i)\n  }\n\n  return (rem * Math.pow(2, exp - 11)) + max\n}\n","const b4a = require('b4a')\n\nconst { BE } = require('./endian')\n\nexports = module.exports = {\n  preencode (state, b) {\n    state.end += b.byteLength\n  },\n  encode (state, b) {\n    state.buffer.set(b, state.start)\n    state.start += b.byteLength\n  },\n  decode (state) {\n    const b = state.buffer.subarray(state.start, state.end)\n    state.start = state.end\n    return b\n  }\n}\n\nconst buffer = exports.buffer = {\n  preencode (state, b) {\n    if (b) uint8array.preencode(state, b)\n    else state.end++\n  },\n  encode (state, b) {\n    if (b) uint8array.encode(state, b)\n    else state.buffer[state.start++] = 0\n  },\n  decode (state) {\n    const b = state.buffer.subarray(state.start)\n    if (b.byteLength === 0) return null\n    state.start = state.end\n    return b\n  }\n}\n\nexports.binary = {\n  ...buffer,\n  preencode (state, b) {\n    if (typeof b === 'string') utf8.preencode(state, b)\n    else buffer.preencode(state, b)\n  },\n  encode (state, b) {\n    if (typeof b === 'string') utf8.encode(state, b)\n    else buffer.encode(state, b)\n  }\n}\n\nfunction typedarray (TypedArray, swap) {\n  const n = TypedArray.BYTES_PER_ELEMENT\n\n  return {\n    preencode (state, b) {\n      state.end += b.byteLength\n    },\n    encode (state, b) {\n      const view = new Uint8Array(b.buffer, b.byteOffset, b.byteLength)\n\n      if (BE && swap) swap(view)\n\n      state.buffer.set(view, state.start)\n      state.start += b.byteLength\n    },\n    decode (state) {\n      let b = state.buffer.subarray(state.start)\n      if ((b.byteOffset % n) !== 0) b = new Uint8Array(b)\n\n      if (BE && swap) swap(b)\n\n      state.start = state.end\n\n      return new TypedArray(b.buffer, b.byteOffset, b.byteLength / n)\n    }\n  }\n}\n\nconst uint8array = exports.uint8array = typedarray(Uint8Array)\nexports.uint16array = typedarray(Uint16Array, b4a.swap16)\nexports.uint32array = typedarray(Uint32Array, b4a.swap32)\n\nexports.int8array = typedarray(Int8Array)\nexports.int16array = typedarray(Int16Array, b4a.swap16)\nexports.int32array = typedarray(Int32Array, b4a.swap32)\n\nexports.float32array = typedarray(Float32Array, b4a.swap32)\nexports.float64array = typedarray(Float64Array, b4a.swap64)\n\nfunction string (encoding) {\n  return {\n    preencode (state, s) {\n      state.end += b4a.byteLength(s, encoding)\n    },\n    encode (state, s) {\n      state.start += b4a.write(state.buffer, s, state.start, encoding)\n    },\n    decode (state) {\n      const s = b4a.toString(state.buffer, encoding, state.start)\n      state.start = state.end\n      return s\n    }\n  }\n}\n\nconst utf8 = exports.string = exports.utf8 = string('utf-8')\nexports.ascii = string('ascii')\nexports.hex = string('hex')\nexports.base64 = string('base64')\nexports.ucs2 = exports.utf16le = string('utf16le')\n\nexports.array = function array (enc) {\n  return {\n    preencode (state, list) {\n      for (const value of list) enc.preencode(state, value)\n    },\n    encode (state, list) {\n      for (const value of list) enc.encode(state, value)\n    },\n    decode (state) {\n      const arr = []\n      while (state.start < state.end) arr.push(enc.decode(state))\n      return arr\n    }\n  }\n}\n\nexports.json = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v))\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v))\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\n\nexports.ndjson = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v) + '\\n')\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v) + '\\n')\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\n","const { EventEmitter } = require('events')\nconst safetyCatch = require('safety-catch')\nconst crypto = require('hypercore-crypto')\nconst sodium = require('sodium-universal')\nconst Hypercore = require('hypercore')\nconst Xache = require('xache')\nconst b4a = require('b4a')\n\nconst [NS] = crypto.namespace('corestore', 1)\nconst DEFAULT_NAMESPACE = b4a.alloc(32) // This is meant to be 32 0-bytes\n\nconst CORES_DIR = 'cores'\nconst PRIMARY_KEY_FILE_NAME = 'primary-key'\nconst USERDATA_NAME_KEY = 'corestore/name'\nconst USERDATA_NAMESPACE_KEY = 'corestore/namespace'\nconst POOL_SIZE = 512 // how many open fds to aim for before cycling them\n\nmodule.exports = class Corestore extends EventEmitter {\n  constructor (storage, opts = {}) {\n    super()\n\n    const root = opts._root\n\n    this.storage = Hypercore.defaultStorage(storage, { lock: PRIMARY_KEY_FILE_NAME, poolSize: opts.poolSize || POOL_SIZE })\n    this.cores = root ? root.cores : new Map()\n    this.cache = !!opts.cache\n    this.primaryKey = opts.primaryKey || null\n\n    this._keyStorage = null\n    this._bootstrap = opts._bootstrap || null\n    this._namespace = opts.namespace || DEFAULT_NAMESPACE\n\n    this._root = root || this\n    this._replicationStreams = root ? root._replicationStreams : []\n    this._overwrite = opts.overwrite === true\n\n    this._sessions = new Set() // sessions for THIS namespace\n\n    this._findingPeersCount = 0\n    this._findingPeers = []\n\n    if (this._namespace.byteLength !== 32) throw new Error('Namespace must be a 32-byte Buffer or Uint8Array')\n\n    this._closing = null\n    this._opening = this._open()\n    this._opening.catch(safetyCatch)\n  }\n\n  ready () {\n    return this._opening\n  }\n\n  findingPeers () {\n    let done = false\n    this._incFindingPeers()\n\n    return () => {\n      if (done) return\n      done = true\n      this._decFindingPeers()\n    }\n  }\n\n  _emitCore (name, core) {\n    this.emit(name, core)\n    if (this !== this._root) this._root.emit(name, core)\n  }\n\n  _incFindingPeers () {\n    if (++this._findingPeersCount !== 1) return\n\n    for (const core of this._sessions) {\n      this._findingPeers.push(core.findingPeers())\n    }\n  }\n\n  _decFindingPeers () {\n    if (--this._findingPeersCount !== 0) return\n\n    while (this._findingPeers.length > 0) {\n      this._findingPeers.pop()()\n    }\n  }\n\n  async _openNamespaceFromBootstrap () {\n    const ns = await this._bootstrap.getUserData(USERDATA_NAMESPACE_KEY)\n    if (ns) {\n      this._namespace = ns\n    }\n  }\n\n  async _open () {\n    if (this._root !== this) {\n      await this._root._opening\n      if (!this.primaryKey) this.primaryKey = this._root.primaryKey\n      if (this._bootstrap) await this._openNamespaceFromBootstrap()\n      return\n    }\n\n    this._keyStorage = this.storage(PRIMARY_KEY_FILE_NAME)\n\n    this.primaryKey = await new Promise((resolve, reject) => {\n      this._keyStorage.stat((err, st) => {\n        if (err && err.code !== 'ENOENT') return reject(err)\n        if (err || st.size < 32 || this._overwrite) {\n          const key = this.primaryKey || crypto.randomBytes(32)\n          return this._keyStorage.write(0, key, err => {\n            if (err) return reject(err)\n            return resolve(key)\n          })\n        }\n        this._keyStorage.read(0, 32, (err, key) => {\n          if (err) return reject(err)\n          if (this.primaryKey) return resolve(this.primaryKey)\n          return resolve(key)\n        })\n      })\n    })\n\n    if (this._bootstrap) await this._openNamespaceFromBootstrap()\n  }\n\n  async _generateKeys (opts) {\n    if (opts._discoveryKey) {\n      return {\n        keyPair: null,\n        auth: null,\n        discoveryKey: opts._discoveryKey\n      }\n    }\n    if (!opts.name) {\n      return {\n        keyPair: {\n          publicKey: opts.publicKey,\n          secretKey: opts.secretKey\n        },\n        sign: opts.sign,\n        auth: opts.auth,\n        discoveryKey: crypto.discoveryKey(opts.publicKey)\n      }\n    }\n    const { publicKey, auth } = await this.createKeyPair(opts.name)\n    return {\n      keyPair: {\n        publicKey,\n        secretKey: null\n      },\n      auth,\n      discoveryKey: crypto.discoveryKey(publicKey)\n    }\n  }\n\n  _getPrereadyUserData (core, key) {\n    // Need to manually read the header values before the Hypercore is ready, hence the ugliness.\n    for (const { key: savedKey, value } of core.core.header.userData) {\n      if (key === savedKey) return value\n    }\n    return null\n  }\n\n  async _preready (core) {\n    const name = this._getPrereadyUserData(core, USERDATA_NAME_KEY)\n    if (!name) return\n\n    const namespace = this._getPrereadyUserData(core, USERDATA_NAMESPACE_KEY)\n    const { publicKey, auth } = await this.createKeyPair(b4a.toString(name), namespace)\n    if (!b4a.equals(publicKey, core.key)) throw new Error('Stored core key does not match the provided name')\n\n    // TODO: Should Hypercore expose a helper for this, or should preready return keypair/auth?\n    core.auth = auth\n    core.key = publicKey\n    core.writable = true\n  }\n\n  async _preload (opts) {\n    if (!this.primaryKey) await this._opening\n\n    const { discoveryKey, keyPair, auth } = await this._generateKeys(opts)\n    const id = b4a.toString(discoveryKey, 'hex')\n\n    while (this.cores.has(id)) {\n      const existing = this.cores.get(id)\n      if (existing.opened && !existing.closing) return { from: existing, keyPair, auth }\n      if (existing.closing) {\n        await existing.close()\n      } else {\n        await existing.ready().catch(safetyCatch)\n      }\n    }\n\n    const userData = {}\n    if (opts.name) {\n      userData[USERDATA_NAME_KEY] = b4a.from(opts.name)\n      userData[USERDATA_NAMESPACE_KEY] = this._namespace\n    }\n\n    // No more async ticks allowed after this point -- necessary for caching\n\n    const storageRoot = [CORES_DIR, id.slice(0, 2), id.slice(2, 4), id].join('/')\n    const core = new Hypercore(p => this.storage(storageRoot + '/' + p), {\n      _preready: this._preready.bind(this),\n      autoClose: true,\n      encryptionKey: opts.encryptionKey || null,\n      userData,\n      auth,\n      cache: opts.cache,\n      createIfMissing: opts.createIfMissing === false ? false : !opts._discoveryKey,\n      keyPair: keyPair && keyPair.publicKey\n        ? {\n            publicKey: keyPair.publicKey,\n            secretKey: null\n          }\n        : null\n    })\n\n    if (this._root._closing) throw new Error('The corestore is closed')\n    this.cores.set(id, core)\n    core.ready().then(() => {\n      if (core.closing) return // extra safety here as ready is a tick after open\n      this._emitCore('core-open', core)\n      for (const { stream } of this._replicationStreams) {\n        core.replicate(stream, { session: true })\n      }\n    }, () => {\n      this.cores.delete(id)\n    })\n    core.once('close', () => {\n      this._emitCore('core-close', core)\n      this.cores.delete(id)\n    })\n    core.on('conflict', (len, fork, proof) => {\n      this.emit('conflict', core, len, fork, proof)\n    })\n\n    return { from: core, keyPair, auth }\n  }\n\n  async createKeyPair (name, namespace = this._namespace) {\n    if (!this.primaryKey) await this._opening\n\n    const keyPair = {\n      publicKey: b4a.allocUnsafe(sodium.crypto_sign_PUBLICKEYBYTES),\n      secretKey: b4a.alloc(sodium.crypto_sign_SECRETKEYBYTES),\n      auth: {\n        sign: (msg) => sign(keyPair, msg),\n        verify: (signable, signature) => {\n          return crypto.verify(signable, signature, keyPair.publicKey)\n        }\n      }\n    }\n\n    const seed = deriveSeed(this.primaryKey, namespace, name)\n    sodium.crypto_sign_seed_keypair(keyPair.publicKey, keyPair.secretKey, seed)\n\n    return keyPair\n  }\n\n  get (opts = {}) {\n    if (this._root._closing) throw new Error('The corestore is closed')\n    opts = validateGetOptions(opts)\n\n    if (opts.cache !== false) {\n      opts.cache = opts.cache === true || (this.cache && !opts.cache) ? defaultCache() : opts.cache\n    }\n\n    const core = new Hypercore(null, {\n      ...opts,\n      name: null,\n      preload: () => this._preload(opts)\n    })\n\n    this._sessions.add(core)\n    if (this._findingPeersCount > 0) {\n      this._findingPeers.push(core.findingPeers())\n    }\n\n    const gc = () => {\n      // technically better to also clear _findingPeers if we added it,\n      // but the lifecycle for those are pretty short so prob not worth the complexity\n      // as _decFindingPeers clear them all.\n      this._sessions.delete(core)\n    }\n\n    core.ready().catch(gc)\n    core.once('close', gc)\n\n    return core\n  }\n\n  replicate (isInitiator, opts) {\n    const isExternal = isStream(isInitiator) || !!(opts && opts.stream)\n    const stream = Hypercore.createProtocolStream(isInitiator, {\n      ...opts,\n      ondiscoverykey: discoveryKey => {\n        const core = this.get({ _discoveryKey: discoveryKey })\n        return core.ready().catch(safetyCatch)\n      }\n    })\n\n    for (const core of this.cores.values()) {\n      if (!core.opened || core.closing) continue // If the core is not opened, it will be replicated in preload.\n      core.replicate(stream, { session: true })\n    }\n\n    const streamRecord = { stream, isExternal }\n    this._replicationStreams.push(streamRecord)\n\n    stream.once('close', () => {\n      this._replicationStreams.splice(this._replicationStreams.indexOf(streamRecord), 1)\n    })\n\n    return stream\n  }\n\n  namespace (name) {\n    if (name instanceof Hypercore) {\n      return this.session({ _bootstrap: name })\n    }\n    return this.session({ namespace: generateNamespace(this._namespace, name) })\n  }\n\n  session (opts) {\n    return new Corestore(this.storage, {\n      namespace: this._namespace,\n      cache: this.cache,\n      _root: this._root,\n      ...opts\n    })\n  }\n\n  _closeNamespace () {\n    const closePromises = []\n    for (const session of this._sessions) {\n      closePromises.push(session.close())\n    }\n    return Promise.allSettled(closePromises)\n  }\n\n  async _closePrimaryNamespace () {\n    const closePromises = []\n    // At this point, the primary namespace is closing.\n    for (const { stream, isExternal } of this._replicationStreams) {\n      // Only close streams that were created by the Corestore\n      if (!isExternal) stream.destroy()\n    }\n    for (const core of this.cores.values()) {\n      closePromises.push(forceClose(core))\n    }\n    await Promise.allSettled(closePromises)\n    await new Promise((resolve, reject) => {\n      this._keyStorage.close(err => {\n        if (err) return reject(err)\n        return resolve(null)\n      })\n    })\n  }\n\n  async _close () {\n    await this._opening\n    await this._closeNamespace()\n    if (this._root === this) {\n      await this._closePrimaryNamespace()\n    }\n  }\n\n  close () {\n    if (this._closing) return this._closing\n    this._closing = this._close()\n    return this._closing\n  }\n}\n\nfunction sign (keyPair, message) {\n  if (!keyPair.secretKey) throw new Error('Invalid key pair')\n  return crypto.sign(message, keyPair.secretKey)\n}\n\nfunction validateGetOptions (opts) {\n  if (b4a.isBuffer(opts)) return { key: opts, publicKey: opts }\n  if (opts.key) {\n    opts.publicKey = opts.key\n  }\n  if (opts.keyPair) {\n    opts.publicKey = opts.keyPair.publicKey\n    opts.secretKey = opts.keyPair.secretKey\n  }\n  if (opts.name && typeof opts.name !== 'string') throw new Error('name option must be a String')\n  if (opts.name && opts.secretKey) throw new Error('Cannot provide both a name and a secret key')\n  if (opts.publicKey && !b4a.isBuffer(opts.publicKey)) throw new Error('publicKey option must be a Buffer or Uint8Array')\n  if (opts.secretKey && !b4a.isBuffer(opts.secretKey)) throw new Error('secretKey option must be a Buffer or Uint8Array')\n  if (!opts._discoveryKey && (!opts.name && !opts.publicKey)) throw new Error('Must provide either a name or a publicKey')\n  return opts\n}\n\nfunction generateNamespace (namespace, name) {\n  if (!b4a.isBuffer(name)) name = b4a.from(name)\n  const out = b4a.allocUnsafe(32)\n  sodium.crypto_generichash_batch(out, [namespace, name])\n  return out\n}\n\nfunction deriveSeed (primaryKey, namespace, name) {\n  if (!b4a.isBuffer(name)) name = b4a.from(name)\n  const out = b4a.alloc(32)\n  sodium.crypto_generichash_batch(out, [NS, namespace, name], primaryKey)\n  return out\n}\n\nfunction defaultCache () {\n  return new Xache({ maxSize: 65536, maxAge: 0 })\n}\n\nfunction isStream (s) {\n  return typeof s === 'object' && s && typeof s.pipe === 'function'\n}\n\nasync function forceClose (core) {\n  await core.ready()\n  return Promise.all(core.sessions.map(s => s.close()))\n}\n","/**\n * The JavaScript implementation of CRC32 is a version of the slice-by-16 algorithm\n * as implemented by Stephan Brumme, see https://github.com/stbrumme/crc32.\n *\n * Copyright (c) 2011-2016 Stephan Brumme\n *\n * This software is provided 'as-is', without any express or implied warranty.\n * In no event will the authors be held liable for any damages arising from the\n * use of this software.\n *\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it freely,\n * subject to the following restrictions:\n *\n * 1. The origin of this software must not be misrepresented; you must not claim\n *    that you wrote the original software.\n *    If you use this software in a product, an acknowledgment in the product\n *    documentation would be appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n *    misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nconst lookup = require('./lookup')\n\nexports.crc32 = function crc32 (buffer) {\n  let crc = ~0\n  let i = 0\n  let length = buffer.byteLength\n\n  while (length >= 16) {\n    crc = lookup[15][buffer[i++] ^ (crc & 0xff)] ^\n          lookup[14][buffer[i++] ^ ((crc >>> 8) & 0xff)] ^\n          lookup[13][buffer[i++] ^ ((crc >>> 16) & 0xff)] ^\n          lookup[12][buffer[i++] ^ (crc >>> 24)] ^\n          lookup[11][buffer[i++]] ^\n          lookup[10][buffer[i++]] ^\n          lookup[9][buffer[i++]] ^\n          lookup[8][buffer[i++]] ^\n          lookup[7][buffer[i++]] ^\n          lookup[6][buffer[i++]] ^\n          lookup[5][buffer[i++]] ^\n          lookup[4][buffer[i++]] ^\n          lookup[3][buffer[i++]] ^\n          lookup[2][buffer[i++]] ^\n          lookup[1][buffer[i++]] ^\n          lookup[0][buffer[i++]]\n\n    length -= 16\n  }\n\n  while (length-- > 0) {\n    crc = (crc >>> 8) ^ lookup[0][(crc & 0xff) ^ buffer[i++]]\n  }\n\n  return ~crc >>> 0\n}\n","const lookup = new Array(16)\n\nfor (let i = 0; i < 16; i++) {\n  lookup[i] = new Uint32Array(0x100)\n}\n\nfor (let i = 0; i <= 0xff; i++) {\n  let crc = i\n\n  for (let j = 0; j < 8; j++) {\n    crc = (crc >>> 1) ^ ((crc & 1) * 0xedb88320)\n  }\n\n  lookup[0][i] = crc\n}\n\nfor (let i = 0; i <= 0xff; i++) {\n  for (let j = 1; j < 16; j++) {\n    lookup[j][i] = (lookup[j - 1][i] >>> 8) ^ lookup[0][lookup[j - 1][i] & 0xff]\n  }\n}\n\nmodule.exports = lookup\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = class FixedFIFO {\n  constructor (hwm) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two')\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data) {\n    if (this.buffer[this.top] !== undefined) return false\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n    return true\n  }\n\n  shift () {\n    const last = this.buffer[this.btm]\n    if (last === undefined) return undefined\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  peek () {\n    return this.buffer[this.btm]\n  }\n\n  isEmpty () {\n    return this.buffer[this.btm] === undefined\n  }\n}\n","const FixedFIFO = require('./fixed-size')\n\nmodule.exports = class FastFIFO {\n  constructor (hwm) {\n    this.hwm = hwm || 16\n    this.head = new FixedFIFO(this.hwm)\n    this.tail = this.head\n  }\n\n  push (val) {\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift () {\n    const val = this.tail.shift()\n    if (val === undefined && this.tail.next) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      return this.tail.shift()\n    }\n    return val\n  }\n\n  peek () {\n    return this.tail.peek()\n  }\n\n  isEmpty () {\n    return this.head.isEmpty()\n  }\n}\n","exports.fullRoots = function (index, result) {\n  if (index & 1) throw new Error('You can only look up roots for depth(0) blocks')\n  if (!result) result = []\n\n  index /= 2\n\n  var offset = 0\n  var factor = 1\n\n  while (true) {\n    if (!index) return result\n    while (factor * 2 <= index) factor *= 2\n    result.push(offset + factor - 1)\n    offset = offset + 2 * factor\n    index -= factor\n    factor = 1\n  }\n}\n\nexports.depth = function (index) {\n  var depth = 0\n\n  index += 1\n  while (!(index & 1)) {\n    depth++\n    index = rightShift(index)\n  }\n\n  return depth\n}\n\nexports.sibling = function (index, depth) {\n  if (!depth) depth = exports.depth(index)\n  var offset = exports.offset(index, depth)\n\n  return exports.index(depth, offset & 1 ? offset - 1 : offset + 1)\n}\n\nexports.parent = function (index, depth) {\n  if (!depth) depth = exports.depth(index)\n  var offset = exports.offset(index, depth)\n\n  return exports.index(depth + 1, rightShift(offset))\n}\n\nexports.leftChild = function (index, depth) {\n  if (!(index & 1)) return -1\n  if (!depth) depth = exports.depth(index)\n  return exports.index(depth - 1, exports.offset(index, depth) * 2)\n}\n\nexports.rightChild = function (index, depth) {\n  if (!(index & 1)) return -1\n  if (!depth) depth = exports.depth(index)\n  return exports.index(depth - 1, 1 + (exports.offset(index, depth) * 2))\n}\n\nexports.children = function (index, depth) {\n  if (!(index & 1)) return null\n\n  if (!depth) depth = exports.depth(index)\n  var offset = exports.offset(index, depth) * 2\n\n  return [\n    exports.index(depth - 1, offset),\n    exports.index(depth - 1, offset + 1)\n  ]\n}\n\nexports.leftSpan = function (index, depth) {\n  if (!(index & 1)) return index\n  if (!depth) depth = exports.depth(index)\n  return exports.offset(index, depth) * twoPow(depth + 1)\n}\n\nexports.rightSpan = function (index, depth) {\n  if (!(index & 1)) return index\n  if (!depth) depth = exports.depth(index)\n  return (exports.offset(index, depth) + 1) * twoPow(depth + 1) - 2\n}\n\nexports.count = function (index, depth) {\n  if (!(index & 1)) return 1\n  if (!depth) depth = exports.depth(index)\n  return twoPow(depth + 1) - 1\n}\n\nexports.countLeaves = function (index) {\n  return (exports.count(index) + 1) / 2\n}\n\nexports.spans = function (index, depth) {\n  if (!(index & 1)) return [index, index]\n  if (!depth) depth = exports.depth(index)\n\n  var offset = exports.offset(index, depth)\n  var width = twoPow(depth + 1)\n\n  return [offset * width, (offset + 1) * width - 2]\n}\n\nexports.index = function (depth, offset) {\n  return (1 + 2 * offset) * twoPow(depth) - 1\n}\n\nexports.offset = function (index, depth) {\n  if (!(index & 1)) return index / 2\n  if (!depth) depth = exports.depth(index)\n\n  return ((index + 1) / twoPow(depth) - 1) / 2\n}\n\nexports.iterator = function (index) {\n  var ite = new Iterator()\n  ite.seek(index || 0)\n  return ite\n}\n\nfunction twoPow (n) {\n  return n < 31 ? 1 << n : ((1 << 30) * (1 << (n - 30)))\n}\n\nfunction rightShift (n) {\n  return (n - (n & 1)) / 2\n}\n\nfunction Iterator () {\n  this.index = 0\n  this.offset = 0\n  this.factor = 0\n}\n\nIterator.prototype.seek = function (index) {\n  this.index = index\n  if (this.index & 1) {\n    this.offset = exports.offset(index)\n    this.factor = twoPow(exports.depth(index) + 1)\n  } else {\n    this.offset = index / 2\n    this.factor = 2\n  }\n}\n\nIterator.prototype.isLeft = function () {\n  return (this.offset & 1) === 0\n}\n\nIterator.prototype.isRight = function () {\n  return (this.offset & 1) === 1\n}\n\nIterator.prototype.contains = function (index) {\n  return index > this.index\n    ? index < (this.index + this.factor / 2)\n    : index < this.index\n      ? index > (this.index - this.factor / 2)\n      : true\n}\n\nIterator.prototype.prev = function () {\n  if (!this.offset) return this.index\n  this.offset--\n  this.index -= this.factor\n  return this.index\n}\n\nIterator.prototype.next = function () {\n  this.offset++\n  this.index += this.factor\n  return this.index\n}\n\nIterator.prototype.count = function () {\n  if (!(this.index & 1)) return 1\n  return this.factor - 1\n}\n\nIterator.prototype.countLeaves = function () {\n  return (this.count() + 1) / 2\n}\n\nIterator.prototype.sibling = function () {\n  return this.isLeft() ? this.next() : this.prev()\n}\n\nIterator.prototype.parent = function () {\n  if (this.offset & 1) {\n    this.index -= this.factor / 2\n    this.offset = (this.offset - 1) / 2\n  } else {\n    this.index += this.factor / 2\n    this.offset /= 2\n  }\n  this.factor *= 2\n  return this.index\n}\n\nIterator.prototype.leftSpan = function () {\n  this.index = this.index - this.factor / 2 + 1\n  this.offset = this.index / 2\n  this.factor = 2\n  return this.index\n}\n\nIterator.prototype.rightSpan = function () {\n  this.index = this.index + this.factor / 2 - 1\n  this.offset = this.index / 2\n  this.factor = 2\n  return this.index\n}\n\nIterator.prototype.leftChild = function () {\n  if (this.factor === 2) return this.index\n  this.factor /= 2\n  this.index -= this.factor / 2\n  this.offset *= 2\n  return this.index\n}\n\nIterator.prototype.rightChild = function () {\n  if (this.factor === 2) return this.index\n  this.factor /= 2\n  this.index += this.factor / 2\n  this.offset = 2 * this.offset + 1\n  return this.index\n}\n\nIterator.prototype.nextTree = function () {\n  this.index = this.index + this.factor / 2 + 1\n  this.offset = this.index / 2\n  this.factor = 2\n  return this.index\n}\n\nIterator.prototype.prevTree = function () {\n  if (!this.offset) {\n    this.index = 0\n    this.factor = 2\n  } else {\n    this.index = this.index - this.factor / 2 - 1\n    this.offset = this.index / 2\n    this.factor = 2\n  }\n  return this.index\n}\n\nIterator.prototype.fullRoot = function (index) {\n  if (index <= this.index || (this.index & 1) > 0) return false\n  while (index > this.index + this.factor + this.factor / 2) {\n    this.index += this.factor / 2\n    this.factor *= 2\n    this.offset /= 2\n  }\n  return true\n}\n","const sodium = require('sodium-universal')\nconst c = require('compact-encoding')\nconst b4a = require('b4a')\n\n// https://en.wikipedia.org/wiki/Merkle_tree#Second_preimage_attack\nconst LEAF_TYPE = b4a.from([0])\nconst PARENT_TYPE = b4a.from([1])\nconst ROOT_TYPE = b4a.from([2])\n\nconst HYPERCORE = b4a.from('hypercore')\n\nexports.keyPair = function (seed) {\n  const publicKey = b4a.allocUnsafe(sodium.crypto_sign_PUBLICKEYBYTES)\n  const secretKey = b4a.allocUnsafe(sodium.crypto_sign_SECRETKEYBYTES)\n\n  if (seed) sodium.crypto_sign_seed_keypair(publicKey, secretKey, seed)\n  else sodium.crypto_sign_keypair(publicKey, secretKey)\n\n  return {\n    publicKey,\n    secretKey\n  }\n}\n\nexports.validateKeyPair = function (keyPair) {\n  const pk = b4a.allocUnsafe(sodium.crypto_sign_PUBLICKEYBYTES)\n  sodium.crypto_sign_ed25519_sk_to_pk(pk, keyPair.secretKey)\n  return b4a.equals(pk, keyPair.publicKey)\n}\n\nexports.sign = function (message, secretKey) {\n  const signature = b4a.allocUnsafe(sodium.crypto_sign_BYTES)\n  sodium.crypto_sign_detached(signature, message, secretKey)\n  return signature\n}\n\nexports.verify = function (message, signature, publicKey) {\n  return sodium.crypto_sign_verify_detached(signature, message, publicKey)\n}\n\nexports.data = function (data) {\n  const out = b4a.allocUnsafe(32)\n\n  sodium.crypto_generichash_batch(out, [\n    LEAF_TYPE,\n    c.encode(c.uint64, data.byteLength),\n    data\n  ])\n\n  return out\n}\n\nexports.parent = function (a, b) {\n  if (a.index > b.index) {\n    const tmp = a\n    a = b\n    b = tmp\n  }\n\n  const out = b4a.allocUnsafe(32)\n\n  sodium.crypto_generichash_batch(out, [\n    PARENT_TYPE,\n    c.encode(c.uint64, a.size + b.size),\n    a.hash,\n    b.hash\n  ])\n\n  return out\n}\n\nexports.tree = function (roots, out) {\n  const buffers = new Array(3 * roots.length + 1)\n  let j = 0\n\n  buffers[j++] = ROOT_TYPE\n\n  for (let i = 0; i < roots.length; i++) {\n    const r = roots[i]\n    buffers[j++] = r.hash\n    buffers[j++] = c.encode(c.uint64, r.index)\n    buffers[j++] = c.encode(c.uint64, r.size)\n  }\n\n  if (!out) out = b4a.allocUnsafe(32)\n  sodium.crypto_generichash_batch(out, buffers)\n  return out\n}\n\nexports.randomBytes = function (n) {\n  const buf = b4a.allocUnsafe(n)\n  sodium.randombytes_buf(buf)\n  return buf\n}\n\nexports.discoveryKey = function (publicKey) {\n  const digest = b4a.allocUnsafe(32)\n  sodium.crypto_generichash(digest, HYPERCORE, publicKey)\n  return digest\n}\n\nif (sodium.sodium_free) {\n  exports.free = function (secureBuf) {\n    if (secureBuf.secure) sodium.sodium_free(secureBuf)\n  }\n} else {\n  exports.free = function () {}\n}\n\nexports.namespace = function (name, count) {\n  const ids = typeof count === 'number' ? range(count) : count\n  const buf = b4a.allocUnsafe(32 * ids.length)\n  const list = new Array(ids.length)\n\n  const ns = b4a.allocUnsafe(33)\n  sodium.crypto_generichash(ns.subarray(0, 32), typeof name === 'string' ? b4a.from(name) : name)\n\n  for (let i = 0; i < list.length; i++) {\n    list[i] = buf.subarray(32 * i, 32 * i + 32)\n    ns[32] = ids[i]\n    sodium.crypto_generichash(list[i], ns)\n  }\n\n  return list\n}\n\nfunction range (count) {\n  const arr = new Array(count)\n  for (let i = 0; i < count; i++) arr[i] = i\n  return arr\n}\n","const { EventEmitter } = require('events')\nconst RAF = require('random-access-file')\nconst isOptions = require('is-options')\nconst hypercoreCrypto = require('hypercore-crypto')\nconst c = require('compact-encoding')\nconst b4a = require('b4a')\nconst Xache = require('xache')\nconst NoiseSecretStream = require('@hyperswarm/secret-stream')\nconst Protomux = require('protomux')\nconst z32 = require('z32')\n\nconst Replicator = require('./lib/replicator')\nconst Core = require('./lib/core')\nconst BlockEncryption = require('./lib/block-encryption')\nconst Info = require('./lib/info')\nconst Download = require('./lib/download')\nconst { ReadStream, WriteStream } = require('./lib/streams')\nconst { BAD_ARGUMENT, SESSION_CLOSED, SESSION_NOT_WRITABLE, SNAPSHOT_NOT_AVAILABLE } = require('./lib/errors')\n\nconst promises = Symbol.for('hypercore.promises')\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nmodule.exports = class Hypercore extends EventEmitter {\n  constructor (storage, key, opts) {\n    super()\n\n    if (isOptions(storage)) {\n      opts = storage\n      storage = null\n      key = null\n    } else if (isOptions(key)) {\n      opts = key\n      key = null\n    }\n\n    if (key && typeof key === 'string') {\n      key = b4a.from(key, 'hex')\n    }\n\n    if (!opts) opts = {}\n\n    if (!opts.crypto && key && key.byteLength !== 32) {\n      throw BAD_ARGUMENT('Hypercore key should be 32 bytes')\n    }\n\n    if (!storage) storage = opts.storage\n\n    this[promises] = true\n\n    this.storage = null\n    this.crypto = opts.crypto || hypercoreCrypto\n    this.core = null\n    this.replicator = null\n    this.encryption = null\n    this.extensions = new Map()\n    this.cache = opts.cache === true ? new Xache({ maxSize: 65536, maxAge: 0 }) : (opts.cache || null)\n\n    this.valueEncoding = null\n    this.encodeBatch = null\n    this.activeRequests = []\n\n    this.id = null\n    this.key = key || null\n    this.keyPair = null\n    this.readable = true\n    this.writable = false\n    this.opened = false\n    this.closed = false\n    this.snapshotted = !!opts.snapshot\n    this.sparse = opts.sparse !== false\n    this.sessions = opts._sessions || [this]\n    this.auth = opts.auth || null\n    this.autoClose = !!opts.autoClose\n    this.onwait = opts.onwait || null\n    this.wait = opts.wait !== false\n    this.timeout = opts.timeout || 0\n\n    this.closing = null\n    this.opening = this._openSession(key, storage, opts)\n    this.opening.catch(noop)\n\n    this._preappend = preappend.bind(this)\n    this._snapshot = null\n    this._findingPeers = 0\n  }\n\n  [inspect] (depth, opts) {\n    let indent = ''\n    if (typeof opts.indentationLvl === 'number') {\n      while (indent.length < opts.indentationLvl) indent += ' '\n    }\n\n    let peers = ''\n    const min = Math.min(this.peers.length, 5)\n\n    for (let i = 0; i < min; i++) {\n      const peer = this.peers[i]\n\n      peers += indent + '    Peer(\\n'\n      peers += indent + '      remotePublicKey: ' + opts.stylize(toHex(peer.remotePublicKey), 'string') + '\\n'\n      peers += indent + '      remoteLength: ' + opts.stylize(peer.remoteLength, 'number') + '\\n'\n      peers += indent + '      remoteFork: ' + opts.stylize(peer.remoteFork, 'number') + '\\n'\n      peers += indent + '      remoteCanUpgrade: ' + opts.stylize(peer.remoteCanUpgrade, 'boolean') + '\\n'\n      peers += indent + '    )' + '\\n'\n    }\n\n    if (this.peers.length > 5) {\n      peers += indent + '  ... and ' + (this.peers.length - 5) + ' more\\n'\n    }\n\n    if (peers) peers = '[\\n' + peers + indent + '  ]'\n    else peers = '[ ' + opts.stylize(0, 'number') + ' ]'\n\n    return this.constructor.name + '(\\n' +\n      indent + '  key: ' + opts.stylize(toHex(this.key), 'string') + '\\n' +\n      indent + '  discoveryKey: ' + opts.stylize(toHex(this.discoveryKey), 'string') + '\\n' +\n      indent + '  opened: ' + opts.stylize(this.opened, 'boolean') + '\\n' +\n      indent + '  closed: ' + opts.stylize(this.closed, 'boolean') + '\\n' +\n      indent + '  snapshotted: ' + opts.stylize(this.snapshotted, 'boolean') + '\\n' +\n      indent + '  sparse: ' + opts.stylize(this.sparse, 'boolean') + '\\n' +\n      indent + '  writable: ' + opts.stylize(this.writable, 'boolean') + '\\n' +\n      indent + '  length: ' + opts.stylize(this.length, 'number') + '\\n' +\n      indent + '  fork: ' + opts.stylize(this.fork, 'number') + '\\n' +\n      indent + '  sessions: [ ' + opts.stylize(this.sessions.length, 'number') + ' ]\\n' +\n      indent + '  activeRequests: [ ' + opts.stylize(this.activeRequests.length, 'number') + ' ]\\n' +\n      indent + '  peers: ' + peers + '\\n' +\n      indent + ')'\n  }\n\n  static getProtocolMuxer (stream) {\n    return stream.noiseStream.userData\n  }\n\n  static createProtocolStream (isInitiator, opts = {}) {\n    let outerStream = Protomux.isProtomux(isInitiator)\n      ? isInitiator.stream\n      : isStream(isInitiator)\n        ? isInitiator\n        : opts.stream\n\n    let noiseStream = null\n\n    if (outerStream) {\n      noiseStream = outerStream.noiseStream\n    } else {\n      noiseStream = new NoiseSecretStream(isInitiator, null, opts)\n      outerStream = noiseStream.rawStream\n    }\n    if (!noiseStream) throw BAD_ARGUMENT('Invalid stream')\n\n    if (!noiseStream.userData) {\n      const protocol = Protomux.from(noiseStream)\n\n      if (opts.ondiscoverykey) {\n        protocol.pair({ protocol: 'hypercore/alpha' }, opts.ondiscoverykey)\n      }\n      if (opts.keepAlive !== false) {\n        noiseStream.setKeepAlive(5000)\n      }\n      noiseStream.userData = protocol\n    }\n\n    return outerStream\n  }\n\n  static defaultStorage (storage, opts = {}) {\n    if (typeof storage !== 'string') {\n      if (!isRandomAccessClass(storage)) return storage\n      const Cls = storage // just to satisfy standard...\n      return name => new Cls(name)\n    }\n\n    const directory = storage\n    const toLock = opts.unlocked ? null : (opts.lock || 'oplog')\n    const pool = opts.pool || (opts.poolSize ? RAF.createPool(opts.poolSize) : null)\n\n    return createFile\n\n    function createFile (name) {\n      const lock = toLock === null ? false : isFile(name, toLock)\n      const sparse = isFile(name, 'data') || isFile(name, 'bitfield') || isFile(name, 'tree')\n      return new RAF(name, { directory, lock, sparse, pool: lock ? null : pool })\n    }\n\n    function isFile (name, n) {\n      return name === n || name.endsWith('/' + n)\n    }\n  }\n\n  snapshot (opts) {\n    return this.session({ ...opts, snapshot: true })\n  }\n\n  session (opts = {}) {\n    if (this.closing) {\n      // This makes the closing logic alot easier. If this turns out to be a problem\n      // in practive, open an issue and we'll try to make a solution for it.\n      throw SESSION_CLOSED('Cannot make sessions on a closing core')\n    }\n\n    const sparse = opts.sparse === false ? false : this.sparse\n    const wait = opts.wait === false ? false : this.wait\n    const onwait = opts.onwait === undefined ? this.onwait : opts.onwait\n    const timeout = opts.timeout === undefined ? this.timeout : opts.timeout\n    const Clz = opts.class || Hypercore\n    const s = new Clz(this.storage, this.key, {\n      ...opts,\n      sparse,\n      wait,\n      onwait,\n      timeout,\n      _opening: this.opening,\n      _sessions: this.sessions\n    })\n\n    s._passCapabilities(this)\n\n    // Configure the cache unless explicitly disabled.\n    if (opts.cache !== false) {\n      s.cache = opts.cache === true || !opts.cache ? this.cache : opts.cache\n    }\n\n    ensureEncryption(s, opts)\n\n    this.sessions.push(s)\n\n    return s\n  }\n\n  _passCapabilities (o) {\n    if (!this.auth) this.auth = o.auth\n\n    this.crypto = o.crypto\n    this.id = o.id\n    this.key = o.key\n    this.core = o.core\n    this.replicator = o.replicator\n    this.encryption = o.encryption\n    this.writable = !!(this.auth && this.auth.sign)\n    this.autoClose = o.autoClose\n\n    if (this.snapshotted && this.core && !this._snapshot) this._updateSnapshot()\n  }\n\n  async _openFromExisting (from, opts) {\n    await from.opening\n\n    // includes ourself as well, so the loop below also updates us\n    const sessions = this.sessions\n\n    for (const s of sessions) {\n      s.sessions = from.sessions\n      s.sessions.push(s)\n      s._passCapabilities(from)\n    }\n\n    this.storage = from.storage\n    this.replicator.findingPeers += this._findingPeers\n\n    ensureEncryption(this, opts)\n  }\n\n  async _openSession (key, storage, opts) {\n    const isFirst = !opts._opening\n\n    if (!isFirst) await opts._opening\n    if (opts.preload) opts = { ...opts, ...(await opts.preload()) }\n\n    const keyPair = (key && opts.keyPair)\n      ? { ...opts.keyPair, publicKey: key }\n      : key\n        ? { publicKey: key, secretKey: null }\n        : opts.keyPair\n\n    // This only works if the hypercore was fully loaded,\n    // but we only do this to validate the keypair to help catch bugs so yolo\n    if (this.key && keyPair) keyPair.publicKey = this.key\n\n    if (opts.auth) {\n      this.auth = opts.auth\n    } else if (opts.sign) {\n      this.auth = Core.createAuth(this.crypto, keyPair, opts)\n    } else if (keyPair && keyPair.secretKey) {\n      this.auth = Core.createAuth(this.crypto, keyPair)\n    }\n\n    if (isFirst) {\n      await this._openCapabilities(keyPair, storage, opts)\n      // Only the root session should pass capabilities to other sessions.\n      for (let i = 0; i < this.sessions.length; i++) {\n        const s = this.sessions[i]\n        if (s !== this) s._passCapabilities(this)\n      }\n    }\n\n    if (!this.auth) this.auth = this.core.defaultAuth\n    this.writable = !!this.auth.sign\n\n    if (opts.valueEncoding) {\n      this.valueEncoding = c.from(opts.valueEncoding)\n    }\n    if (opts.encodeBatch) {\n      this.encodeBatch = opts.encodeBatch\n    }\n\n    // Start continous replication if not in sparse mode.\n    if (!this.sparse) this.download({ start: 0, end: -1 })\n\n    // This is a hidden option that's only used by Corestore.\n    // It's required so that corestore can load a name from userData before 'ready' is emitted.\n    if (opts._preready) await opts._preready(this)\n\n    this.opened = true\n    this.emit('ready')\n  }\n\n  async _openCapabilities (keyPair, storage, opts) {\n    if (opts.from) return this._openFromExisting(opts.from, opts)\n\n    this.storage = Hypercore.defaultStorage(opts.storage || storage)\n\n    this.core = await Core.open(this.storage, {\n      force: opts.force,\n      createIfMissing: opts.createIfMissing,\n      overwrite: opts.overwrite,\n      keyPair,\n      crypto: this.crypto,\n      legacy: opts.legacy,\n      auth: opts.auth,\n      onupdate: this._oncoreupdate.bind(this),\n      onconflict: this._oncoreconflict.bind(this)\n    })\n\n    if (opts.userData) {\n      for (const [key, value] of Object.entries(opts.userData)) {\n        await this.core.userData(key, value)\n      }\n    }\n\n    this.key = this.core.header.signer.publicKey\n    this.keyPair = this.core.header.signer\n    this.id = z32.encode(this.key)\n\n    this.replicator = new Replicator(this.core, this.key, {\n      eagerUpdate: true,\n      allowFork: opts.allowFork !== false,\n      onpeerupdate: this._onpeerupdate.bind(this),\n      onupload: this._onupload.bind(this)\n    })\n\n    this.replicator.findingPeers += this._findingPeers\n\n    if (!this.encryption && opts.encryptionKey) {\n      this.encryption = new BlockEncryption(opts.encryptionKey, this.key)\n    }\n  }\n\n  _getSnapshot () {\n    if (this.sparse) {\n      return {\n        length: this.core.tree.length,\n        byteLength: this.core.tree.byteLength,\n        fork: this.core.tree.fork,\n        compatLength: this.core.tree.length\n      }\n    }\n\n    return {\n      length: this.core.header.contiguousLength,\n      byteLength: 0,\n      fork: this.core.tree.fork,\n      compatLength: this.core.header.contiguousLength\n    }\n  }\n\n  _updateSnapshot () {\n    const prev = this._snapshot\n    const next = this._snapshot = this._getSnapshot()\n\n    if (!prev) return true\n    return prev.length !== next.length || prev.fork !== next.fork\n  }\n\n  close (err) {\n    if (this.closing) return this.closing\n    this.closing = this._close(err || null)\n    return this.closing\n  }\n\n  async _close (err) {\n    if (this.opened === false) await this.opening\n\n    const i = this.sessions.indexOf(this)\n    if (i === -1) return\n\n    this.sessions.splice(i, 1)\n    this.readable = false\n    this.writable = false\n    this.closed = true\n    this.opened = false\n\n    const gc = []\n    for (const ext of this.extensions.values()) {\n      if (ext.session === this) gc.push(ext)\n    }\n    for (const ext of gc) ext.destroy()\n\n    if (this.replicator !== null) {\n      this.replicator.findingPeers -= this._findingPeers\n      this.replicator.clearRequests(this.activeRequests, err)\n    }\n\n    this._findingPeers = 0\n\n    if (this.sessions.length) {\n      // if this is the last session and we are auto closing, trigger that first to enforce error handling\n      if (this.sessions.length === 1 && this.autoClose) await this.sessions[0].close(err)\n      // emit \"fake\" close as this is a session\n      this.emit('close', false)\n      return\n    }\n\n    if (this.replicator !== null) {\n      this.replicator.destroy()\n    }\n\n    await this.core.close()\n\n    this.emit('close', true)\n  }\n\n  replicate (isInitiator, opts = {}) {\n    // Only limitation here is that ondiscoverykey doesn't work atm when passing a muxer directly,\n    // because it doesn't really make a lot of sense.\n    if (Protomux.isProtomux(isInitiator)) return this._attachToMuxer(isInitiator, opts)\n\n    const protocolStream = Hypercore.createProtocolStream(isInitiator, opts)\n    const noiseStream = protocolStream.noiseStream\n    const protocol = noiseStream.userData\n    const useSession = !!opts.session\n\n    this._attachToMuxer(protocol, useSession)\n\n    return protocolStream\n  }\n\n  _attachToMuxer (mux, useSession) {\n    if (this.opened) {\n      this._attachToMuxerOpened(mux, useSession)\n    } else {\n      this.opening.then(this._attachToMuxerOpened.bind(this, mux, useSession), mux.destroy.bind(mux))\n    }\n\n    return mux\n  }\n\n  _attachToMuxerOpened (mux, useSession) {\n    // If the user wants to, we can make this replication run in a session\n    // that way the core wont close \"under them\" during replication\n    const session = useSession ? this.session() : null\n    this.replicator.attachTo(mux, session)\n  }\n\n  get discoveryKey () {\n    return this.replicator === null ? null : this.replicator.discoveryKey\n  }\n\n  get length () {\n    if (this._snapshot) return this._snapshot.length\n    if (this.core === null) return 0\n    if (!this.sparse) return this.contiguousLength\n    return this.core.tree.length\n  }\n\n  get indexedLength () {\n    return this.length\n  }\n\n  /**\n   * Deprecated. Use `const { byteLength } = await core.info()`.\n   */\n  get byteLength () {\n    if (this._snapshot) return this._snapshot.byteLength\n    if (this.core === null) return 0\n    if (!this.sparse) return this.contiguousByteLength\n    return this.core.tree.byteLength - (this.core.tree.length * this.padding)\n  }\n\n  get contiguousLength () {\n    return this.core === null ? 0 : this.core.header.contiguousLength\n  }\n\n  get contiguousByteLength () {\n    return 0\n  }\n\n  get fork () {\n    return this.core === null ? 0 : this.core.tree.fork\n  }\n\n  get peers () {\n    return this.replicator === null ? [] : this.replicator.peers\n  }\n\n  get encryptionKey () {\n    return this.encryption && this.encryption.key\n  }\n\n  get padding () {\n    return this.encryption === null ? 0 : this.encryption.padding\n  }\n\n  ready () {\n    return this.opening\n  }\n\n  _onupload (index, value, from) {\n    const byteLength = value.byteLength - this.padding\n\n    for (let i = 0; i < this.sessions.length; i++) {\n      this.sessions[i].emit('upload', index, byteLength, from)\n    }\n  }\n\n  async _oncoreconflict (proof, from) {\n    await this.replicator.onconflict(from)\n\n    for (const s of this.sessions) s.emit('conflict', proof.upgrade.length, proof.fork, proof)\n\n    const err = new Error('Two conflicting signatures exist for length ' + proof.upgrade.length)\n\n    const all = []\n    for (const s of this.sessions) all.push(s.close(err))\n    await Promise.allSettled(all)\n  }\n\n  _oncoreupdate (status, bitfield, value, from) {\n    if (status !== 0) {\n      const truncatedNonSparse = (status & 0b1000) !== 0\n      const appendedNonSparse = (status & 0b0100) !== 0\n      const truncated = (status & 0b0010) !== 0\n      const appended = (status & 0b0001) !== 0\n\n      if (truncated) {\n        this.replicator.ontruncate(bitfield.start)\n      }\n\n      if ((status & 0b0011) !== 0) {\n        this.replicator.onupgrade()\n      }\n\n      for (let i = 0; i < this.sessions.length; i++) {\n        const s = this.sessions[i]\n\n        if (truncated) {\n          if (s.cache) s.cache.clear()\n\n          // If snapshotted, make sure to update our compat so we can fail gets\n          if (s._snapshot && bitfield.start < s._snapshot.compatLength) s._snapshot.compatLength = bitfield.start\n        }\n\n        if (s.sparse ? truncated : truncatedNonSparse) {\n          s.emit('truncate', bitfield.start, this.core.tree.fork)\n        }\n\n        // For sparse sessions, immediately emit appends. If non-sparse, emit if contig length has updated\n        if (s.sparse ? appended : appendedNonSparse) {\n          s.emit('append')\n        }\n      }\n\n      const contig = this.core.header.contiguousLength\n\n      // When the contig length catches up, broadcast the non-sparse length to peers\n      if (appendedNonSparse && contig === this.core.tree.length) {\n        for (const peer of this.peers) {\n          if (peer.broadcastedNonSparse) continue\n\n          peer.broadcastRange(0, contig)\n          peer.broadcastedNonSparse = true\n        }\n      }\n    }\n\n    if (bitfield) {\n      this.replicator.onhave(bitfield.start, bitfield.length, bitfield.drop)\n    }\n\n    if (value) {\n      const byteLength = value.byteLength - this.padding\n\n      for (let i = 0; i < this.sessions.length; i++) {\n        this.sessions[i].emit('download', bitfield.start, byteLength, from)\n      }\n    }\n  }\n\n  _onpeerupdate (added, peer) {\n    const name = added ? 'peer-add' : 'peer-remove'\n\n    for (let i = 0; i < this.sessions.length; i++) {\n      this.sessions[i].emit(name, peer)\n\n      if (added) {\n        for (const ext of this.sessions[i].extensions.values()) {\n          peer.extensions.set(ext.name, ext)\n        }\n      }\n    }\n  }\n\n  async setUserData (key, value) {\n    if (this.opened === false) await this.opening\n    return this.core.userData(key, value)\n  }\n\n  async getUserData (key) {\n    if (this.opened === false) await this.opening\n    for (const { key: savedKey, value } of this.core.header.userData) {\n      if (key === savedKey) return value\n    }\n    return null\n  }\n\n  findingPeers () {\n    this._findingPeers++\n    if (this.replicator !== null && !this.closing) this.replicator.findingPeers++\n\n    let once = true\n\n    return () => {\n      if (this.closing || !once) return\n      once = false\n      this._findingPeers--\n      if (this.replicator !== null && --this.replicator.findingPeers === 0) {\n        this.replicator.updateAll()\n      }\n    }\n  }\n\n  async info (opts) {\n    if (this.opened === false) await this.opening\n\n    return Info.from(this, opts)\n  }\n\n  async update (opts) {\n    if (this.opened === false) await this.opening\n    if (this.closing !== null) return false\n\n    if (this.writable && (!opts || opts.force !== true)) {\n      if (!this.snapshotted) return false\n      return this._updateSnapshot()\n    }\n\n    const remoteWait = this._shouldWait(opts, this.replicator.findingPeers > 0)\n\n    let upgraded = false\n\n    if (await this.replicator.applyPendingReorg()) {\n      upgraded = true\n    }\n\n    if (!upgraded && remoteWait) {\n      const activeRequests = (opts && opts.activeRequests) || this.activeRequests\n      const req = this.replicator.addUpgrade(activeRequests)\n\n      upgraded = await req.promise\n    }\n\n    if (!upgraded) return false\n    if (this.snapshotted) return this._updateSnapshot()\n    return true\n  }\n\n  async seek (bytes, opts) {\n    if (this.opened === false) await this.opening\n\n    const s = this.core.tree.seek(bytes, this.padding)\n\n    const offset = await s.update()\n    if (offset) return offset\n\n    if (this.closing !== null) throw SESSION_CLOSED()\n\n    if (!this._shouldWait(opts, this.wait)) return null\n\n    const activeRequests = (opts && opts.activeRequests) || this.activeRequests\n    const req = this.replicator.addSeek(activeRequests, s)\n\n    const timeout = opts && opts.timeout !== undefined ? opts.timeout : this.timeout\n    if (timeout) req.context.setTimeout(req, timeout)\n\n    return req.promise\n  }\n\n  async has (start, end = start + 1) {\n    if (this.opened === false) await this.opening\n\n    const length = end - start\n    if (length <= 0) return false\n    if (length === 1) return this.core.bitfield.get(start)\n\n    const i = this.core.bitfield.firstUnset(start)\n    return i === -1 || i >= end\n  }\n\n  async get (index, opts) {\n    if (this.opened === false) await this.opening\n    if (this.closing !== null) throw SESSION_CLOSED()\n    if (this._snapshot !== null && index >= this._snapshot.compatLength) throw SNAPSHOT_NOT_AVAILABLE()\n\n    const encoding = (opts && opts.valueEncoding && c.from(opts.valueEncoding)) || this.valueEncoding\n\n    let req = this.cache && this.cache.get(index)\n    if (!req) req = this._get(index, opts)\n\n    let block = await req\n    if (!block) return null\n\n    if (this.encryption && (!opts || opts.decrypt !== false)) {\n      // Copy the block as it might be shared with other sessions.\n      block = b4a.from(block)\n\n      this.encryption.decrypt(index, block)\n    }\n\n    return this._decode(encoding, block)\n  }\n\n  async clear (start, end = start + 1, opts) {\n    if (this.opened === false) await this.opening\n    if (this.closing !== null) throw SESSION_CLOSED()\n\n    if (typeof end === 'object') {\n      opts = end\n      end = start + 1\n    }\n\n    if (start >= end) return\n\n    await this.core.clear(start, end)\n  }\n\n  async _get (index, opts) {\n    let block\n\n    if (this.core.bitfield.get(index)) {\n      block = this.core.blocks.get(index)\n\n      if (this.cache) this.cache.set(index, block)\n    } else {\n      if (!this._shouldWait(opts, this.wait)) return null\n\n      if (opts && opts.onwait) opts.onwait(index, this)\n      if (this.onwait) this.onwait(index, this)\n\n      const activeRequests = (opts && opts.activeRequests) || this.activeRequests\n\n      const req = this.replicator.addBlock(activeRequests, index)\n\n      const timeout = opts && opts.timeout !== undefined ? opts.timeout : this.timeout\n      if (timeout) req.context.setTimeout(req, timeout)\n\n      block = this._cacheOnResolve(index, req.promise, this.core.tree.fork)\n    }\n\n    return block\n  }\n\n  async _cacheOnResolve (index, req, fork) {\n    const block = await req\n\n    if (this.cache && fork === this.core.tree.fork) {\n      this.cache.set(index, Promise.resolve(block))\n    }\n\n    return block\n  }\n\n  _shouldWait (opts, defaultValue) {\n    if (opts) {\n      if (opts.wait === false) return false\n      if (opts.wait === true) return true\n    }\n    return defaultValue\n  }\n\n  createReadStream (opts) {\n    return new ReadStream(this, opts)\n  }\n\n  createWriteStream (opts) {\n    return new WriteStream(this, opts)\n  }\n\n  download (range) {\n    const req = this._download(range)\n\n    // do not crash in the background...\n    req.catch(noop)\n\n    return new Download(req)\n  }\n\n  async _download (range) {\n    if (this.opened === false) await this.opening\n\n    const activeRequests = (range && range.activeRequests) || this.activeRequests\n\n    return this.replicator.addRange(activeRequests, range)\n  }\n\n  // TODO: get rid of this / deprecate it?\n  undownload (range) {\n    range.destroy(null)\n  }\n\n  // TODO: get rid of this / deprecate it?\n  cancel (request) {\n    // Do nothing for now\n  }\n\n  async truncate (newLength = 0, fork = -1) {\n    if (this.opened === false) await this.opening\n    if (this.writable === false) throw SESSION_NOT_WRITABLE()\n\n    if (fork === -1) fork = this.core.tree.fork + 1\n    await this.core.truncate(newLength, fork, this.auth)\n\n    // TODO: Should propagate from an event triggered by the oplog\n    this.replicator.updateAll()\n  }\n\n  async append (blocks) {\n    if (this.opened === false) await this.opening\n    if (this.writable === false) throw SESSION_NOT_WRITABLE()\n\n    blocks = Array.isArray(blocks) ? blocks : [blocks]\n\n    const preappend = this.encryption && this._preappend\n\n    const buffers = this.encodeBatch !== null ? this.encodeBatch(blocks) : new Array(blocks.length)\n\n    if (this.encodeBatch === null) {\n      for (let i = 0; i < blocks.length; i++) {\n        buffers[i] = this._encode(this.valueEncoding, blocks[i])\n      }\n    }\n\n    return this.core.append(buffers, this.auth, { preappend })\n  }\n\n  async treeHash (length) {\n    if (length === undefined) {\n      await this.ready()\n      length = this.core.tree.length\n    }\n\n    const roots = await this.core.tree.getRoots(length)\n    return this.crypto.tree(roots)\n  }\n\n  registerExtension (name, handlers = {}) {\n    if (this.extensions.has(name)) {\n      const ext = this.extensions.get(name)\n      ext.handlers = handlers\n      ext.encoding = c.from(handlers.encoding || c.buffer)\n      ext.session = this\n      return ext\n    }\n\n    const ext = {\n      name,\n      handlers,\n      encoding: c.from(handlers.encoding || c.buffer),\n      session: this,\n      send (message, peer) {\n        const buffer = c.encode(this.encoding, message)\n        peer.extension(name, buffer)\n      },\n      broadcast (message) {\n        const buffer = c.encode(this.encoding, message)\n        for (const peer of this.session.peers) {\n          peer.extension(name, buffer)\n        }\n      },\n      destroy () {\n        for (const peer of this.session.peers) {\n          if (peer.extensions.get(name) === ext) peer.extensions.delete(name)\n        }\n        this.session.extensions.delete(name)\n      },\n      _onmessage (state, peer) {\n        const m = this.encoding.decode(state)\n        if (this.handlers.onmessage) this.handlers.onmessage(m, peer)\n      }\n    }\n\n    this.extensions.set(name, ext)\n    for (const peer of this.peers) {\n      peer.extensions.set(name, ext)\n    }\n\n    return ext\n  }\n\n  _encode (enc, val) {\n    const state = { start: this.padding, end: this.padding, buffer: null }\n\n    if (b4a.isBuffer(val)) {\n      if (state.start === 0) return val\n      state.end += val.byteLength\n    } else if (enc) {\n      enc.preencode(state, val)\n    } else {\n      val = b4a.from(val)\n      if (state.start === 0) return val\n      state.end += val.byteLength\n    }\n\n    state.buffer = b4a.allocUnsafe(state.end)\n\n    if (enc) enc.encode(state, val)\n    else state.buffer.set(val, state.start)\n\n    return state.buffer\n  }\n\n  _decode (enc, block) {\n    if (this.padding) block = block.subarray(this.padding)\n    if (enc) return c.decode(enc, block)\n    return block\n  }\n}\n\nfunction noop () {}\n\nfunction isStream (s) {\n  return typeof s === 'object' && s && typeof s.pipe === 'function'\n}\n\nfunction isRandomAccessClass (fn) {\n  return !!(typeof fn === 'function' && fn.prototype && typeof fn.prototype.open === 'function')\n}\n\nfunction toHex (buf) {\n  return buf && b4a.toString(buf, 'hex')\n}\n\nfunction preappend (blocks) {\n  const offset = this.core.tree.length\n  const fork = this.core.tree.fork\n\n  for (let i = 0; i < blocks.length; i++) {\n    this.encryption.encrypt(offset + i, blocks[i], fork)\n  }\n}\n\nfunction ensureEncryption (core, opts) {\n  if (!opts.encryptionKey) return\n  // Only override the block encryption if its either not already set or if\n  // the caller provided a different key.\n  if (core.encryption && b4a.equals(core.encryption.key, opts.encryptionKey)) return\n  core.encryption = new BlockEncryption(opts.encryptionKey, core.key)\n}\n","const BigSparseArray = require('big-sparse-array')\nconst b4a = require('b4a')\nconst quickbit = require('./compat').quickbit\n\nconst BITS_PER_PAGE = 32768\nconst BYTES_PER_PAGE = BITS_PER_PAGE / 8\nconst WORDS_PER_PAGE = BYTES_PER_PAGE / 4\nconst BITS_PER_SEGMENT = 2097152\nconst BYTES_PER_SEGMENT = BITS_PER_SEGMENT / 8\nconst WORDS_PER_SEGMENT = BYTES_PER_SEGMENT / 4\nconst INITIAL_WORDS_PER_SEGMENT = 1024\nconst PAGES_PER_SEGMENT = BITS_PER_SEGMENT / BITS_PER_PAGE\nconst SEGMENT_GROWTH_FACTOR = 4\n\nclass BitfieldPage {\n  constructor (index, segment) {\n    this.dirty = false\n    this.index = index\n    this.offset = index * BYTES_PER_PAGE - segment.offset\n    this.bitfield = null\n    this.segment = segment\n\n    segment.add(this)\n  }\n\n  get tree () {\n    return this.segment.tree\n  }\n\n  get (index) {\n    return quickbit.get(this.bitfield, index)\n  }\n\n  set (index, val) {\n    if (quickbit.set(this.bitfield, index, val)) {\n      this.tree.update(this.offset * 8 + index)\n    }\n  }\n\n  setRange (start, length, val) {\n    quickbit.fill(this.bitfield, val, start, start + length)\n\n    let i = Math.floor(start / 32)\n    const n = i + Math.ceil(length / 32)\n\n    while (i < n) this.tree.update(this.offset * 8 + i++ * 32)\n  }\n\n  findFirst (val, position) {\n    return quickbit.findFirst(this.bitfield, val, position)\n  }\n\n  findLast (val, position) {\n    return quickbit.findLast(this.bitfield, val, position)\n  }\n}\n\nclass BitfieldSegment {\n  constructor (index, bitfield) {\n    this.index = index\n    this.offset = index * BYTES_PER_SEGMENT\n    this.tree = quickbit.Index.from(bitfield)\n    this.pages = new Array(PAGES_PER_SEGMENT)\n  }\n\n  get bitfield () {\n    return this.tree.field\n  }\n\n  add (page) {\n    const i = page.index - this.index * PAGES_PER_SEGMENT\n    this.pages[i] = page\n\n    const start = i * WORDS_PER_PAGE\n    const end = start + WORDS_PER_PAGE\n\n    if (end >= this.bitfield.length) this.reallocate(end)\n\n    page.bitfield = this.bitfield.subarray(start, end)\n  }\n\n  reallocate (length) {\n    let target = this.bitfield.length\n    while (target < length) target *= SEGMENT_GROWTH_FACTOR\n\n    const bitfield = new Uint32Array(target)\n    bitfield.set(this.bitfield)\n\n    this.tree = quickbit.Index.from(bitfield)\n\n    for (let i = 0; i < this.pages.length; i++) {\n      const page = this.pages[i]\n      if (!page) continue\n\n      const start = i * WORDS_PER_PAGE\n      const end = start + WORDS_PER_PAGE\n\n      page.bitfield = bitfield.subarray(start, end)\n    }\n  }\n\n  findFirst (val, position) {\n    position = this.tree.skipFirst(!val, position)\n\n    const j = position & (BITS_PER_PAGE - 1)\n    const i = (position - j) / BITS_PER_PAGE\n\n    if (i >= PAGES_PER_SEGMENT) return -1\n\n    const p = this.pages[i]\n\n    if (p) {\n      const index = p.findFirst(val, j)\n\n      if (index !== -1) {\n        return i * BITS_PER_PAGE + index\n      }\n    }\n\n    return -1\n  }\n\n  findLast (val, position) {\n    position = this.tree.skipLast(!val, position)\n\n    const j = position & (BITS_PER_PAGE - 1)\n    const i = (position - j) / BITS_PER_PAGE\n\n    if (i >= PAGES_PER_SEGMENT) return -1\n\n    const p = this.pages[i]\n\n    if (p) {\n      const index = p.findLast(val, j)\n\n      if (index !== -1) {\n        return i * BITS_PER_PAGE + index\n      }\n    }\n\n    return -1\n  }\n}\n\nmodule.exports = class Bitfield {\n  constructor (storage, buffer) {\n    this.unflushed = []\n    this.storage = storage\n    this.resumed = !!(buffer && buffer.byteLength >= 4)\n\n    this._pages = new BigSparseArray()\n    this._segments = new BigSparseArray()\n\n    const view = this.resumed\n      ? new Uint32Array(\n        buffer.buffer,\n        buffer.byteOffset,\n        Math.floor(buffer.byteLength / 4)\n      )\n      : new Uint32Array(INITIAL_WORDS_PER_SEGMENT)\n\n    for (let i = 0; i < view.length; i += WORDS_PER_SEGMENT) {\n      let bitfield = view.subarray(i, i + (WORDS_PER_SEGMENT))\n      let length = WORDS_PER_SEGMENT\n\n      if (i === 0) {\n        length = INITIAL_WORDS_PER_SEGMENT\n        while (length < bitfield.length) length *= SEGMENT_GROWTH_FACTOR\n      }\n\n      if (bitfield.length !== length) {\n        const copy = new Uint32Array(length)\n        copy.set(bitfield, 0)\n        bitfield = copy\n      }\n\n      const segment = new BitfieldSegment(i / (WORDS_PER_SEGMENT), bitfield)\n      this._segments.set(segment.index, segment)\n\n      for (let j = 0; j < bitfield.length; j += WORDS_PER_PAGE) {\n        const page = new BitfieldPage((i + j) / WORDS_PER_PAGE, segment)\n        this._pages.set(page.index, page)\n      }\n    }\n  }\n\n  get (index) {\n    const j = index & (BITS_PER_PAGE - 1)\n    const i = (index - j) / BITS_PER_PAGE\n\n    const p = this._pages.get(i)\n\n    return p ? p.get(j) : false\n  }\n\n  set (index, val) {\n    const j = index & (BITS_PER_PAGE - 1)\n    const i = (index - j) / BITS_PER_PAGE\n\n    let p = this._pages.get(i)\n\n    if (!p && val) {\n      const k = Math.floor(i / PAGES_PER_SEGMENT)\n      const s = this._segments.get(k) || this._segments.set(k, new BitfieldSegment(k, new Uint32Array(k === 0 ? INITIAL_WORDS_PER_SEGMENT : WORDS_PER_SEGMENT)))\n\n      p = this._pages.set(i, new BitfieldPage(i, s))\n    }\n\n    if (p) {\n      p.set(j, val)\n\n      if (!p.dirty) {\n        p.dirty = true\n        this.unflushed.push(p)\n      }\n    }\n  }\n\n  setRange (start, length, val) {\n    let j = start & (BITS_PER_PAGE - 1)\n    let i = (start - j) / BITS_PER_PAGE\n\n    while (length > 0) {\n      let p = this._pages.get(i)\n\n      if (!p && val) {\n        const k = Math.floor(i / PAGES_PER_SEGMENT)\n        const s = this._segments.get(k) || this._segments.set(k, new BitfieldSegment(k, new Uint32Array(k === 0 ? INITIAL_WORDS_PER_SEGMENT : WORDS_PER_SEGMENT)))\n\n        p = this._pages.set(i, new BitfieldPage(i, s))\n      }\n\n      const end = Math.min(j + length, BITS_PER_PAGE)\n      const range = end - j\n\n      if (p) {\n        p.setRange(j, range, val)\n\n        if (!p.dirty) {\n          p.dirty = true\n          this.unflushed.push(p)\n        }\n      }\n\n      j = 0\n      i++\n      length -= range\n    }\n  }\n\n  findFirst (val, position) {\n    let j = position & (BITS_PER_SEGMENT - 1)\n    let i = (position - j) / BITS_PER_SEGMENT\n\n    while (i < this._segments.maxLength) {\n      const s = this._segments.get(i)\n\n      if (s) {\n        const index = s.findFirst(val, j)\n\n        if (index !== -1) {\n          return i * BITS_PER_SEGMENT + index\n        }\n      }\n\n      j = 0\n      i++\n    }\n\n    return -1\n  }\n\n  firstSet (position) {\n    return this.findFirst(true, position)\n  }\n\n  firstUnset (position) {\n    return this.findFirst(false, position)\n  }\n\n  findLast (val, position) {\n    let j = position & (BITS_PER_SEGMENT - 1)\n    let i = (position - j) / BITS_PER_SEGMENT\n\n    while (i >= 0) {\n      const s = this._segments.get(i)\n\n      if (s) {\n        const index = s.findLast(val, j)\n\n        if (index !== -1) {\n          return i * BITS_PER_SEGMENT + index\n        }\n      }\n\n      j = BITS_PER_SEGMENT - 1\n      i--\n    }\n\n    return -1\n  }\n\n  lastSet (position) {\n    return this.findLast(true, position)\n  }\n\n  lastUnset (position) {\n    return this.findLast(false, position)\n  }\n\n  * want (start, length) {\n    const j = start & (BITS_PER_SEGMENT - 1)\n    let i = (start - j) / BITS_PER_SEGMENT\n\n    while (length > 0) {\n      const s = this._segments.get(i)\n\n      if (s) {\n        // We always send at least 4 KiB worth of bitfield in a want, rounding\n        // to the nearest 4 KiB.\n        const end = ceilTo(clamp(length / 8, 4096, BYTES_PER_SEGMENT), 4096)\n\n        yield {\n          start: i * BITS_PER_SEGMENT,\n          bitfield: s.bitfield.subarray(0, end / 4)\n        }\n      }\n\n      i++\n      length -= BITS_PER_SEGMENT\n    }\n  }\n\n  clear () {\n    return new Promise((resolve, reject) => {\n      this.storage.truncate(0, (err) => {\n        if (err) return reject(err)\n        this._pages = new BigSparseArray()\n        this.unflushed = []\n        resolve()\n      })\n    })\n  }\n\n  close () {\n    return new Promise((resolve, reject) => {\n      this.storage.close((err) => {\n        if (err) reject(err)\n        else resolve()\n      })\n    })\n  }\n\n  flush () {\n    return new Promise((resolve, reject) => {\n      if (!this.unflushed.length) return resolve()\n\n      const self = this\n      let missing = this.unflushed.length\n      let error = null\n\n      for (const page of this.unflushed) {\n        const buf = b4a.from(\n          page.bitfield.buffer,\n          page.bitfield.byteOffset,\n          page.bitfield.byteLength\n        )\n\n        page.dirty = false\n        this.storage.write(page.index * BYTES_PER_PAGE, buf, done)\n      }\n\n      function done (err) {\n        if (err) error = err\n        if (--missing) return\n        if (error) return reject(error)\n        self.unflushed = []\n        resolve()\n      }\n    })\n  }\n\n  static open (storage, tree = null) {\n    return new Promise((resolve, reject) => {\n      storage.stat((err, st) => {\n        if (err) return resolve(new Bitfield(storage, null))\n        let size = st.size - (st.size & 3)\n        if (!size) return resolve(new Bitfield(storage, null))\n        if (tree) size = Math.min(size, ceilTo(tree.length / 8, 4096))\n        storage.read(0, size, (err, data) => {\n          if (err) return reject(err)\n          resolve(new Bitfield(storage, data))\n        })\n      })\n    })\n  }\n}\n\nfunction clamp (n, min, max) {\n  return Math.min(Math.max(n, min), max)\n}\n\nfunction ceilTo (n, multiple = 1) {\n  const remainder = n % multiple\n  if (remainder === 0) return n\n  return n + multiple - remainder\n}\n","const sodium = require('sodium-universal')\nconst c = require('compact-encoding')\nconst b4a = require('b4a')\n\nconst nonce = b4a.alloc(sodium.crypto_stream_NONCEBYTES)\n\nmodule.exports = class BlockEncryption {\n  constructor (encryptionKey, hypercoreKey) {\n    const subKeys = b4a.alloc(2 * sodium.crypto_stream_KEYBYTES)\n\n    this.key = encryptionKey\n    this.blockKey = subKeys.subarray(0, sodium.crypto_stream_KEYBYTES)\n    this.blindingKey = subKeys.subarray(sodium.crypto_stream_KEYBYTES)\n    this.padding = 8\n\n    sodium.crypto_generichash(this.blockKey, encryptionKey, hypercoreKey)\n    sodium.crypto_generichash(this.blindingKey, this.blockKey)\n  }\n\n  encrypt (index, block, fork) {\n    const padding = block.subarray(0, this.padding)\n    block = block.subarray(this.padding)\n\n    c.uint64.encode({ start: 0, end: 8, buffer: padding }, fork)\n    c.uint64.encode({ start: 0, end: 8, buffer: nonce }, index)\n\n    // Zero out any previous padding.\n    nonce.fill(0, 8, 8 + padding.byteLength)\n\n    // Blind the fork ID, possibly risking reusing the nonce on a reorg of the\n    // Hypercore. This is fine as the blinding is best-effort and the latest\n    // fork ID shared on replication anyway.\n    sodium.crypto_stream_xor(\n      padding,\n      padding,\n      nonce,\n      this.blindingKey\n    )\n\n    nonce.set(padding, 8)\n\n    // The combination of a (blinded) fork ID and a block index is unique for a\n    // given Hypercore and is therefore a valid nonce for encrypting the block.\n    sodium.crypto_stream_xor(\n      block,\n      block,\n      nonce,\n      this.blockKey\n    )\n  }\n\n  decrypt (index, block) {\n    const padding = block.subarray(0, this.padding)\n    block = block.subarray(this.padding)\n\n    c.uint64.encode({ start: 0, end: 8, buffer: nonce }, index)\n\n    nonce.set(padding, 8)\n\n    // Decrypt the block using the blinded fork ID.\n    sodium.crypto_stream_xor(\n      block,\n      block,\n      nonce,\n      this.blockKey\n    )\n  }\n}\n","const b4a = require('b4a')\n\nmodule.exports = class BlockStore {\n  constructor (storage, tree) {\n    this.storage = storage\n    this.tree = tree\n  }\n\n  async get (i) {\n    const [offset, size] = await this.tree.byteRange(2 * i)\n    return this._read(offset, size)\n  }\n\n  async put (i, data, offset) {\n    return this._write(offset, data)\n  }\n\n  putBatch (i, batch, offset) {\n    if (batch.length === 0) return Promise.resolve()\n    return this.put(i, batch.length === 1 ? batch[0] : b4a.concat(batch), offset)\n  }\n\n  clear (offset = 0, length = -1) {\n    return new Promise((resolve, reject) => {\n      if (length === -1) this.storage.truncate(offset, done)\n      else this.storage.del(offset, length, done)\n\n      function done (err) {\n        if (err) reject(err)\n        else resolve()\n      }\n    })\n  }\n\n  close () {\n    return new Promise((resolve, reject) => {\n      this.storage.close((err) => {\n        if (err) reject(err)\n        else resolve()\n      })\n    })\n  }\n\n  _read (offset, size) {\n    return new Promise((resolve, reject) => {\n      this.storage.read(offset, size, (err, data) => {\n        if (err) reject(err)\n        else resolve(data)\n      })\n    })\n  }\n\n  _write (offset, data) {\n    return new Promise((resolve, reject) => {\n      this.storage.write(offset, data, (err) => {\n        if (err) reject(err)\n        else resolve(offset + data.byteLength)\n      })\n    })\n  }\n}\n","const crypto = require('hypercore-crypto')\nconst sodium = require('sodium-universal')\nconst b4a = require('b4a')\nconst c = require('compact-encoding')\n\n// TODO: rename this to \"crypto\" and move everything hashing related etc in here\n// Also lets move the tree stuff from hypercore-crypto here\n\nconst [TREE, REPLICATE_INITIATOR, REPLICATE_RESPONDER] = crypto.namespace('hypercore', 3)\n\nexports.replicate = function (isInitiator, key, handshakeHash) {\n  const out = b4a.allocUnsafe(32)\n  sodium.crypto_generichash_batch(out, [isInitiator ? REPLICATE_INITIATOR : REPLICATE_RESPONDER, key], handshakeHash)\n  return out\n}\n\nexports.treeSignable = function (hash, length, fork) {\n  const state = { start: 0, end: 80, buffer: b4a.allocUnsafe(80) }\n  c.raw.encode(state, TREE)\n  c.raw.encode(state, hash)\n  c.uint64.encode(state, length)\n  c.uint64.encode(state, fork)\n  return state.buffer\n}\n\nexports.treeSignableLegacy = function (hash, length, fork) {\n  const state = { start: 0, end: 48, buffer: b4a.allocUnsafe(48) }\n  c.raw.encode(state, hash)\n  c.uint64.encode(state, length)\n  c.uint64.encode(state, fork)\n  return state.buffer\n}\n","// Export the appropriate version of `quickbit-universal` as the plain import\n// may resolve to an older version in some environments\nlet quickbit = require('quickbit-universal')\nif (\n  typeof quickbit.findFirst !== 'function' ||\n  typeof quickbit.findLast !== 'function'\n) {\n  // This should always load the fallback from the locally installed version\n  quickbit = require('quickbit-universal/fallback')\n}\nexports.quickbit = quickbit\n","const hypercoreCrypto = require('hypercore-crypto')\nconst b4a = require('b4a')\nconst Oplog = require('./oplog')\nconst Mutex = require('./mutex')\nconst MerkleTree = require('./merkle-tree')\nconst BlockStore = require('./block-store')\nconst Bitfield = require('./bitfield')\nconst { BAD_ARGUMENT, STORAGE_EMPTY, STORAGE_CONFLICT, INVALID_SIGNATURE } = require('./errors')\nconst m = require('./messages')\n\nmodule.exports = class Core {\n  constructor (header, crypto, oplog, tree, blocks, bitfield, auth, legacy, onupdate, onconflict) {\n    this.onupdate = onupdate\n    this.onconflict = onconflict\n    this.header = header\n    this.crypto = crypto\n    this.oplog = oplog\n    this.tree = tree\n    this.blocks = blocks\n    this.bitfield = bitfield\n    this.defaultAuth = auth\n    this.truncating = 0\n\n    this._maxOplogSize = 65536\n    this._autoFlush = 1\n    this._verifies = null\n    this._verifiesFlushed = null\n    this._mutex = new Mutex()\n    this._legacy = legacy\n  }\n\n  static async open (storage, opts = {}) {\n    const oplogFile = storage('oplog')\n    const treeFile = storage('tree')\n    const bitfieldFile = storage('bitfield')\n    const dataFile = storage('data')\n\n    try {\n      return await this.resume(oplogFile, treeFile, bitfieldFile, dataFile, opts)\n    } catch (err) {\n      await closeAll(oplogFile, treeFile, bitfieldFile, dataFile)\n      throw err\n    }\n  }\n\n  static createAuth (crypto, { publicKey, secretKey }, opts = {}) {\n    if (secretKey && !crypto.validateKeyPair({ publicKey, secretKey })) {\n      throw BAD_ARGUMENT('Invalid key pair')\n    }\n\n    const sign = opts.sign\n      ? opts.sign\n      : secretKey\n        ? (signable) => crypto.sign(signable, secretKey)\n        : undefined\n\n    return {\n      sign,\n      verify (signable, signature) {\n        return crypto.verify(signable, signature, publicKey)\n      }\n    }\n  }\n\n  static async resume (oplogFile, treeFile, bitfieldFile, dataFile, opts) {\n    let overwrite = opts.overwrite === true\n\n    const force = opts.force === true\n    const createIfMissing = opts.createIfMissing !== false\n    const crypto = opts.crypto || hypercoreCrypto\n\n    const oplog = new Oplog(oplogFile, {\n      headerEncoding: m.oplog.header,\n      entryEncoding: m.oplog.entry\n    })\n\n    let { header, entries } = await oplog.open()\n\n    if (force && opts.keyPair && header && header.signer && !b4a.equals(header.signer.publicKey, opts.keyPair.publicKey)) {\n      overwrite = true\n    }\n\n    if (!header || overwrite) {\n      if (!createIfMissing) {\n        throw STORAGE_EMPTY('No Hypercore is stored here')\n      }\n\n      header = {\n        types: { tree: 'blake2b', bitfield: 'raw', signer: 'ed25519' },\n        userData: [],\n        tree: {\n          fork: 0,\n          length: 0,\n          rootHash: null,\n          signature: null\n        },\n        signer: opts.keyPair || crypto.keyPair(),\n        hints: {\n          reorgs: []\n        },\n        contiguousLength: 0\n      }\n\n      await oplog.flush(header)\n    }\n\n    if (opts.keyPair && !b4a.equals(header.signer.publicKey, opts.keyPair.publicKey)) {\n      throw STORAGE_CONFLICT('Another Hypercore is stored here')\n    }\n\n    const tree = await MerkleTree.open(treeFile, { crypto, ...header.tree })\n    const bitfield = await Bitfield.open(bitfieldFile, tree)\n    const blocks = new BlockStore(dataFile, tree)\n\n    if (overwrite) {\n      await tree.clear()\n      await blocks.clear()\n      await bitfield.clear()\n      entries = []\n    } else if (bitfield.resumed && header.tree.length === 0) {\n      // If this was an old bitfield, reset it since it loads based on disk size atm (TODO: change that)\n      await bitfield.clear()\n    }\n\n    // compat from earlier version that do not store contig length\n    if (header.contiguousLength === 0) {\n      while (bitfield.get(header.contiguousLength)) header.contiguousLength++\n    }\n\n    const auth = opts.auth || this.createAuth(crypto, header.signer)\n\n    for (const e of entries) {\n      if (e.userData) {\n        updateUserData(header.userData, e.userData.key, e.userData.value)\n      }\n\n      if (e.treeNodes) {\n        for (const node of e.treeNodes) {\n          tree.addNode(node)\n        }\n      }\n\n      if (e.bitfield) {\n        bitfield.setRange(e.bitfield.start, e.bitfield.length, !e.bitfield.drop)\n        updateContig(header, e.bitfield, bitfield)\n      }\n\n      if (e.treeUpgrade) {\n        const batch = await tree.truncate(e.treeUpgrade.length, e.treeUpgrade.fork)\n        batch.ancestors = e.treeUpgrade.ancestors\n        batch.signature = e.treeUpgrade.signature\n        addReorgHint(header.hints.reorgs, tree, batch)\n        batch.commit()\n\n        header.tree.length = tree.length\n        header.tree.fork = tree.fork\n        header.tree.rootHash = tree.hash()\n        header.tree.signature = tree.signature\n      }\n    }\n\n    return new this(header, crypto, oplog, tree, blocks, bitfield, auth, !!opts.legacy, opts.onupdate || noop, opts.onconflict || noop)\n  }\n\n  _shouldFlush () {\n    // TODO: make something more fancy for auto flush mode (like fibonacci etc)\n    if (--this._autoFlush <= 0 || this.oplog.byteLength >= this._maxOplogSize) {\n      this._autoFlush = 4\n      return true\n    }\n\n    return false\n  }\n\n  async _flushOplog () {\n    // TODO: the apis using this, actually do not need to wait for the bitfields, tree etc to flush\n    // as their mutations are already stored in the oplog. We could potentially just run this in the\n    // background. Might be easier to impl that where it is called instead and keep this one simple.\n    await this.bitfield.flush()\n    await this.tree.flush()\n    await this.oplog.flush(this.header)\n  }\n\n  _appendBlocks (values) {\n    return this.blocks.putBatch(this.tree.length, values, this.tree.byteLength)\n  }\n\n  async _writeBlock (batch, index, value) {\n    const byteOffset = await batch.byteOffset(index * 2)\n    await this.blocks.put(index, value, byteOffset)\n  }\n\n  async userData (key, value) {\n    // TODO: each oplog append can set user data, so we should have a way\n    // to just hitch a ride on one of the other ongoing appends?\n    await this._mutex.lock()\n\n    try {\n      let empty = true\n\n      for (const u of this.header.userData) {\n        if (u.key !== key) continue\n        if (value && b4a.equals(u.value, value)) return\n        empty = false\n        break\n      }\n\n      if (empty && !value) return\n\n      const entry = {\n        userData: { key, value },\n        treeNodes: null,\n        treeUpgrade: null,\n        bitfield: null\n      }\n\n      await this.oplog.append([entry], false)\n\n      updateUserData(this.header.userData, key, value)\n\n      if (this._shouldFlush()) await this._flushOplog()\n    } finally {\n      this._mutex.unlock()\n    }\n  }\n\n  async truncate (length, fork, auth = this.defaultAuth) {\n    this.truncating++\n    await this._mutex.lock()\n\n    try {\n      const batch = await this.tree.truncate(length, fork)\n      batch.signature = await auth.sign(batch.signable())\n      await this._truncate(batch, null)\n    } finally {\n      this.truncating--\n      this._mutex.unlock()\n    }\n  }\n\n  async clear (start, end) {\n    await this._mutex.lock()\n\n    try {\n      const entry = {\n        userData: null,\n        treeNodes: null,\n        treeUpgrade: null,\n        bitfield: {\n          start,\n          length: end - start,\n          drop: true\n        }\n      }\n\n      await this.oplog.append([entry], false)\n\n      this.bitfield.setRange(start, end - start, false)\n\n      if (start < this.header.contiguousLength) {\n        this.header.contiguousLength = start\n      }\n\n      start = this.bitfield.lastSet(start) + 1\n      end = this.bitfield.firstSet(end)\n\n      if (end === -1) end = this.tree.length\n\n      const offset = await this.tree.byteOffset(start * 2)\n      const [byteEnd, byteEndLength] = await this.tree.byteRange((end - 1) * 2)\n      const length = (byteEnd + byteEndLength) - offset\n\n      await this.blocks.clear(offset, length)\n\n      this.onupdate(0, entry.bitfield, null, null)\n\n      if (this._shouldFlush()) await this._flushOplog()\n    } finally {\n      this._mutex.unlock()\n    }\n  }\n\n  async append (values, auth = this.defaultAuth, hooks = {}) {\n    await this._mutex.lock()\n\n    try {\n      if (hooks.preappend) await hooks.preappend(values)\n\n      if (!values.length) {\n        return { length: this.tree.length, byteLength: this.tree.byteLength }\n      }\n\n      const batch = this.tree.batch()\n      for (const val of values) batch.append(val)\n\n      const hash = batch.hash()\n      batch.signature = await auth.sign(this._legacy ? batch.signableLegacy(hash) : batch.signable(hash))\n\n      const entry = {\n        userData: null,\n        treeNodes: batch.nodes,\n        treeUpgrade: batch,\n        bitfield: {\n          drop: false,\n          start: batch.ancestors,\n          length: values.length\n        }\n      }\n\n      const byteLength = await this._appendBlocks(values)\n\n      await this.oplog.append([entry], false)\n\n      this.bitfield.setRange(batch.ancestors, batch.length - batch.ancestors, true)\n      batch.commit()\n\n      this.header.tree.length = batch.length\n      this.header.tree.rootHash = hash\n      this.header.tree.signature = batch.signature\n\n      const status = 0b0001 | updateContig(this.header, entry.bitfield, this.bitfield)\n      this.onupdate(status, entry.bitfield, null, null)\n\n      if (this._shouldFlush()) await this._flushOplog()\n\n      return { length: batch.length, byteLength }\n    } finally {\n      this._mutex.unlock()\n    }\n  }\n\n  _signed (batch, hash, auth = this.defaultAuth) {\n    const signable = this._legacy ? batch.signableLegacy(hash) : batch.signable(hash)\n    return auth.verify(signable, batch.signature)\n  }\n\n  async _verifyExclusive ({ batch, bitfield, value, from }) {\n    // TODO: move this to tree.js\n    const hash = batch.hash()\n    if (!batch.signature || !this._signed(batch, hash)) {\n      throw INVALID_SIGNATURE('Proof contains an invalid signature')\n    }\n\n    await this._mutex.lock()\n\n    try {\n      if (!batch.commitable()) return false\n\n      const entry = {\n        userData: null,\n        treeNodes: batch.nodes,\n        treeUpgrade: batch,\n        bitfield\n      }\n\n      if (bitfield) await this._writeBlock(batch, bitfield.start, value)\n\n      await this.oplog.append([entry], false)\n\n      let status = 0b0001\n\n      if (bitfield) {\n        this.bitfield.set(bitfield.start, true)\n        status |= updateContig(this.header, bitfield, this.bitfield)\n      }\n\n      batch.commit()\n\n      this.header.tree.fork = batch.fork\n      this.header.tree.length = batch.length\n      this.header.tree.rootHash = batch.rootHash\n      this.header.tree.signature = batch.signature\n\n      this.onupdate(status, bitfield, value, from)\n\n      if (this._shouldFlush()) await this._flushOplog()\n    } finally {\n      this._mutex.unlock()\n    }\n\n    return true\n  }\n\n  async _verifyShared () {\n    if (!this._verifies.length) return false\n\n    await this._mutex.lock()\n\n    const verifies = this._verifies\n    this._verifies = null\n    this._verified = null\n\n    try {\n      const entries = []\n\n      for (const { batch, bitfield, value } of verifies) {\n        if (!batch.commitable()) continue\n\n        if (bitfield) {\n          await this._writeBlock(batch, bitfield.start, value)\n        }\n\n        entries.push({\n          userData: null,\n          treeNodes: batch.nodes,\n          treeUpgrade: null,\n          bitfield\n        })\n      }\n\n      await this.oplog.append(entries, false)\n\n      for (let i = 0; i < verifies.length; i++) {\n        const { batch, bitfield, value, from } = verifies[i]\n\n        if (!batch.commitable()) {\n          verifies[i] = null // signal that we cannot commit this one\n          continue\n        }\n\n        let status = 0\n\n        if (bitfield) {\n          this.bitfield.set(bitfield.start, true)\n          status = updateContig(this.header, bitfield, this.bitfield)\n        }\n\n        batch.commit()\n\n        this.onupdate(status, bitfield, value, from)\n      }\n\n      if (this._shouldFlush()) await this._flushOplog()\n    } finally {\n      this._mutex.unlock()\n    }\n\n    return verifies[0] !== null\n  }\n\n  async checkConflict (proof, from) {\n    if (this.tree.length < proof.upgrade.length || proof.fork !== this.tree.fork) {\n      // out of date this proof - ignore for now\n      return false\n    }\n\n    const batch = this.tree.verifyFullyRemote(proof)\n\n    if (!batch.signature || !this._signed(batch, batch.hash())) {\n      throw INVALID_SIGNATURE('Proof contains an invalid signature with no input from us')\n    }\n\n    const remoteTreeHash = this.crypto.tree(proof.upgrade.nodes)\n    const localTreeHash = this.crypto.tree(await this.tree.getRoots(proof.upgrade.length))\n\n    if (b4a.equals(localTreeHash, remoteTreeHash)) return false\n\n    await this.onconflict(proof)\n    return true\n  }\n\n  async verify (proof, from) {\n    // We cannot apply \"other forks\" atm.\n    // We should probably still try and they are likely super similar for non upgrades\n    // but this is easy atm (and the above layer will just retry)\n\n    if (proof.fork !== this.tree.fork) return false\n\n    const batch = await this.tree.verify(proof)\n    if (!batch.commitable()) return false\n\n    const value = (proof.block && proof.block.value) || null\n    const op = {\n      batch,\n      bitfield: value && { drop: false, start: proof.block.index, length: 1 },\n      value,\n      from\n    }\n\n    if (batch.upgraded) return this._verifyExclusive(op)\n\n    if (this._verifies !== null) {\n      const verifies = this._verifies\n      const i = verifies.push(op)\n      await this._verified\n      return verifies[i] !== null\n    }\n\n    this._verifies = [op]\n    this._verified = this._verifyShared()\n    return this._verified\n  }\n\n  async reorg (batch, from) {\n    if (!batch.commitable()) return false\n\n    this.truncating++\n    await this._mutex.lock()\n\n    try {\n      if (!batch.commitable()) return false\n      await this._truncate(batch, from)\n    } finally {\n      this.truncating--\n      this._mutex.unlock()\n    }\n\n    return true\n  }\n\n  async _truncate (batch, from) {\n    const entry = {\n      userData: null,\n      treeNodes: batch.nodes,\n      treeUpgrade: batch,\n      bitfield: {\n        drop: true,\n        start: batch.ancestors,\n        length: this.tree.length - batch.ancestors\n      }\n    }\n\n    await this.oplog.append([entry], false)\n\n    this.bitfield.setRange(batch.ancestors, this.tree.length - batch.ancestors, false)\n    addReorgHint(this.header.hints.reorgs, this.tree, batch)\n    batch.commit()\n\n    const contigStatus = updateContig(this.header, entry.bitfield, this.bitfield)\n    const status = ((batch.length > batch.ancestors) ? 0b0011 : 0b0010) | contigStatus\n\n    this.header.tree.fork = batch.fork\n    this.header.tree.length = batch.length\n    this.header.tree.rootHash = batch.hash()\n    this.header.tree.signature = batch.signature\n\n    this.onupdate(status, entry.bitfield, null, from)\n\n    // TODO: there is a bug in the merkle tree atm where it cannot handle unflushed\n    // truncates if we append or download anything after the truncation point later on\n    // This is because tree.get checks the truncated flag. We should fix this so we can do\n    // the later flush here as well\n    // if (this._shouldFlush()) await this._flushOplog()\n    await this._flushOplog()\n  }\n\n  async close () {\n    await this._mutex.destroy()\n    await Promise.allSettled([\n      this.oplog.close(),\n      this.bitfield.close(),\n      this.tree.close(),\n      this.blocks.close()\n    ])\n  }\n}\n\nfunction updateContig (header, upd, bitfield) {\n  const end = upd.start + upd.length\n\n  let c = header.contiguousLength\n\n  if (upd.drop) {\n    // If we dropped a block in the current contig range, \"downgrade\" it\n    if (c <= end && c > upd.start) {\n      c = upd.start\n    }\n  } else {\n    if (c <= end && c >= upd.start) {\n      c = end\n      while (bitfield.get(c)) c++\n    }\n  }\n\n  if (c === header.contiguousLength) {\n    return 0b0000\n  }\n\n  if (c > header.contiguousLength) {\n    header.contiguousLength = c\n    return 0b0100\n  }\n\n  header.contiguousLength = c\n  return 0b1000\n}\n\nfunction addReorgHint (list, tree, batch) {\n  if (tree.length === 0 || tree.fork === batch.fork) return\n\n  while (list.length >= 4) list.shift() // 4 here is arbitrary, just want it to be small (hints only)\n  while (list.length > 0) {\n    if (list[list.length - 1].ancestors > batch.ancestors) list.pop()\n    else break\n  }\n\n  list.push({ from: tree.fork, to: batch.fork, ancestors: batch.ancestors })\n}\n\nfunction updateUserData (list, key, value) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].key === key) {\n      if (value) list[i].value = value\n      else list.splice(i, 1)\n      return\n    }\n  }\n  if (value) list.push({ key, value })\n}\n\nfunction closeAll (...storages) {\n  let missing = 1\n  let error = null\n\n  return new Promise((resolve, reject) => {\n    for (const s of storages) {\n      missing++\n      s.close(done)\n    }\n\n    done(null)\n\n    function done (err) {\n      if (err) error = err\n      if (--missing) return\n      if (error) reject(error)\n      else resolve()\n    }\n  })\n}\n\nfunction noop () {}\n","module.exports = class Download {\n  constructor (req) {\n    this.req = req\n  }\n\n  async done () {\n    return (await this.req).promise\n  }\n\n  /**\n   * Deprecated. Use `range.done()`.\n   */\n  downloaded () {\n    return this.done()\n  }\n\n  destroy () {\n    this.req.then(req => req.context && req.context.detach(req), noop)\n  }\n}\n\nfunction noop () {}\n","module.exports = class HypercoreError extends Error {\n  constructor (msg, code, fn = HypercoreError) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name () {\n    return 'HypercoreError'\n  }\n\n  static BAD_ARGUMENT (msg) {\n    return new HypercoreError(msg, 'BAD_ARGUMENT', HypercoreError.BAD_ARGUMENT)\n  }\n\n  static STORAGE_EMPTY (msg) {\n    return new HypercoreError(msg, 'STORAGE_EMPTY', HypercoreError.STORAGE_EMPTY)\n  }\n\n  static STORAGE_CONFLICT (msg) {\n    return new HypercoreError(msg, 'STORAGE_CONFLICT', HypercoreError.STORAGE_CONFLICT)\n  }\n\n  static INVALID_SIGNATURE (msg) {\n    return new HypercoreError(msg, 'INVALID_SIGNATURE', HypercoreError.INVALID_SIGNATURE)\n  }\n\n  static INVALID_CAPABILITY (msg) {\n    return new HypercoreError(msg, 'INVALID_CAPABILITY', HypercoreError.INVALID_CAPABILITY)\n  }\n\n  static INVALID_CHECKSUM (msg = 'Invalid checksum') {\n    return new HypercoreError(msg, 'INVALID_CHECKSUM', HypercoreError.INVALID_CHECKSUM)\n  }\n\n  static INVALID_OPERATION (msg) {\n    return new HypercoreError(msg, 'INVALID_OPERATION', HypercoreError.INVALID_OPERATION)\n  }\n\n  static INVALID_PROOF (msg = 'Proof not verifiable') {\n    return new HypercoreError(msg, 'INVALID_PROOF', HypercoreError.INVALID_PROOF)\n  }\n\n  static SNAPSHOT_NOT_AVAILABLE (msg = 'Snapshot is not available') {\n    return new HypercoreError(msg, 'SNAPSHOT_NOT_AVAILABLE', HypercoreError.SNAPSHOT_NOT_AVAILABLE)\n  }\n\n  static REQUEST_CANCELLED (msg = 'Request was cancelled') {\n    return new HypercoreError(msg, 'REQUEST_CANCELLED', HypercoreError.REQUEST_CANCELLED)\n  }\n\n  static REQUEST_TIMEOUT (msg = 'Request timed out') {\n    return new HypercoreError(msg, 'REQUEST_TIMEOUT', HypercoreError.REQUEST_TIMEOUT)\n  }\n\n  static SESSION_NOT_WRITABLE (msg = 'Session is not writable') {\n    return new HypercoreError(msg, 'SESSION_NOT_WRITABLE', HypercoreError.SESSION_NOT_WRITABLE)\n  }\n\n  static SESSION_CLOSED (msg = 'Session is closed') {\n    return new HypercoreError(msg, 'SESSION_CLOSED', HypercoreError.SESSION_CLOSED)\n  }\n\n  static OPLOG_CORRUPT (msg = 'Oplog file appears corrupt or out of date') {\n    return new HypercoreError(msg, 'OPLOG_CORRUPT', HypercoreError.OPLOG_CORRUPT)\n  }\n\n  static INVALID_OPLOG_VERSION (msg = 'Invalid header version') {\n    return new HypercoreError(msg, 'INVALID_OPLOG_VERSION', HypercoreError.INVALID_OPLOG_VERSION)\n  }\n}\n","module.exports = class Info {\n  constructor (opts = {}) {\n    this.key = opts.key\n    this.discoveryKey = opts.discoveryKey\n    this.length = opts.length || 0\n    this.contiguousLength = opts.contiguousLength || 0\n    this.byteLength = opts.byteLength || 0\n    this.fork = opts.fork || 0\n    this.padding = opts.padding || 0\n    this.storage = opts.storage || null\n  }\n\n  static async from (session, opts = {}) {\n    return new Info({\n      key: session.key,\n      discoveryKey: session.discoveryKey,\n      length: session.length,\n      contiguousLength: session.contiguousLength,\n      byteLength: session.byteLength,\n      fork: session.fork,\n      padding: session.padding,\n      storage: opts.storage ? await this.storage(session) : null\n    })\n  }\n\n  static async storage (session) {\n    const { oplog, tree, blocks, bitfield } = session.core\n    try {\n      return {\n        oplog: await bytesUsed(oplog.storage),\n        tree: await bytesUsed(tree.storage),\n        blocks: await bytesUsed(blocks.storage),\n        bitfield: await bytesUsed(bitfield.storage)\n      }\n    } catch {\n      return null\n    }\n\n    function bytesUsed (file) {\n      return new Promise((resolve, reject) => {\n        file.stat((err, st) => {\n          if (err) {\n            resolve(0) // prob just file not found (TODO, improve)\n          } else if (typeof st.blocks !== 'number') {\n            reject(new Error('cannot determine bytes used'))\n          } else {\n            resolve(st.blocks * 512)\n          }\n        })\n      })\n    }\n  }\n}\n","const flat = require('flat-tree')\nconst crypto = require('hypercore-crypto')\nconst c = require('compact-encoding')\nconst Xache = require('xache')\nconst b4a = require('b4a')\nconst caps = require('./caps')\nconst { INVALID_PROOF, INVALID_CHECKSUM, INVALID_OPERATION, BAD_ARGUMENT } = require('./errors')\n\nconst BLANK_HASH = b4a.alloc(32)\nconst OLD_TREE = b4a.from([5, 2, 87, 2, 0, 0, 40, 7, 66, 76, 65, 75, 69, 50, 98])\nconst TREE_CACHE = 128 // speeds up linear scans by A LOT\n\nclass NodeQueue {\n  constructor (nodes, extra = null) {\n    this.i = 0\n    this.nodes = nodes\n    this.extra = extra\n    this.length = nodes.length + (this.extra === null ? 0 : 1)\n  }\n\n  shift (index) {\n    if (this.extra !== null && this.extra.index === index) {\n      const node = this.extra\n      this.extra = null\n      this.length--\n      return node\n    }\n\n    if (this.i >= this.nodes.length) {\n      throw INVALID_OPERATION('Expected node ' + index + ', got (nil)')\n    }\n\n    const node = this.nodes[this.i++]\n    if (node.index !== index) {\n      throw INVALID_OPERATION('Expected node ' + index + ', got node ' + node.index)\n    }\n\n    this.length--\n    return node\n  }\n}\n\nclass MerkleTreeBatch {\n  constructor (tree) {\n    this.fork = tree.fork\n    this.roots = [...tree.roots]\n    this.length = tree.length\n    this.ancestors = tree.length\n    this.byteLength = tree.byteLength\n    this.signature = null\n\n    this.treeLength = tree.length\n    this.treeFork = tree.fork\n    this.tree = tree\n    this.nodes = []\n    this.upgraded = false\n  }\n\n  hash () {\n    return this.tree.crypto.tree(this.roots)\n  }\n\n  signable (hash = this.hash()) {\n    return caps.treeSignable(hash, this.length, this.fork)\n  }\n\n  signableLegacy (hash = this.hash()) {\n    return caps.treeSignableLegacy(hash, this.length, this.fork)\n  }\n\n  append (buf) {\n    const head = this.length * 2\n    const ite = flat.iterator(head)\n    const node = blockNode(this.tree.crypto, head, buf)\n\n    this.appendRoot(node, ite)\n  }\n\n  appendRoot (node, ite) {\n    this.upgraded = true\n    this.length += ite.factor / 2\n    this.byteLength += node.size\n    this.roots.push(node)\n    this.nodes.push(node)\n\n    while (this.roots.length > 1) {\n      const a = this.roots[this.roots.length - 1]\n      const b = this.roots[this.roots.length - 2]\n\n      // TODO: just have a peek sibling instead? (pretty sure it's always the left sib as well)\n      if (ite.sibling() !== b.index) {\n        ite.sibling() // unset so it always points to last root\n        break\n      }\n\n      const node = parentNode(this.tree.crypto, ite.parent(), a, b)\n      this.nodes.push(node)\n      this.roots.pop()\n      this.roots.pop()\n      this.roots.push(node)\n    }\n  }\n\n  commitable () {\n    return this.treeFork === this.tree.fork && (\n      this.upgraded\n        ? this.treeLength === this.tree.length\n        : this.treeLength <= this.tree.length\n    )\n  }\n\n  commit () {\n    if (!this.commitable()) throw INVALID_OPERATION('Tree was modified during batch, refusing to commit')\n\n    if (this.upgraded) this._commitUpgrade()\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i]\n      this.tree.unflushed.set(node.index, node)\n    }\n  }\n\n  _commitUpgrade () {\n    // TODO: If easy to detect, we should refuse an trunc+append here without a fork id\n    // change. Will only happen on user error so mostly to prevent that.\n\n    if (this.ancestors < this.treeLength) {\n      if (this.ancestors > 0) {\n        const head = 2 * this.ancestors\n        const ite = flat.iterator(head - 2)\n\n        while (true) {\n          if (ite.contains(head) && ite.index < head) {\n            this.tree.unflushed.set(ite.index, blankNode(ite.index))\n          }\n          if (ite.offset === 0) break\n          ite.parent()\n        }\n      }\n\n      this.tree.truncateTo = this.tree.truncated\n        ? Math.min(this.tree.truncateTo, this.ancestors)\n        : this.ancestors\n\n      this.tree.truncated = true\n      this.tree.cache = new Xache({ maxSize: this.tree.cache.maxSize })\n      truncateMap(this.tree.unflushed, this.ancestors)\n      if (this.tree.flushing !== null) truncateMap(this.tree.flushing, this.ancestors)\n    }\n\n    this.tree.roots = this.roots\n    this.tree.length = this.length\n    this.tree.byteLength = this.byteLength\n    this.tree.fork = this.fork\n    this.tree.signature = this.signature\n  }\n\n  // TODO: this is the only async method on the batch, so unsure if it should go here\n  // this is important so you know where to right data without committing the batch\n  // so we'll keep it here for now.\n\n  async byteOffset (index) {\n    if (2 * this.tree.length === index) return this.tree.byteLength\n\n    const ite = flat.iterator(index)\n\n    let treeOffset = 0\n    let isRight = false\n    let parent = null\n\n    for (const node of this.nodes) {\n      if (node.index === ite.index) {\n        if (isRight && parent) treeOffset += node.size - parent.size\n        parent = node\n        isRight = ite.isRight()\n        ite.parent()\n      }\n    }\n\n    const r = this.roots.indexOf(parent)\n    if (r > -1) {\n      for (let i = 0; i < r; i++) {\n        treeOffset += this.roots[i].size\n      }\n\n      return treeOffset\n    }\n\n    const byteOffset = await this.tree.byteOffset(parent ? parent.index : index)\n\n    return byteOffset + treeOffset\n  }\n}\n\nclass ReorgBatch extends MerkleTreeBatch {\n  constructor (tree) {\n    super(tree)\n    this.roots = []\n    this.length = 0\n    this.byteLength = 0\n    this.diff = null\n    this.ancestors = 0\n    // We set upgraded because reorgs are signed so hit will\n    // hit the same code paths (like the treeLength check in commit)\n    this.upgraded = true\n    this.want = {\n      nodes: 0,\n      start: 0,\n      end: 0\n    }\n  }\n\n  get finished () {\n    return this.want === null\n  }\n\n  update (proof) {\n    if (this.want === null) return true\n\n    const nodes = []\n    const root = verifyTree(proof, this.tree.crypto, nodes)\n\n    if (root === null || !b4a.equals(root.hash, this.diff.hash)) return false\n\n    this.nodes.push(...nodes)\n    return this._update(nodes)\n  }\n\n  async _update (nodes) {\n    const n = new Map()\n    for (const node of nodes) n.set(node.index, node)\n\n    let diff = null\n    const ite = flat.iterator(this.diff.index)\n    const startingDiff = this.diff\n\n    while ((ite.index & 1) !== 0) {\n      const left = n.get(ite.leftChild())\n      if (!left) break\n\n      const existing = await this.tree.get(left.index, false)\n      if (!existing || !b4a.equals(existing.hash, left.hash)) {\n        diff = left\n      } else {\n        diff = n.get(ite.sibling())\n      }\n    }\n\n    if ((this.diff.index & 1) === 0) return true\n    if (diff === null) return false\n    if (startingDiff !== this.diff) return false\n\n    return this._updateDiffRoot(diff)\n  }\n\n  _updateDiffRoot (diff) {\n    if (this.want === null) return true\n\n    const spans = flat.spans(diff.index)\n    const start = spans[0] / 2\n    const end = Math.min(this.treeLength, spans[1] / 2 + 1)\n    const len = end - start\n\n    this.ancestors = start\n    this.diff = diff\n\n    if ((diff.index & 1) === 0 || this.want.start >= this.treeLength || len <= 0) {\n      this.want = null\n      return true\n    }\n\n    this.want.start = start\n    this.want.end = end\n    this.want.nodes = log2(spans[1] - spans[0] + 2) - 1\n\n    return false\n  }\n}\n\nclass ByteSeeker {\n  constructor (tree, bytes, padding = 0) {\n    this.tree = tree\n    this.bytes = bytes\n    this.padding = padding\n\n    const size = tree.byteLength - (tree.length * padding)\n\n    this.start = bytes >= size ? tree.length : 0\n    this.end = bytes < size ? tree.length : 0\n  }\n\n  nodes () {\n    return this.tree.nodes(this.start * 2)\n  }\n\n  async _seek (bytes) {\n    if (!bytes) return [0, 0]\n\n    for (const node of this.tree.roots) { // all async ticks happen once we find the root so safe\n      let size = node.size\n      if (this.padding > 0) size -= this.padding * flat.countLeaves(node.index)\n\n      if (bytes === size) return [flat.rightSpan(node.index) + 2, 0]\n      if (bytes > size) {\n        bytes -= size\n        continue\n      }\n\n      const ite = flat.iterator(node.index)\n\n      while ((ite.index & 1) !== 0) {\n        const l = await this.tree.get(ite.leftChild(), false)\n        if (l) {\n          let size = l.size\n          if (this.padding > 0) size -= this.padding * ite.countLeaves()\n\n          if (size === bytes) return [ite.rightSpan() + 2, 0]\n          if (size > bytes) continue\n          bytes -= size\n          ite.sibling()\n        } else {\n          ite.parent()\n          return [ite.index, bytes]\n        }\n      }\n\n      return [ite.index, bytes]\n    }\n\n    return null\n  }\n\n  async update () { // TODO: combine _seek and this, much simpler\n    const res = await this._seek(this.bytes)\n    if (!res) return null\n    if ((res[0] & 1) === 0) return [res[0] / 2, res[1]]\n\n    const span = flat.spans(res[0])\n    this.start = span[0] / 2\n    this.end = span[1] / 2 + 1\n\n    return null\n  }\n}\n\nmodule.exports = class MerkleTree {\n  constructor (storage, roots, fork, signature) {\n    this.crypto = crypto\n    this.fork = fork\n    this.roots = roots\n    this.length = roots.length ? totalSpan(roots) / 2 : 0\n    this.byteLength = totalSize(roots)\n    this.signature = signature\n\n    this.storage = storage\n    this.unflushed = new Map()\n    this.cache = new Xache({ maxSize: TREE_CACHE })\n    this.flushing = null\n    this.truncated = false\n    this.truncateTo = 0\n  }\n\n  addNode (node) {\n    if (node.size === 0 && b4a.equals(node.hash, BLANK_HASH)) node = blankNode(node.index)\n    this.unflushed.set(node.index, node)\n  }\n\n  batch () {\n    return new MerkleTreeBatch(this)\n  }\n\n  seek (bytes, padding) {\n    return new ByteSeeker(this, bytes, padding)\n  }\n\n  hash () {\n    return this.crypto.tree(this.roots)\n  }\n\n  signable (hash = this.hash()) {\n    return caps.treeSignable(hash, this.length, this.fork)\n  }\n\n  getRoots (length) {\n    const indexes = flat.fullRoots(2 * length)\n    const roots = new Array(indexes.length)\n\n    for (let i = 0; i < indexes.length; i++) {\n      roots[i] = this.get(indexes[i], true)\n    }\n\n    return Promise.all(roots)\n  }\n\n  async upgradeable (length) {\n    const indexes = flat.fullRoots(2 * length)\n    const roots = new Array(indexes.length)\n\n    for (let i = 0; i < indexes.length; i++) {\n      roots[i] = this.get(indexes[i], false)\n    }\n\n    for (const node of await Promise.all(roots)) {\n      if (node === null) return false\n    }\n\n    return true\n  }\n\n  get (index, error = true) {\n    const c = this.cache.get(index)\n    if (c) return c\n\n    let node = this.unflushed.get(index)\n\n    if (this.flushing !== null && node === undefined) {\n      node = this.flushing.get(index)\n    }\n\n    // TODO: test this\n    if (this.truncated && node !== undefined && node.index >= 2 * this.truncateTo) {\n      node = blankNode(index)\n    }\n\n    if (node !== undefined) {\n      if (node.hash === BLANK_HASH) {\n        if (error) throw INVALID_OPERATION('Could not load node: ' + index)\n        return Promise.resolve(null)\n      }\n      return Promise.resolve(node)\n    }\n\n    return getStoredNode(this.storage, index, this.cache, error)\n  }\n\n  async flush () {\n    this.flushing = this.unflushed\n    this.unflushed = new Map()\n\n    try {\n      if (this.truncated) await this._flushTruncation()\n      await this._flushNodes()\n    } catch (err) {\n      for (const node of this.flushing.values()) {\n        if (!this.unflushed.has(node.index)) this.unflushed.set(node.index, node)\n      }\n      throw err\n    } finally {\n      this.flushing = null\n    }\n  }\n\n  _flushTruncation () {\n    return new Promise((resolve, reject) => {\n      const t = this.truncateTo\n      const offset = t === 0 ? 0 : (t - 1) * 80 + 40\n\n      this.storage.truncate(offset, (err) => {\n        if (err) return reject(err)\n\n        if (this.truncateTo === t) {\n          this.truncateTo = 0\n          this.truncated = false\n        }\n\n        resolve()\n      })\n    })\n  }\n\n  _flushNodes () {\n    // TODO: write neighbors together etc etc\n    // TODO: bench loading a full disk page and copy to that instead\n    return new Promise((resolve, reject) => {\n      const slab = b4a.allocUnsafe(40 * this.flushing.size)\n\n      let error = null\n      let missing = this.flushing.size + 1\n      let offset = 0\n\n      for (const node of this.flushing.values()) {\n        const state = {\n          start: 0,\n          end: 40,\n          buffer: slab.subarray(offset, offset += 40)\n        }\n\n        c.uint64.encode(state, node.size)\n        c.raw.encode(state, node.hash)\n\n        this.storage.write(node.index * 40, state.buffer, done)\n      }\n\n      done(null)\n\n      function done (err) {\n        if (err) error = err\n        if (--missing > 0) return\n        if (error) reject(error)\n        else resolve()\n      }\n    })\n  }\n\n  clear () {\n    this.cache = new Xache({ maxSize: this.cache.maxSize })\n    this.truncated = true\n    this.truncateTo = 0\n    this.roots = []\n    this.length = 0\n    this.byteLength = 0\n    this.fork = 0\n    this.signature = null\n    if (this.flushing !== null) this.flushing.clear()\n    this.unflushed.clear()\n    return this.flush()\n  }\n\n  close () {\n    return new Promise((resolve, reject) => {\n      this.storage.close(err => {\n        if (err) reject(err)\n        else resolve()\n      })\n    })\n  }\n\n  async truncate (length, fork = this.fork) {\n    const head = length * 2\n    const batch = new MerkleTreeBatch(this)\n    const fullRoots = flat.fullRoots(head)\n\n    for (let i = 0; i < fullRoots.length; i++) {\n      const root = fullRoots[i]\n      if (i < batch.roots.length && batch.roots[i].index === root) continue\n\n      while (batch.roots.length > i) batch.roots.pop()\n      batch.roots.push(await this.get(root))\n    }\n\n    while (batch.roots.length > fullRoots.length) {\n      batch.roots.pop()\n    }\n\n    batch.fork = fork\n    batch.length = length\n    batch.ancestors = length\n    batch.byteLength = totalSize(batch.roots)\n    batch.upgraded = true\n\n    return batch\n  }\n\n  async reorg (proof) {\n    const batch = new ReorgBatch(this)\n\n    let unverified = null\n\n    if (proof.block || proof.hash || proof.seek) {\n      unverified = verifyTree(proof, this.crypto, batch.nodes)\n    }\n\n    if (!verifyUpgrade(proof, unverified, batch)) {\n      throw INVALID_PROOF('Fork proof not verifiable')\n    }\n\n    for (const root of batch.roots) {\n      const existing = await this.get(root.index, false)\n      if (existing && b4a.equals(existing.hash, root.hash)) continue\n      batch._updateDiffRoot(root)\n      break\n    }\n\n    if (batch.diff !== null) {\n      await batch._update(batch.nodes)\n    } else {\n      batch.want = null\n      batch.ancestors = batch.length\n    }\n\n    return batch\n  }\n\n  verifyFullyRemote (proof) {\n    // TODO: impl this less hackishly\n    const batch = new MerkleTreeBatch(this)\n\n    batch.fork = proof.fork\n    batch.roots = []\n    batch.length = 0\n    batch.ancestors = 0\n    batch.byteLength = 0\n\n    let unverified = verifyTree(proof, this.crypto, batch.nodes)\n\n    if (proof.upgrade) {\n      if (verifyUpgrade(proof, unverified, batch)) {\n        unverified = null\n      }\n    }\n\n    return batch\n  }\n\n  async verify (proof) {\n    const batch = new MerkleTreeBatch(this)\n\n    let unverified = verifyTree(proof, this.crypto, batch.nodes)\n\n    if (proof.upgrade) {\n      if (verifyUpgrade(proof, unverified, batch)) {\n        unverified = null\n      }\n    }\n\n    if (unverified) {\n      const verified = await this.get(unverified.index)\n      if (!b4a.equals(verified.hash, unverified.hash)) {\n        throw INVALID_CHECKSUM('Invalid checksum at node ' + unverified.index)\n      }\n    }\n\n    return batch\n  }\n\n  async proof ({ block, hash, seek, upgrade }) {\n    // Important that this does not throw inbetween making the promise arrays\n    // and finalise being called, otherwise there will be lingering promises in the background\n\n    const fork = this.fork\n    const signature = this.signature\n    const head = 2 * this.length\n    const from = upgrade ? upgrade.start * 2 : 0\n    const to = upgrade ? from + upgrade.length * 2 : head\n    const node = normalizeIndexed(block, hash)\n\n    if (from >= to || to > head) {\n      throw INVALID_OPERATION('Invalid upgrade')\n    }\n    if (seek && upgrade && node !== null && node.index >= from) {\n      throw INVALID_OPERATION('Cannot both do a seek and block/hash request when upgrading')\n    }\n\n    let subTree = head\n\n    const p = {\n      node: null,\n      seek: null,\n      upgrade: null,\n      additionalUpgrade: null\n    }\n\n    if (node !== null && (!upgrade || node.lastIndex < upgrade.start)) {\n      subTree = nodesToRoot(node.index, node.nodes, to)\n      const seekRoot = seek ? await seekUntrustedTree(this, subTree, seek.bytes) : head\n      blockAndSeekProof(this, node, seek, seekRoot, subTree, p)\n    } else if ((node || seek) && upgrade) {\n      subTree = seek ? await seekFromHead(this, to, seek.bytes) : node.index\n    }\n\n    if (upgrade) {\n      upgradeProof(this, node, seek, from, to, subTree, p)\n      if (head > to) additionalUpgradeProof(this, to, head, p)\n    }\n\n    const [pNode, pSeek, pUpgrade, pAdditional] = await settleProof(p)\n    const result = { fork, block: null, hash: null, seek: null, upgrade: null }\n\n    if (block) {\n      result.block = {\n        index: block.index,\n        value: null, // populated upstream, alloc it here for simplicity\n        nodes: pNode\n      }\n    } else if (hash) {\n      result.hash = {\n        index: hash.index,\n        nodes: pNode\n      }\n    }\n\n    if (seek && pSeek !== null) {\n      result.seek = {\n        bytes: seek.bytes,\n        nodes: pSeek\n      }\n    }\n\n    if (upgrade) {\n      result.upgrade = {\n        start: upgrade.start,\n        length: upgrade.length,\n        nodes: pUpgrade,\n        additionalNodes: pAdditional || [],\n        signature\n      }\n    }\n\n    return result\n  }\n\n  // Successor to .nodes()\n  async missingNodes (index) {\n    const head = 2 * this.length\n    const ite = flat.iterator(index)\n\n    // See iterator.rightSpan()\n    const iteRightSpan = ite.index + ite.factor / 2 - 1\n    // If the index is not in the current tree, we do not know how many missing nodes there are...\n    if (iteRightSpan >= head) return 0\n\n    let cnt = 0\n    while (!ite.contains(head) && (await this.get(ite.index, false)) === null) {\n      cnt++\n      ite.parent()\n    }\n\n    return cnt\n  }\n\n  // Deprecated\n  async nodes (index) {\n    const head = 2 * this.length\n    const ite = flat.iterator(index)\n\n    let cnt = 0\n    while (!ite.contains(head) && (await this.get(ite.index, false)) === null) {\n      cnt++\n      ite.parent()\n    }\n\n    return cnt\n  }\n\n  async byteRange (index) {\n    const head = 2 * this.length\n    if (((index & 1) === 0 ? index : flat.rightSpan(index)) >= head) {\n      throw BAD_ARGUMENT('Index is out of bounds')\n    }\n    return [await this.byteOffset(index), (await this.get(index)).size]\n  }\n\n  async byteOffset (index) {\n    if ((index & 1) === 1) index = flat.leftSpan(index)\n\n    let head = 0\n    let offset = 0\n\n    for (const node of this.roots) { // all async ticks happen once we find the root so safe\n      head += 2 * ((node.index - head) + 1)\n\n      if (index >= head) {\n        offset += node.size\n        continue\n      }\n\n      const ite = flat.iterator(node.index)\n\n      while (ite.index !== index) {\n        if (index < ite.index) {\n          ite.leftChild()\n        } else {\n          offset += (await this.get(ite.leftChild())).size\n          ite.sibling()\n        }\n      }\n\n      return offset\n    }\n  }\n\n  static async open (storage, opts = {}) {\n    await new Promise((resolve, reject) => {\n      storage.read(0, OLD_TREE.length, (err, buf) => {\n        if (err) return resolve()\n        if (b4a.equals(buf, OLD_TREE)) return reject(new Error('Storage contains an incompatible merkle tree'))\n        resolve()\n      })\n    })\n\n    const length = typeof opts.length === 'number'\n      ? opts.length\n      : await autoLength(storage)\n\n    const roots = []\n    for (const index of flat.fullRoots(2 * length)) {\n      roots.push(await getStoredNode(storage, index, null, true))\n    }\n\n    return new MerkleTree(storage, roots, opts.fork || 0, opts.signature || null)\n  }\n}\n\n// All the methods needed for proof verification\n\nfunction verifyTree ({ block, hash, seek }, crypto, nodes) {\n  const untrustedNode = block\n    ? { index: 2 * block.index, value: block.value, nodes: block.nodes }\n    : hash\n      ? { index: hash.index, value: null, nodes: hash.nodes }\n      : null\n\n  if (untrustedNode === null && (!seek || !seek.nodes.length)) return null\n\n  let root = null\n\n  if (seek && seek.nodes.length) {\n    const ite = flat.iterator(seek.nodes[0].index)\n    const q = new NodeQueue(seek.nodes)\n\n    root = q.shift(ite.index)\n    nodes.push(root)\n\n    while (q.length > 0) {\n      const node = q.shift(ite.sibling())\n\n      root = parentNode(crypto, ite.parent(), root, node)\n      nodes.push(node)\n      nodes.push(root)\n    }\n  }\n\n  if (untrustedNode === null) return root\n\n  const ite = flat.iterator(untrustedNode.index)\n  const blockHash = untrustedNode.value && blockNode(crypto, ite.index, untrustedNode.value)\n\n  const q = new NodeQueue(untrustedNode.nodes, root)\n\n  root = blockHash || q.shift(ite.index)\n  nodes.push(root)\n\n  while (q.length > 0) {\n    const node = q.shift(ite.sibling())\n\n    root = parentNode(crypto, ite.parent(), root, node)\n    nodes.push(node)\n    nodes.push(root)\n  }\n\n  return root\n}\n\nfunction verifyUpgrade ({ fork, upgrade }, blockRoot, batch) {\n  const q = new NodeQueue(upgrade.nodes, blockRoot)\n\n  let grow = batch.roots.length > 0\n  let i = 0\n\n  const to = 2 * (upgrade.start + upgrade.length)\n  const ite = flat.iterator(0)\n\n  for (; ite.fullRoot(to); ite.nextTree()) {\n    if (i < batch.roots.length && batch.roots[i].index === ite.index) {\n      i++\n      continue\n    }\n\n    if (grow) {\n      grow = false\n      const root = ite.index\n      if (i < batch.roots.length) {\n        ite.seek(batch.roots[batch.roots.length - 1].index)\n        while (ite.index !== root) {\n          batch.appendRoot(q.shift(ite.sibling()), ite)\n        }\n        continue\n      }\n    }\n\n    batch.appendRoot(q.shift(ite.index), ite)\n  }\n\n  const extra = upgrade.additionalNodes\n\n  ite.seek(batch.roots[batch.roots.length - 1].index)\n  i = 0\n\n  while (i < extra.length && extra[i].index === ite.sibling()) {\n    batch.appendRoot(extra[i++], ite)\n  }\n\n  while (i < extra.length) {\n    const node = extra[i++]\n\n    while (node.index !== ite.index) {\n      if (ite.factor === 2) throw INVALID_OPERATION('Unexpected node: ' + node.index)\n      ite.leftChild()\n    }\n\n    batch.appendRoot(node, ite)\n    ite.sibling()\n  }\n\n  batch.signature = upgrade.signature\n  batch.fork = fork\n\n  return q.extra === null\n}\n\nasync function seekFromHead (tree, head, bytes) {\n  const roots = flat.fullRoots(head)\n\n  for (let i = 0; i < roots.length; i++) {\n    const root = roots[i]\n    const node = await tree.get(root)\n\n    if (bytes === node.size) return root\n    if (bytes > node.size) {\n      bytes -= node.size\n      continue\n    }\n\n    return seekTrustedTree(tree, root, bytes)\n  }\n\n  return head\n}\n\n// trust that bytes are within the root tree and find the block at bytes\n\nasync function seekTrustedTree (tree, root, bytes) {\n  if (!bytes) return root\n\n  const ite = flat.iterator(root)\n\n  while ((ite.index & 1) !== 0) {\n    const l = await tree.get(ite.leftChild(), false)\n    if (l) {\n      if (l.size === bytes) return ite.index\n      if (l.size > bytes) continue\n      bytes -= l.size\n      ite.sibling()\n    } else {\n      ite.parent()\n      return ite.index\n    }\n  }\n\n  return ite.index\n}\n\n// try to find the block at bytes without trusting that is *is* within the root passed\n\nasync function seekUntrustedTree (tree, root, bytes) {\n  const offset = await tree.byteOffset(root)\n\n  if (offset > bytes) throw INVALID_OPERATION('Invalid seek')\n  if (offset === bytes) return root\n\n  bytes -= offset\n\n  const node = await tree.get(root)\n\n  if (node.size <= bytes) throw INVALID_OPERATION('Invalid seek')\n\n  return seekTrustedTree(tree, root, bytes)\n}\n\n// Below is proof production, ie, construct proofs to verify a request\n// Note, that all these methods are sync as we can statically infer which nodes\n// are needed for the remote to verify given they arguments they passed us\n\nfunction seekProof (tree, seekRoot, root, p) {\n  const ite = flat.iterator(seekRoot)\n\n  p.seek = []\n  p.seek.push(tree.get(ite.index))\n\n  while (ite.index !== root) {\n    ite.sibling()\n    p.seek.push(tree.get(ite.index))\n    ite.parent()\n  }\n}\n\nfunction blockAndSeekProof (tree, node, seek, seekRoot, root, p) {\n  if (!node) return seekProof(tree, seekRoot, root, p)\n\n  const ite = flat.iterator(node.index)\n\n  p.node = []\n  if (!node.value) p.node.push(tree.get(ite.index))\n\n  while (ite.index !== root) {\n    ite.sibling()\n\n    if (seek && ite.contains(seekRoot) && ite.index !== seekRoot) {\n      seekProof(tree, seekRoot, ite.index, p)\n    } else {\n      p.node.push(tree.get(ite.index))\n    }\n\n    ite.parent()\n  }\n}\n\nfunction upgradeProof (tree, node, seek, from, to, subTree, p) {\n  if (from === 0) p.upgrade = []\n\n  for (const ite = flat.iterator(0); ite.fullRoot(to); ite.nextTree()) {\n    // check if they already have the node\n    if (ite.index + ite.factor / 2 < from) continue\n\n    // connect existing tree\n    if (p.upgrade === null && ite.contains(from - 2)) {\n      p.upgrade = []\n\n      const root = ite.index\n      const target = from - 2\n\n      ite.seek(target)\n\n      while (ite.index !== root) {\n        ite.sibling()\n        if (ite.index > target) {\n          if (p.node === null && p.seek === null && ite.contains(subTree)) {\n            blockAndSeekProof(tree, node, seek, subTree, ite.index, p)\n          } else {\n            p.upgrade.push(tree.get(ite.index))\n          }\n        }\n        ite.parent()\n      }\n\n      continue\n    }\n\n    if (p.upgrade === null) {\n      p.upgrade = []\n    }\n\n    // if the subtree included is a child of this tree, include that one\n    // instead of a dup node\n    if (p.node === null && p.seek === null && ite.contains(subTree)) {\n      blockAndSeekProof(tree, node, seek, subTree, ite.index, p)\n      continue\n    }\n\n    // add root (can be optimised since the root might be in tree.roots)\n    p.upgrade.push(tree.get(ite.index))\n  }\n}\n\nfunction additionalUpgradeProof (tree, from, to, p) {\n  if (from === 0) p.additionalUpgrade = []\n\n  for (const ite = flat.iterator(0); ite.fullRoot(to); ite.nextTree()) {\n    // check if they already have the node\n    if (ite.index + ite.factor / 2 < from) continue\n\n    // connect existing tree\n    if (p.additionalUpgrade === null && ite.contains(from - 2)) {\n      p.additionalUpgrade = []\n\n      const root = ite.index\n      const target = from - 2\n\n      ite.seek(target)\n\n      while (ite.index !== root) {\n        ite.sibling()\n        if (ite.index > target) {\n          p.additionalUpgrade.push(tree.get(ite.index))\n        }\n        ite.parent()\n      }\n\n      continue\n    }\n\n    if (p.additionalUpgrade === null) {\n      p.additionalUpgrade = []\n    }\n\n    // add root (can be optimised since the root is in tree.roots)\n    p.additionalUpgrade.push(tree.get(ite.index))\n  }\n}\n\nfunction nodesToRoot (index, nodes, head) {\n  const ite = flat.iterator(index)\n\n  for (let i = 0; i < nodes; i++) {\n    ite.parent()\n    if (ite.contains(head)) throw BAD_ARGUMENT('Nodes is out of bounds')\n  }\n\n  return ite.index\n}\n\nfunction totalSize (nodes) {\n  let s = 0\n  for (const node of nodes) s += node.size\n  return s\n}\n\nfunction totalSpan (nodes) {\n  let s = 0\n  for (const node of nodes) s += 2 * ((node.index - s) + 1)\n  return s\n}\n\nfunction blockNode (crypto, index, value) {\n  return { index, size: value.byteLength, hash: crypto.data(value) }\n}\n\nfunction parentNode (crypto, index, a, b) {\n  return { index, size: a.size + b.size, hash: crypto.parent(a, b) }\n}\n\nfunction blankNode (index) {\n  return { index, size: 0, hash: BLANK_HASH }\n}\n\n// Storage methods\n\nfunction getStoredNode (storage, index, cache, error) {\n  return new Promise((resolve, reject) => {\n    storage.read(40 * index, 40, (err, data) => {\n      if (err) {\n        if (error) return reject(err)\n        else resolve(null)\n        return\n      }\n\n      const hash = data.subarray(8)\n      const size = c.decode(c.uint64, data)\n\n      if (size === 0 && b4a.compare(hash, BLANK_HASH) === 0) {\n        if (error) reject(new Error('Could not load node: ' + index))\n        else resolve(null)\n        return\n      }\n\n      const node = { index, size, hash }\n      if (cache !== null) cache.set(index, node)\n      resolve(node)\n    })\n  })\n}\n\nfunction storedNodes (storage) {\n  return new Promise((resolve) => {\n    storage.stat((_, st) => {\n      if (!st) return resolve(0)\n      resolve((st.size - (st.size % 40)) / 40)\n    })\n  })\n}\n\nasync function autoLength (storage) {\n  const nodes = await storedNodes(storage)\n  if (!nodes) return 0\n  const ite = flat.iterator(nodes - 1)\n  let index = nodes - 1\n  while (await getStoredNode(storage, ite.parent(), null, false)) index = ite.index\n  return flat.rightSpan(index) / 2 + 1\n}\n\nfunction truncateMap (map, len) {\n  for (const node of map.values()) {\n    if (node.index >= 2 * len) map.delete(node.index)\n  }\n}\n\nfunction log2 (n) {\n  let res = 1\n\n  while (n > 2) {\n    n /= 2\n    res++\n  }\n\n  return res\n}\n\nfunction normalizeIndexed (block, hash) {\n  if (block) return { value: true, index: block.index * 2, nodes: block.nodes, lastIndex: block.index }\n  if (hash) return { value: false, index: hash.index, nodes: hash.nodes, lastIndex: flat.rightSpan(hash.index) / 2 }\n  return null\n}\n\nasync function settleProof (p) {\n  const result = [\n    p.node && Promise.all(p.node),\n    p.seek && Promise.all(p.seek),\n    p.upgrade && Promise.all(p.upgrade),\n    p.additionalUpgrade && Promise.all(p.additionalUpgrade)\n  ]\n\n  try {\n    return await Promise.all(result)\n  } catch (err) {\n    if (p.node) await Promise.allSettled(p.node)\n    if (p.seek) await Promise.allSettled(p.seek)\n    if (p.upgrade) await Promise.allSettled(p.upgrade)\n    if (p.additionalUpgrade) await Promise.allSettled(p.additionalUpgrade)\n    throw err\n  }\n}\n","const c = require('compact-encoding')\nconst b4a = require('b4a')\nconst { INVALID_OPLOG_VERSION } = require('./errors')\n\nconst EMPTY = b4a.alloc(0)\n\nconst node = {\n  preencode (state, n) {\n    c.uint.preencode(state, n.index)\n    c.uint.preencode(state, n.size)\n    c.fixed32.preencode(state, n.hash)\n  },\n  encode (state, n) {\n    c.uint.encode(state, n.index)\n    c.uint.encode(state, n.size)\n    c.fixed32.encode(state, n.hash)\n  },\n  decode (state) {\n    return {\n      index: c.uint.decode(state),\n      size: c.uint.decode(state),\n      hash: c.fixed32.decode(state)\n    }\n  }\n}\n\nconst nodeArray = c.array(node)\n\nconst wire = exports.wire = {}\n\nwire.handshake = {\n  preencode (state, m) {\n    c.uint.preencode(state, 0) // flags for the future\n    c.fixed32.preencode(state, m.capability)\n  },\n  encode (state, m) {\n    c.uint.encode(state, 0) // flags for the future\n    c.fixed32.encode(state, m.capability)\n  },\n  decode (state) {\n    c.uint.decode(state) // flags for the future\n    return {\n      capability: c.fixed32.decode(state)\n    }\n  }\n}\n\nconst requestBlock = {\n  preencode (state, b) {\n    c.uint.preencode(state, b.index)\n    c.uint.preencode(state, b.nodes)\n  },\n  encode (state, b) {\n    c.uint.encode(state, b.index)\n    c.uint.encode(state, b.nodes)\n  },\n  decode (state) {\n    return {\n      index: c.uint.decode(state),\n      nodes: c.uint.decode(state)\n    }\n  }\n}\n\nconst requestSeek = {\n  preencode (state, s) {\n    c.uint.preencode(state, s.bytes)\n  },\n  encode (state, s) {\n    c.uint.encode(state, s.bytes)\n  },\n  decode (state) {\n    return {\n      bytes: c.uint.decode(state)\n    }\n  }\n}\n\nconst requestUpgrade = {\n  preencode (state, u) {\n    c.uint.preencode(state, u.start)\n    c.uint.preencode(state, u.length)\n  },\n  encode (state, u) {\n    c.uint.encode(state, u.start)\n    c.uint.encode(state, u.length)\n  },\n  decode (state) {\n    return {\n      start: c.uint.decode(state),\n      length: c.uint.decode(state)\n    }\n  }\n}\n\nwire.request = {\n  preencode (state, m) {\n    state.end++ // flags\n    c.uint.preencode(state, m.id)\n    c.uint.preencode(state, m.fork)\n\n    if (m.block) requestBlock.preencode(state, m.block)\n    if (m.hash) requestBlock.preencode(state, m.hash)\n    if (m.seek) requestSeek.preencode(state, m.seek)\n    if (m.upgrade) requestUpgrade.preencode(state, m.upgrade)\n  },\n  encode (state, m) {\n    const flags = (m.block ? 1 : 0) | (m.hash ? 2 : 0) | (m.seek ? 4 : 0) | (m.upgrade ? 8 : 0)\n\n    c.uint.encode(state, flags)\n    c.uint.encode(state, m.id)\n    c.uint.encode(state, m.fork)\n\n    if (m.block) requestBlock.encode(state, m.block)\n    if (m.hash) requestBlock.encode(state, m.hash)\n    if (m.seek) requestSeek.encode(state, m.seek)\n    if (m.upgrade) requestUpgrade.encode(state, m.upgrade)\n  },\n  decode (state) {\n    const flags = c.uint.decode(state)\n\n    return {\n      id: c.uint.decode(state),\n      fork: c.uint.decode(state),\n      block: flags & 1 ? requestBlock.decode(state) : null,\n      hash: flags & 2 ? requestBlock.decode(state) : null,\n      seek: flags & 4 ? requestSeek.decode(state) : null,\n      upgrade: flags & 8 ? requestUpgrade.decode(state) : null\n    }\n  }\n}\n\nwire.cancel = {\n  preencode (state, m) {\n    c.uint.preencode(state, m.request)\n  },\n  encode (state, m) {\n    c.uint.encode(state, m.request)\n  },\n  decode (state, m) {\n    return {\n      request: c.uint.decode(state)\n    }\n  }\n}\n\nconst dataUpgrade = {\n  preencode (state, u) {\n    c.uint.preencode(state, u.start)\n    c.uint.preencode(state, u.length)\n    nodeArray.preencode(state, u.nodes)\n    nodeArray.preencode(state, u.additionalNodes)\n    c.buffer.preencode(state, u.signature)\n  },\n  encode (state, u) {\n    c.uint.encode(state, u.start)\n    c.uint.encode(state, u.length)\n    nodeArray.encode(state, u.nodes)\n    nodeArray.encode(state, u.additionalNodes)\n    c.buffer.encode(state, u.signature)\n  },\n  decode (state) {\n    return {\n      start: c.uint.decode(state),\n      length: c.uint.decode(state),\n      nodes: nodeArray.decode(state),\n      additionalNodes: nodeArray.decode(state),\n      signature: c.buffer.decode(state)\n    }\n  }\n}\n\nconst dataSeek = {\n  preencode (state, s) {\n    c.uint.preencode(state, s.bytes)\n    nodeArray.preencode(state, s.nodes)\n  },\n  encode (state, s) {\n    c.uint.encode(state, s.bytes)\n    nodeArray.encode(state, s.nodes)\n  },\n  decode (state) {\n    return {\n      bytes: c.uint.decode(state),\n      nodes: nodeArray.decode(state)\n    }\n  }\n}\n\nconst dataBlock = {\n  preencode (state, b) {\n    c.uint.preencode(state, b.index)\n    c.buffer.preencode(state, b.value)\n    nodeArray.preencode(state, b.nodes)\n  },\n  encode (state, b) {\n    c.uint.encode(state, b.index)\n    c.buffer.encode(state, b.value)\n    nodeArray.encode(state, b.nodes)\n  },\n  decode (state) {\n    return {\n      index: c.uint.decode(state),\n      value: c.buffer.decode(state) || EMPTY,\n      nodes: nodeArray.decode(state)\n    }\n  }\n}\n\nconst dataHash = {\n  preencode (state, b) {\n    c.uint.preencode(state, b.index)\n    nodeArray.preencode(state, b.nodes)\n  },\n  encode (state, b) {\n    c.uint.encode(state, b.index)\n    nodeArray.encode(state, b.nodes)\n  },\n  decode (state) {\n    return {\n      index: c.uint.decode(state),\n      nodes: nodeArray.decode(state)\n    }\n  }\n}\n\nwire.data = {\n  preencode (state, m) {\n    state.end++ // flags\n    c.uint.preencode(state, m.request)\n    c.uint.preencode(state, m.fork)\n\n    if (m.block) dataBlock.preencode(state, m.block)\n    if (m.hash) dataHash.preencode(state, m.hash)\n    if (m.seek) dataSeek.preencode(state, m.seek)\n    if (m.upgrade) dataUpgrade.preencode(state, m.upgrade)\n  },\n  encode (state, m) {\n    const flags = (m.block ? 1 : 0) | (m.hash ? 2 : 0) | (m.seek ? 4 : 0) | (m.upgrade ? 8 : 0)\n\n    c.uint.encode(state, flags)\n    c.uint.encode(state, m.request)\n    c.uint.encode(state, m.fork)\n\n    if (m.block) dataBlock.encode(state, m.block)\n    if (m.hash) dataHash.encode(state, m.hash)\n    if (m.seek) dataSeek.encode(state, m.seek)\n    if (m.upgrade) dataUpgrade.encode(state, m.upgrade)\n  },\n  decode (state) {\n    const flags = c.uint.decode(state)\n\n    return {\n      request: c.uint.decode(state),\n      fork: c.uint.decode(state),\n      block: flags & 1 ? dataBlock.decode(state) : null,\n      hash: flags & 2 ? dataHash.decode(state) : null,\n      seek: flags & 4 ? dataSeek.decode(state) : null,\n      upgrade: flags & 8 ? dataUpgrade.decode(state) : null\n    }\n  }\n}\n\nwire.noData = {\n  preencode (state, m) {\n    c.uint.preencode(state, m.request)\n  },\n  encode (state, m) {\n    c.uint.encode(state, m.request)\n  },\n  decode (state, m) {\n    return {\n      request: c.uint.decode(state)\n    }\n  }\n}\n\nwire.want = {\n  preencode (state, m) {\n    c.uint.preencode(state, m.start)\n    c.uint.preencode(state, m.length)\n  },\n  encode (state, m) {\n    c.uint.encode(state, m.start)\n    c.uint.encode(state, m.length)\n  },\n  decode (state) {\n    return {\n      start: c.uint.decode(state),\n      length: c.uint.decode(state)\n    }\n  }\n}\n\nwire.unwant = {\n  preencode (state, m) {\n    c.uint.preencode(state, m.start)\n    c.uint.preencode(state, m.length)\n  },\n  encode (state, m) {\n    c.uint.encode(state, m.start)\n    c.uint.encode(state, m.length)\n  },\n  decode (state, m) {\n    return {\n      start: c.uint.decode(state),\n      length: c.uint.decode(state)\n    }\n  }\n}\n\nwire.range = {\n  preencode (state, m) {\n    state.end++ // flags\n    c.uint.preencode(state, m.start)\n    if (m.length !== 1) c.uint.preencode(state, m.length)\n  },\n  encode (state, m) {\n    c.uint.encode(state, (m.drop ? 1 : 0) | (m.length === 1 ? 2 : 0))\n    c.uint.encode(state, m.start)\n    if (m.length !== 1) c.uint.encode(state, m.length)\n  },\n  decode (state) {\n    const flags = c.uint.decode(state)\n\n    return {\n      drop: (flags & 1) !== 0,\n      start: c.uint.decode(state),\n      length: (flags & 2) !== 0 ? 1 : c.uint.decode(state)\n    }\n  }\n}\n\nwire.bitfield = {\n  preencode (state, m) {\n    c.uint.preencode(state, m.start)\n    c.uint32array.preencode(state, m.bitfield)\n  },\n  encode (state, m) {\n    c.uint.encode(state, m.start)\n    c.uint32array.encode(state, m.bitfield)\n  },\n  decode (state, m) {\n    return {\n      start: c.uint.decode(state),\n      bitfield: c.uint32array.decode(state)\n    }\n  }\n}\n\nwire.sync = {\n  preencode (state, m) {\n    state.end++ // flags\n    c.uint.preencode(state, m.fork)\n    c.uint.preencode(state, m.length)\n    c.uint.preencode(state, m.remoteLength)\n  },\n  encode (state, m) {\n    c.uint.encode(state, (m.canUpgrade ? 1 : 0) | (m.uploading ? 2 : 0) | (m.downloading ? 4 : 0))\n    c.uint.encode(state, m.fork)\n    c.uint.encode(state, m.length)\n    c.uint.encode(state, m.remoteLength)\n  },\n  decode (state) {\n    const flags = c.uint.decode(state)\n\n    return {\n      fork: c.uint.decode(state),\n      length: c.uint.decode(state),\n      remoteLength: c.uint.decode(state),\n      canUpgrade: (flags & 1) !== 0,\n      uploading: (flags & 2) !== 0,\n      downloading: (flags & 4) !== 0\n    }\n  }\n}\n\nwire.reorgHint = {\n  preencode (state, m) {\n    c.uint.preencode(state, m.from)\n    c.uint.preencode(state, m.to)\n    c.uint.preencode(state, m.ancestors)\n  },\n  encode (state, m) {\n    c.uint.encode(state, m.from)\n    c.uint.encode(state, m.to)\n    c.uint.encode(state, m.ancestors)\n  },\n  decode (state) {\n    return {\n      from: c.uint.encode(state),\n      to: c.uint.encode(state),\n      ancestors: c.uint.encode(state)\n    }\n  }\n}\n\nwire.extension = {\n  preencode (state, m) {\n    c.string.preencode(state, m.name)\n    c.raw.preencode(state, m.message)\n  },\n  encode (state, m) {\n    c.string.encode(state, m.name)\n    c.raw.encode(state, m.message)\n  },\n  decode (state) {\n    return {\n      name: c.string.decode(state),\n      message: c.raw.decode(state)\n    }\n  }\n}\n\nconst keyValue = {\n  preencode (state, p) {\n    c.string.preencode(state, p.key)\n    c.buffer.preencode(state, p.value)\n  },\n  encode (state, p) {\n    c.string.encode(state, p.key)\n    c.buffer.encode(state, p.value)\n  },\n  decode (state) {\n    return {\n      key: c.string.decode(state),\n      value: c.buffer.decode(state)\n    }\n  }\n}\n\nconst treeUpgrade = {\n  preencode (state, u) {\n    c.uint.preencode(state, u.fork)\n    c.uint.preencode(state, u.ancestors)\n    c.uint.preencode(state, u.length)\n    c.buffer.preencode(state, u.signature)\n  },\n  encode (state, u) {\n    c.uint.encode(state, u.fork)\n    c.uint.encode(state, u.ancestors)\n    c.uint.encode(state, u.length)\n    c.buffer.encode(state, u.signature)\n  },\n  decode (state) {\n    return {\n      fork: c.uint.decode(state),\n      ancestors: c.uint.decode(state),\n      length: c.uint.decode(state),\n      signature: c.buffer.decode(state)\n    }\n  }\n}\n\nconst bitfieldUpdate = { // TODO: can maybe be folded into a HAVE later on with the most recent spec\n  preencode (state, b) {\n    state.end++ // flags\n    c.uint.preencode(state, b.start)\n    c.uint.preencode(state, b.length)\n  },\n  encode (state, b) {\n    state.buffer[state.start++] = b.drop ? 1 : 0\n    c.uint.encode(state, b.start)\n    c.uint.encode(state, b.length)\n  },\n  decode (state) {\n    const flags = c.uint.decode(state)\n    return {\n      drop: (flags & 1) !== 0,\n      start: c.uint.decode(state),\n      length: c.uint.decode(state)\n    }\n  }\n}\n\nconst oplog = exports.oplog = {}\n\noplog.entry = {\n  preencode (state, m) {\n    state.end++ // flags\n    if (m.userData) keyValue.preencode(state, m.userData)\n    if (m.treeNodes) nodeArray.preencode(state, m.treeNodes)\n    if (m.treeUpgrade) treeUpgrade.preencode(state, m.treeUpgrade)\n    if (m.bitfield) bitfieldUpdate.preencode(state, m.bitfield)\n  },\n  encode (state, m) {\n    const s = state.start++\n    let flags = 0\n\n    if (m.userData) {\n      flags |= 1\n      keyValue.encode(state, m.userData)\n    }\n    if (m.treeNodes) {\n      flags |= 2\n      nodeArray.encode(state, m.treeNodes)\n    }\n    if (m.treeUpgrade) {\n      flags |= 4\n      treeUpgrade.encode(state, m.treeUpgrade)\n    }\n    if (m.bitfield) {\n      flags |= 8\n      bitfieldUpdate.encode(state, m.bitfield)\n    }\n\n    state.buffer[s] = flags\n  },\n  decode (state) {\n    const flags = c.uint.decode(state)\n    return {\n      userData: (flags & 1) !== 0 ? keyValue.decode(state) : null,\n      treeNodes: (flags & 2) !== 0 ? nodeArray.decode(state) : null,\n      treeUpgrade: (flags & 4) !== 0 ? treeUpgrade.decode(state) : null,\n      bitfield: (flags & 8) !== 0 ? bitfieldUpdate.decode(state) : null\n    }\n  }\n}\n\nconst keyPair = {\n  preencode (state, kp) {\n    c.buffer.preencode(state, kp.publicKey)\n    c.buffer.preencode(state, kp.secretKey)\n  },\n  encode (state, kp) {\n    c.buffer.encode(state, kp.publicKey)\n    c.buffer.encode(state, kp.secretKey)\n  },\n  decode (state) {\n    return {\n      publicKey: c.buffer.decode(state),\n      secretKey: c.buffer.decode(state)\n    }\n  }\n}\n\nconst reorgHint = {\n  preencode (state, r) {\n    c.uint.preencode(state, r.from)\n    c.uint.preencode(state, r.to)\n    c.uint.preencode(state, r.ancestors)\n  },\n  encode (state, r) {\n    c.uint.encode(state, r.from)\n    c.uint.encode(state, r.to)\n    c.uint.encode(state, r.ancestors)\n  },\n  decode (state) {\n    return {\n      from: c.uint.decode(state),\n      to: c.uint.decode(state),\n      ancestors: c.uint.decode(state)\n    }\n  }\n}\n\nconst reorgHintArray = c.array(reorgHint)\n\nconst hints = {\n  preencode (state, h) {\n    reorgHintArray.preencode(state, h.reorgs)\n  },\n  encode (state, h) {\n    reorgHintArray.encode(state, h.reorgs)\n  },\n  decode (state) {\n    return {\n      reorgs: reorgHintArray.decode(state)\n    }\n  }\n}\n\nconst treeHeader = {\n  preencode (state, t) {\n    c.uint.preencode(state, t.fork)\n    c.uint.preencode(state, t.length)\n    c.buffer.preencode(state, t.rootHash)\n    c.buffer.preencode(state, t.signature)\n  },\n  encode (state, t) {\n    c.uint.encode(state, t.fork)\n    c.uint.encode(state, t.length)\n    c.buffer.encode(state, t.rootHash)\n    c.buffer.encode(state, t.signature)\n  },\n  decode (state) {\n    return {\n      fork: c.uint.decode(state),\n      length: c.uint.decode(state),\n      rootHash: c.buffer.decode(state),\n      signature: c.buffer.decode(state)\n    }\n  }\n}\n\nconst types = {\n  preencode (state, t) {\n    c.string.preencode(state, t.tree)\n    c.string.preencode(state, t.bitfield)\n    c.string.preencode(state, t.signer)\n  },\n  encode (state, t) {\n    c.string.encode(state, t.tree)\n    c.string.encode(state, t.bitfield)\n    c.string.encode(state, t.signer)\n  },\n  decode (state) {\n    return {\n      tree: c.string.decode(state),\n      bitfield: c.string.decode(state),\n      signer: c.string.decode(state)\n    }\n  }\n}\n\nconst keyValueArray = c.array(keyValue)\n\noplog.header = {\n  preencode (state, h) {\n    state.end += 1 // version\n    types.preencode(state, h.types)\n    keyValueArray.preencode(state, h.userData)\n    treeHeader.preencode(state, h.tree)\n    keyPair.preencode(state, h.signer)\n    hints.preencode(state, h.hints)\n    c.uint.preencode(state, h.contiguousLength)\n  },\n  encode (state, h) {\n    state.buffer[state.start++] = 0 // version\n    types.encode(state, h.types)\n    keyValueArray.encode(state, h.userData)\n    treeHeader.encode(state, h.tree)\n    keyPair.encode(state, h.signer)\n    hints.encode(state, h.hints)\n    c.uint.encode(state, h.contiguousLength)\n  },\n  decode (state) {\n    const version = c.uint.decode(state)\n\n    if (version !== 0) {\n      throw INVALID_OPLOG_VERSION('Invalid header version. Expected 0, got ' + version)\n    }\n\n    return {\n      types: types.decode(state),\n      userData: keyValueArray.decode(state),\n      tree: treeHeader.decode(state),\n      signer: keyPair.decode(state),\n      hints: hints.decode(state),\n      contiguousLength: state.end > state.start ? c.uint.decode(state) : 0\n    }\n  }\n}\n","module.exports = class Mutex {\n  constructor () {\n    this.locked = false\n    this.destroyed = false\n\n    this._destroying = null\n    this._destroyError = null\n    this._queue = []\n    this._enqueue = (resolve, reject) => this._queue.push([resolve, reject])\n  }\n\n  lock () {\n    if (this.destroyed) return Promise.reject(this._destroyError)\n    if (this.locked) return new Promise(this._enqueue)\n    this.locked = true\n    return Promise.resolve()\n  }\n\n  unlock () {\n    if (!this._queue.length) {\n      this.locked = false\n      return\n    }\n    this._queue.shift()[0]()\n  }\n\n  destroy (err) {\n    if (!this._destroying) this._destroying = this.locked ? this.lock().catch(() => {}) : Promise.resolve()\n\n    this.destroyed = true\n    this._destroyError = err || new Error('Mutex has been destroyed')\n\n    if (err) {\n      while (this._queue.length) this._queue.shift()[1](err)\n    }\n\n    return this._destroying\n  }\n}\n","const cenc = require('compact-encoding')\nconst b4a = require('b4a')\nconst { crc32 } = require('crc-universal')\nconst { OPLOG_CORRUPT } = require('./errors')\n\nmodule.exports = class Oplog {\n  constructor (storage, { pageSize = 4096, headerEncoding = cenc.raw, entryEncoding = cenc.raw } = {}) {\n    this.storage = storage\n    this.headerEncoding = headerEncoding\n    this.entryEncoding = entryEncoding\n    this.flushed = false\n    this.byteLength = 0\n    this.length = 0\n\n    this._headers = [1, 0]\n    this._pageSize = pageSize\n    this._entryOffset = pageSize * 2\n  }\n\n  _addHeader (state, len, headerBit, partialBit) {\n    // add the uint header (frame length and flush info)\n    state.start = state.start - len - 4\n    cenc.uint32.encode(state, (len << 2) | headerBit | partialBit)\n\n    // crc32 the length + header-bit + content and prefix it\n    state.start -= 8\n    cenc.uint32.encode(state, crc32(state.buffer.subarray(state.start + 4, state.start + 8 + len)))\n    state.start += len + 4\n  }\n\n  _decodeEntry (state, enc) {\n    if (state.end - state.start < 8) return null\n    const cksum = cenc.uint32.decode(state)\n    const l = cenc.uint32.decode(state)\n    const length = l >>> 2\n    const headerBit = l & 1\n    const partialBit = l & 2\n\n    if (state.end - state.start < length) return null\n\n    const end = state.start + length\n\n    if (crc32(state.buffer.subarray(state.start - 4, end)) !== cksum) {\n      return null\n    }\n\n    const result = { header: headerBit, partial: partialBit !== 0, byteLength: length + 8, message: null }\n\n    try {\n      result.message = enc.decode({ start: state.start, end, buffer: state.buffer })\n    } catch {\n      return null\n    }\n\n    state.start = end\n\n    return result\n  }\n\n  async open () {\n    const buffer = await this._readAll() // TODO: stream the oplog in on load maybe?\n    const state = { start: 0, end: buffer.byteLength, buffer }\n    const result = { header: null, entries: [] }\n\n    this.byteLength = 0\n    this.length = 0\n\n    const h1 = this._decodeEntry(state, this.headerEncoding)\n    state.start = this._pageSize\n\n    const h2 = this._decodeEntry(state, this.headerEncoding)\n    state.start = this._entryOffset\n\n    if (!h1 && !h2) {\n      // reset state...\n      this.flushed = false\n      this._headers[0] = 1\n      this._headers[1] = 0\n\n      if (buffer.byteLength >= this._entryOffset) {\n        throw OPLOG_CORRUPT()\n      }\n      return result\n    }\n\n    this.flushed = true\n\n    if (h1 && !h2) {\n      this._headers[0] = h1.header\n      this._headers[1] = h1.header\n    } else if (!h1 && h2) {\n      this._headers[0] = (h2.header + 1) & 1\n      this._headers[1] = h2.header\n    } else {\n      this._headers[0] = h1.header\n      this._headers[1] = h2.header\n    }\n\n    const header = (this._headers[0] + this._headers[1]) & 1\n    const decoded = []\n\n    result.header = header ? h2.message : h1.message\n\n    while (true) {\n      const entry = this._decodeEntry(state, this.entryEncoding)\n      if (!entry) break\n      if (entry.header !== header) break\n\n      decoded.push(entry)\n    }\n\n    while (decoded.length > 0 && decoded[decoded.length - 1].partial) decoded.pop()\n\n    for (const e of decoded) {\n      result.entries.push(e.message)\n      this.byteLength += e.byteLength\n      this.length++\n    }\n\n    const size = this.byteLength + this._entryOffset\n\n    if (size === buffer.byteLength) return result\n\n    await new Promise((resolve, reject) => {\n      this.storage.truncate(size, err => {\n        if (err) return reject(err)\n        resolve()\n      })\n    })\n\n    return result\n  }\n\n  _readAll () {\n    return new Promise((resolve, reject) => {\n      this.storage.open(err => {\n        if (err && err.code !== 'ENOENT') return reject(err)\n        if (err) return resolve(b4a.alloc(0))\n        this.storage.stat((err, stat) => {\n          if (err && err.code !== 'ENOENT') return reject(err)\n          this.storage.read(0, stat.size, (err, buf) => {\n            if (err) return reject(err)\n            resolve(buf)\n          })\n        })\n      })\n    })\n  }\n\n  flush (header) {\n    const state = { start: 8, end: 8, buffer: null }\n    const i = this._headers[0] === this._headers[1] ? 1 : 0\n    const bit = (this._headers[i] + 1) & 1\n\n    this.headerEncoding.preencode(state, header)\n    state.buffer = b4a.allocUnsafe(state.end)\n    this.headerEncoding.encode(state, header)\n    this._addHeader(state, state.end - 8, bit, 0)\n\n    return this._writeHeaderAndTruncate(i, bit, state.buffer)\n  }\n\n  _writeHeaderAndTruncate (i, bit, buf) {\n    return new Promise((resolve, reject) => {\n      this.storage.write(i === 0 ? 0 : this._pageSize, buf, err => {\n        if (err) return reject(err)\n\n        this.storage.truncate(this._entryOffset, err => {\n          if (err) return reject(err)\n\n          this._headers[i] = bit\n          this.byteLength = 0\n          this.length = 0\n          this.flushed = true\n\n          resolve()\n        })\n      })\n    })\n  }\n\n  append (batch, atomic = true) {\n    if (!Array.isArray(batch)) batch = [batch]\n\n    const state = { start: 0, end: batch.length * 8, buffer: null }\n    const bit = (this._headers[0] + this._headers[1]) & 1\n\n    for (let i = 0; i < batch.length; i++) {\n      this.entryEncoding.preencode(state, batch[i])\n    }\n\n    state.buffer = b4a.allocUnsafe(state.end)\n\n    for (let i = 0; i < batch.length; i++) {\n      const start = state.start += 8 // space for header\n      const partial = (atomic && i < batch.length - 1) ? 2 : 0\n      this.entryEncoding.encode(state, batch[i])\n      this._addHeader(state, state.start - start, bit, partial)\n    }\n\n    return this._append(state.buffer, batch.length)\n  }\n\n  close () {\n    return new Promise((resolve, reject) => {\n      this.storage.close(err => {\n        if (err) return reject(err)\n        resolve()\n      })\n    })\n  }\n\n  _append (buf, count) {\n    return new Promise((resolve, reject) => {\n      this.storage.write(this._entryOffset + this.byteLength, buf, err => {\n        if (err) return reject(err)\n\n        this.byteLength += buf.byteLength\n        this.length += count\n\n        resolve()\n      })\n    })\n  }\n}\n","const BigSparseArray = require('big-sparse-array')\nconst quickbit = require('./compat').quickbit\n\nconst BITS_PER_PAGE = 32768\nconst BYTES_PER_PAGE = BITS_PER_PAGE / 8\nconst WORDS_PER_PAGE = BYTES_PER_PAGE / 4\nconst BITS_PER_SEGMENT = 2097152\nconst BYTES_PER_SEGMENT = BITS_PER_SEGMENT / 8\nconst PAGES_PER_SEGMENT = BITS_PER_SEGMENT / BITS_PER_PAGE\n\nclass RemoteBitfieldPage {\n  constructor (index, bitfield, segment) {\n    this.index = index\n    this.offset = index * BYTES_PER_PAGE - segment.offset\n    this.bitfield = bitfield\n    this.segment = segment\n\n    segment.add(this)\n  }\n\n  get tree () {\n    return this.segment.tree\n  }\n\n  get (index) {\n    return quickbit.get(this.bitfield, index)\n  }\n\n  set (index, val) {\n    if (quickbit.set(this.bitfield, index, val)) {\n      this.tree.update(this.offset * 8 + index)\n    }\n  }\n\n  setRange (start, length, val) {\n    quickbit.fill(this.bitfield, val, start, start + length)\n\n    let i = Math.floor(start / 32)\n    const n = i + Math.ceil(length / 32)\n\n    while (i < n) this.tree.update(this.offset * 8 + i++ * 32)\n  }\n\n  findFirst (val, position) {\n    return quickbit.findFirst(this.bitfield, val, position)\n  }\n\n  findLast (val, position) {\n    return quickbit.findLast(this.bitfield, val, position)\n  }\n\n  insert (start, bitfield) {\n    this.bitfield.set(bitfield, start / 32)\n  }\n}\n\nclass RemoteBitfieldSegment {\n  constructor (index) {\n    this.index = index\n    this.offset = index * BYTES_PER_SEGMENT\n    this.tree = quickbit.Index.from([])\n    this.pages = new Array(PAGES_PER_SEGMENT)\n  }\n\n  get chunks () {\n    return this.tree.chunks\n  }\n\n  add (page) {\n    this.pages[page.index - this.index * PAGES_PER_SEGMENT] = page\n\n    const chunk = { field: page.bitfield, offset: page.offset }\n\n    this.chunks.push(chunk)\n\n    for (let i = this.chunks.length - 2; i >= 0; i--) {\n      const prev = this.chunks[i]\n      if (prev.offset <= chunk.offset) break\n      this.chunks[i] = chunk\n      this.chunks[i + 1] = prev\n    }\n  }\n\n  findFirst (val, position) {\n    position = this.tree.skipFirst(!val, position)\n\n    const j = position & (BITS_PER_PAGE - 1)\n    const i = (position - j) / BITS_PER_PAGE\n\n    if (i >= PAGES_PER_SEGMENT) return -1\n\n    const p = this.pages[i]\n\n    if (p) {\n      const index = p.findFirst(val, j)\n\n      if (index !== -1) {\n        return i * BITS_PER_PAGE + index\n      }\n    }\n\n    return -1\n  }\n\n  findLast (val, position) {\n    position = this.tree.skipLast(!val, position)\n\n    const j = position & (BITS_PER_PAGE - 1)\n    const i = (position - j) / BITS_PER_PAGE\n\n    if (i >= PAGES_PER_SEGMENT) return -1\n\n    const p = this.pages[i]\n\n    if (p) {\n      const index = p.findLast(val, j)\n\n      if (index !== -1) {\n        return i * BITS_PER_PAGE + index\n      }\n    }\n\n    return -1\n  }\n}\n\nmodule.exports = class RemoteBitfield {\n  constructor () {\n    this._pages = new BigSparseArray()\n    this._segments = new BigSparseArray()\n  }\n\n  get (index) {\n    const j = index & (BITS_PER_PAGE - 1)\n    const i = (index - j) / BITS_PER_PAGE\n\n    const p = this._pages.get(i)\n\n    return p ? p.get(j) : false\n  }\n\n  set (index, val) {\n    const j = index & (BITS_PER_PAGE - 1)\n    const i = (index - j) / BITS_PER_PAGE\n\n    let p = this._pages.get(i)\n\n    if (!p && val) {\n      const k = Math.floor(i / PAGES_PER_SEGMENT)\n      const s = this._segments.get(k) || this._segments.set(k, new RemoteBitfieldSegment(k))\n\n      p = this._pages.set(i, new RemoteBitfieldPage(i, new Uint32Array(WORDS_PER_PAGE), s))\n    }\n\n    if (p) p.set(j, val)\n  }\n\n  setRange (start, length, val) {\n    let j = start & (BITS_PER_PAGE - 1)\n    let i = (start - j) / BITS_PER_PAGE\n\n    while (length > 0) {\n      let p = this._pages.get(i)\n\n      if (!p && val) {\n        const k = Math.floor(i / PAGES_PER_SEGMENT)\n        const s = this._segments.get(k) || this._segments.set(k, new RemoteBitfieldSegment(k))\n\n        p = this._pages.set(i, new RemoteBitfieldPage(i, new Uint32Array(WORDS_PER_PAGE), s))\n      }\n\n      const end = Math.min(j + length, BITS_PER_PAGE)\n      const range = end - j\n\n      if (p) p.setRange(j, range, val)\n\n      j = 0\n      i++\n      length -= range\n    }\n  }\n\n  findFirst (val, position) {\n    let j = position & (BITS_PER_SEGMENT - 1)\n    let i = (position - j) / BITS_PER_SEGMENT\n\n    while (i < this._segments.maxLength) {\n      const s = this._segments.get(i)\n\n      if (s) {\n        const index = s.findFirst(val, j)\n\n        if (index !== -1) {\n          return i * BITS_PER_SEGMENT + index\n        }\n      }\n\n      j = 0\n      i++\n    }\n\n    return -1\n  }\n\n  firstSet (position) {\n    return this.findFirst(true, position)\n  }\n\n  firstUnset (position) {\n    return this.findFirst(false, position)\n  }\n\n  findLast (val, position) {\n    let j = position & (BITS_PER_SEGMENT - 1)\n    let i = (position - j) / BITS_PER_SEGMENT\n\n    while (i >= 0) {\n      const s = this._segments.get(i)\n\n      if (s) {\n        const index = s.findLast(val, j)\n\n        if (index !== -1) {\n          return i * BITS_PER_SEGMENT + index\n        }\n      }\n\n      j = BITS_PER_SEGMENT - 1\n      i--\n    }\n\n    return -1\n  }\n\n  lastSet (position) {\n    return this.findLast(true, position)\n  }\n\n  lastUnset (position) {\n    return this.findLast(false, position)\n  }\n\n  insert (start, bitfield) {\n    if (start % 32 !== 0) return false\n\n    let length = bitfield.byteLength * 8\n\n    let j = start & (BITS_PER_PAGE - 1)\n    let i = (start - j) / BITS_PER_PAGE\n\n    while (length > 0) {\n      let p = this._pages.get(i)\n\n      if (!p) {\n        const k = Math.floor(i / PAGES_PER_SEGMENT)\n        const s = this._segments.get(k) || this._segments.set(k, new RemoteBitfieldSegment(k))\n\n        p = this._pages.set(i, new RemoteBitfieldPage(i, new Uint32Array(WORDS_PER_PAGE), s))\n      }\n\n      const end = Math.min(j + length, BITS_PER_PAGE)\n      const range = end - j\n\n      p.insert(j, bitfield.subarray(0, range / 32))\n\n      bitfield = bitfield.subarray(range / 32)\n\n      j = 0\n      i++\n      length -= range\n    }\n\n    return true\n  }\n}\n","const b4a = require('b4a')\nconst safetyCatch = require('safety-catch')\nconst RandomIterator = require('random-array-iterator')\nconst RemoteBitfield = require('./remote-bitfield')\nconst { REQUEST_CANCELLED, REQUEST_TIMEOUT, INVALID_CAPABILITY, SNAPSHOT_NOT_AVAILABLE } = require('./errors')\nconst m = require('./messages')\nconst caps = require('./caps')\n\nconst DEFAULT_MAX_INFLIGHT = 32\nconst DEFAULT_SEGMENT_SIZE = 128 * 1024 // 128 KiB\n\nclass Attachable {\n  constructor () {\n    this.resolved = false\n    this.refs = []\n  }\n\n  attach (session) {\n    const r = {\n      context: this,\n      session,\n      sindex: 0,\n      rindex: 0,\n      snapshot: true,\n      resolve: null,\n      reject: null,\n      promise: null,\n      timeout: null\n    }\n\n    r.sindex = session.push(r) - 1\n    r.rindex = this.refs.push(r) - 1\n    r.promise = new Promise((resolve, reject) => {\n      r.resolve = resolve\n      r.reject = reject\n    })\n\n    return r\n  }\n\n  detach (r, err = null) {\n    if (r.context !== this) return false\n\n    this._detach(r)\n    this._cancel(r, err)\n    this.gc()\n\n    return true\n  }\n\n  _detach (r) {\n    const rh = this.refs.pop()\n    const sh = r.session.pop()\n\n    if (r.rindex < this.refs.length) this.refs[rh.rindex = r.rindex] = rh\n    if (r.sindex < r.session.length) r.session[sh.sindex = r.sindex] = sh\n\n    destroyRequestTimeout(r)\n    r.context = null\n\n    return r\n  }\n\n  gc () {\n    if (this.refs.length === 0) this._unref()\n  }\n\n  _cancel (r, err) {\n    r.reject(err || REQUEST_CANCELLED())\n  }\n\n  _unref () {\n    // overwrite me\n  }\n\n  resolve (val) {\n    this.resolved = true\n    while (this.refs.length > 0) {\n      this._detach(this.refs[this.refs.length - 1]).resolve(val)\n    }\n  }\n\n  reject (err) {\n    this.resolved = true\n    while (this.refs.length > 0) {\n      this._detach(this.refs[this.refs.length - 1]).reject(err)\n    }\n  }\n\n  setTimeout (r, ms) {\n    destroyRequestTimeout(r)\n    r.timeout = setTimeout(onrequesttimeout, ms, r)\n  }\n}\n\nclass BlockRequest extends Attachable {\n  constructor (tracker, index) {\n    super()\n\n    this.index = index\n    this.inflight = []\n    this.queued = false\n    this.tracker = tracker\n  }\n\n  _unref () {\n    if (this.inflight.length > 0) return\n    this.tracker.remove(this.index)\n  }\n}\n\nclass RangeRequest extends Attachable {\n  constructor (ranges, start, end, linear, ifAvailable, blocks) {\n    super()\n\n    this.start = start\n    this.end = end\n    this.linear = linear\n    this.ifAvailable = ifAvailable\n    this.blocks = blocks\n    this.ranges = ranges\n\n    // As passed by the user, immut\n    this.userStart = start\n    this.userEnd = end\n  }\n\n  _unref () {\n    const i = this.ranges.indexOf(this)\n    if (i === -1) return\n    const h = this.ranges.pop()\n    if (i < this.ranges.length - 1) this.ranges[i] = h\n  }\n\n  _cancel (r) {\n    r.resolve(false)\n  }\n}\n\nclass UpgradeRequest extends Attachable {\n  constructor (replicator, fork, length) {\n    super()\n\n    this.fork = fork\n    this.length = length\n    this.inflight = []\n    this.replicator = replicator\n  }\n\n  _unref () {\n    if (this.replicator.eagerUpgrade === true || this.inflight.length > 0) return\n    this.replicator._upgrade = null\n  }\n\n  _cancel (r) {\n    r.resolve(false)\n  }\n}\n\nclass SeekRequest extends Attachable {\n  constructor (seeks, seeker) {\n    super()\n\n    this.seeker = seeker\n    this.inflight = []\n    this.seeks = seeks\n  }\n\n  _unref () {\n    if (this.inflight.length > 0) return\n    const i = this.seeks.indexOf(this)\n    if (i === -1) return\n    const h = this.seeks.pop()\n    if (i < this.seeks.length - 1) this.seeks[i] = h\n  }\n}\n\nclass InflightTracker {\n  constructor () {\n    this._requests = []\n    this._free = []\n  }\n\n  get idle () {\n    return this._requests.length === this._free.length\n  }\n\n  * [Symbol.iterator] () {\n    for (const req of this._requests) {\n      if (req !== null) yield req\n    }\n  }\n\n  add (req) {\n    const id = this._free.length ? this._free.pop() : this._requests.push(null)\n\n    req.id = id\n    this._requests[id - 1] = req\n    return req\n  }\n\n  get (id) {\n    return id <= this._requests.length ? this._requests[id - 1] : null\n  }\n\n  remove (id) {\n    if (id <= this._requests.length) {\n      this._requests[id - 1] = null\n      this._free.push(id)\n    }\n  }\n}\n\nclass BlockTracker {\n  constructor () {\n    this._map = new Map()\n  }\n\n  [Symbol.iterator] () {\n    return this._map.values()\n  }\n\n  isEmpty () {\n    return this._map.size === 0\n  }\n\n  has (index) {\n    return this._map.has(index)\n  }\n\n  get (index) {\n    return this._map.get(index) || null\n  }\n\n  add (index) {\n    let b = this._map.get(index)\n    if (b) return b\n\n    b = new BlockRequest(this, index)\n    this._map.set(index, b)\n\n    return b\n  }\n\n  remove (index) {\n    const b = this.get(index)\n    this._map.delete(index)\n    return b\n  }\n}\n\nclass Peer {\n  constructor (replicator, protomux, channel, session) {\n    this.core = replicator.core\n    this.replicator = replicator\n    this.stream = protomux.stream\n    this.protomux = protomux\n    this.remotePublicKey = this.stream.remotePublicKey\n\n    this.paused = false\n\n    this.session = session\n\n    this.channel = channel\n    this.channel.userData = this\n\n    this.wireSync = this.channel.messages[0]\n    this.wireRequest = this.channel.messages[1]\n    this.wireCancel = null\n    this.wireData = this.channel.messages[3]\n    this.wireNoData = this.channel.messages[4]\n    this.wireWant = this.channel.messages[5]\n    this.wireUnwant = this.channel.messages[6]\n    this.wireBitfield = this.channel.messages[7]\n    this.wireRange = this.channel.messages[8]\n    this.wireExtension = this.channel.messages[9]\n\n    this.inflight = 0\n    this.maxInflight = DEFAULT_MAX_INFLIGHT\n    this.dataProcessing = 0\n\n    this.canUpgrade = true\n\n    this.needsSync = false\n    this.syncsProcessing = 0\n\n    // TODO: tweak pipelining so that data sent BEFORE remoteOpened is not cap verified!\n    // we might wanna tweak that with some crypto, ie use the cap to encrypt it...\n    // or just be aware of that, to only push non leaky data\n\n    this.remoteOpened = false\n    this.remoteBitfield = new RemoteBitfield()\n\n    this.remoteFork = 0\n    this.remoteLength = 0\n    this.remoteCanUpgrade = false\n    this.remoteUploading = true\n    this.remoteDownloading = true\n    this.remoteSynced = false\n\n    this.segmentsWanted = new Set()\n    this.broadcastedNonSparse = false\n\n    this.lengthAcked = 0\n\n    this.extensions = new Map()\n    this.lastExtensionSent = ''\n    this.lastExtensionRecv = ''\n\n    replicator._ifAvailable++\n  }\n\n  signalUpgrade () {\n    if (this._shouldUpdateCanUpgrade() === true) this._updateCanUpgradeAndSync()\n    else this.sendSync()\n  }\n\n  broadcastRange (start, length, drop) {\n    this.wireRange.send({\n      drop,\n      start,\n      length\n    })\n  }\n\n  extension (name, message) {\n    this.wireExtension.send({ name: name === this.lastExtensionSent ? '' : name, message })\n    this.lastExtensionSent = name\n  }\n\n  onextension (message) {\n    const name = message.name || this.lastExtensionRecv\n    this.lastExtensionRecv = name\n    const ext = this.extensions.get(name)\n    if (ext) ext._onmessage({ start: 0, end: message.byteLength, buffer: message.message }, this)\n  }\n\n  sendSync () {\n    if (this.syncsProcessing !== 0) {\n      this.needsSync = true\n      return\n    }\n\n    if (this.core.tree.fork !== this.remoteFork) {\n      this.canUpgrade = false\n    }\n\n    this.needsSync = false\n\n    this.wireSync.send({\n      fork: this.core.tree.fork,\n      length: this.core.tree.length,\n      remoteLength: this.core.tree.fork === this.remoteFork ? this.remoteLength : 0,\n      canUpgrade: this.canUpgrade,\n      uploading: true,\n      downloading: true\n    })\n  }\n\n  onopen ({ capability }) {\n    const expected = caps.replicate(this.stream.isInitiator === false, this.replicator.key, this.stream.handshakeHash)\n\n    if (b4a.equals(capability, expected) !== true) { // TODO: change this to a rejection instead, less leakage\n      throw INVALID_CAPABILITY('Remote sent an invalid replication capability')\n    }\n\n    if (this.remoteOpened === true) return\n    this.remoteOpened = true\n\n    this.protomux.cork()\n\n    this.sendSync()\n\n    const contig = this.core.header.contiguousLength\n    if (contig > 0) {\n      this.broadcastRange(0, contig, false)\n\n      if (contig === this.core.tree.length) {\n        this.broadcastedNonSparse = true\n      }\n    }\n\n    this.replicator._ifAvailable--\n    this.replicator._addPeer(this)\n\n    this.protomux.uncork()\n  }\n\n  onclose (isRemote) {\n    if (this.session) this.session.close().catch(noop)\n\n    if (this.remoteOpened === false) {\n      this.replicator._ifAvailable--\n      this.replicator.updateAll()\n      return\n    }\n\n    this.remoteOpened = false\n    this.replicator._removePeer(this)\n  }\n\n  async onsync ({ fork, length, remoteLength, canUpgrade, uploading, downloading }) {\n    const lengthChanged = length !== this.remoteLength\n    const sameFork = fork === this.core.tree.fork\n\n    this.remoteSynced = true\n    this.remoteFork = fork\n    this.remoteLength = length\n    this.remoteCanUpgrade = canUpgrade\n    this.remoteUploading = uploading\n    this.remoteDownloading = downloading\n\n    this.lengthAcked = sameFork ? remoteLength : 0\n    this.syncsProcessing++\n\n    this.replicator._updateFork(this)\n\n    if (this.remoteLength > this.core.tree.length && this.lengthAcked === this.core.tree.length) {\n      if (this.replicator._addUpgradeMaybe() !== null) this._update()\n    }\n\n    const upgrade = (lengthChanged === false || sameFork === false)\n      ? this.canUpgrade && sameFork\n      : await this._canUpgrade(length, fork)\n\n    if (length === this.remoteLength && fork === this.core.tree.fork) {\n      this.canUpgrade = upgrade\n    }\n\n    if (--this.syncsProcessing !== 0) return // ie not latest\n\n    if (this.needsSync === true || (this.core.tree.fork === this.remoteFork && this.core.tree.length > this.remoteLength)) {\n      this.signalUpgrade()\n    }\n\n    this._update()\n  }\n\n  _shouldUpdateCanUpgrade () {\n    return this.core.tree.fork === this.remoteFork &&\n      this.core.tree.length > this.remoteLength &&\n      this.canUpgrade === false &&\n      this.syncsProcessing === 0\n  }\n\n  async _updateCanUpgradeAndSync () {\n    const { length, fork } = this.core.tree\n\n    const canUpgrade = await this._canUpgrade(this.remoteLength, this.remoteFork)\n\n    if (this.syncsProcessing > 0 || length !== this.core.tree.length || fork !== this.core.tree.fork) {\n      return\n    }\n    if (canUpgrade === this.canUpgrade) {\n      return\n    }\n\n    this.canUpgrade = canUpgrade\n    this.sendSync()\n  }\n\n  // Safe to call in the background - never fails\n  async _canUpgrade (remoteLength, remoteFork) {\n    if (remoteFork !== this.core.tree.fork) return false\n\n    if (remoteLength === 0) return true\n    if (remoteLength >= this.core.tree.length) return false\n\n    try {\n      // Rely on caching to make sure this is cheap...\n      const canUpgrade = await this.core.tree.upgradeable(remoteLength)\n\n      if (remoteFork !== this.core.tree.fork) return false\n\n      return canUpgrade\n    } catch {\n      return false\n    }\n  }\n\n  async _getProof (msg) {\n    const proof = await this.core.tree.proof(msg)\n\n    if (proof.block) {\n      const index = msg.block.index\n\n      if (msg.fork !== this.core.tree.fork || !this.core.bitfield.get(index)) {\n        return null\n      }\n\n      proof.block.value = await this.core.blocks.get(index)\n    }\n\n    return proof\n  }\n\n  async onrequest (msg) {\n    let proof = null\n\n    // TODO: could still be answerable if (index, fork) is an ancestor of the current fork\n    if (msg.fork === this.core.tree.fork) {\n      try {\n        proof = await this._getProof(msg)\n      } catch (err) { // TODO: better error handling here, ie custom errors\n        safetyCatch(err)\n      }\n    }\n\n    if (proof !== null) {\n      if (proof.block !== null) {\n        this.replicator.onupload(proof.block.index, proof.block.value, this)\n      }\n\n      this.wireData.send({\n        request: msg.id,\n        fork: msg.fork,\n        block: proof.block,\n        hash: proof.hash,\n        seek: proof.seek,\n        upgrade: proof.upgrade\n      })\n      return\n    }\n\n    this.wireNoData.send({\n      request: msg.id\n    })\n  }\n\n  _checkIfConflict (err) {\n    this.paused = true\n\n    const length = Math.min(this.core.tree.length, this.remoteLength)\n    if (length === 0) throw err\n\n    this.wireRequest.send({\n      id: 0, // TODO: use an more explicit id for this eventually...\n      fork: this.remoteFork,\n      block: null,\n      hash: null,\n      seek: null,\n      upgrade: {\n        start: 0,\n        length\n      }\n    })\n  }\n\n  async ondata (data) {\n    // always allow a fork conflict proof to be sent\n    if (data.request === 0 && data.upgrade && data.upgrade.start === 0) {\n      if (await this.core.checkConflict(data, this)) return\n      this.paused = false\n    }\n\n    const req = data.request > 0 ? this.replicator._inflight.get(data.request) : null\n    const reorg = data.fork > this.core.tree.fork\n\n    // no push atm, TODO: check if this satisfies another pending request\n    // allow reorg pushes tho as those are not written to storage so we'll take all the help we can get\n    if (req === null && reorg === false) return\n\n    if (req !== null) {\n      if (req.peer !== this) return\n      this.inflight--\n      this.replicator._inflight.remove(req.id)\n    }\n\n    if (reorg === true) return this.replicator._onreorgdata(this, req, data)\n\n    this.dataProcessing++\n\n    try {\n      if (!matchingRequest(req, data) || !(await this.core.verify(data, this))) {\n        this.replicator._onnodata(this, req)\n        return\n      }\n    } catch (err) {\n      safetyCatch(err)\n      // might be a fork, verify\n      this._checkIfConflict(err)\n      this.replicator._onnodata(this, req)\n      return\n    } finally {\n      this.dataProcessing--\n    }\n\n    this.replicator._ondata(this, req, data)\n\n    if (this._shouldUpdateCanUpgrade() === true) {\n      this._updateCanUpgradeAndSync()\n    }\n  }\n\n  onnodata ({ request }) {\n    const req = request > 0 ? this.replicator._inflight.get(request) : null\n\n    if (req === null || req.peer !== this) return\n\n    this.inflight--\n    this.replicator._inflight.remove(req.id)\n    this.replicator._onnodata(this, req)\n  }\n\n  onwant ({ start, length }) {\n    this.replicator._onwant(this, start, length)\n  }\n\n  onunwant () {\n    // TODO\n  }\n\n  onbitfield ({ start, bitfield }) {\n    if (this.remoteBitfield.insert(start, bitfield)) {\n      this._update()\n    }\n  }\n\n  onrange ({ drop, start, length }) {\n    const has = drop === false\n\n    this.remoteBitfield.setRange(start, length, has)\n\n    if (drop === false) this._update()\n  }\n\n  onreorghint () {\n    // TODO\n  }\n\n  _update () {\n    // TODO: if this is in a batch or similar it would be better to defer it\n    // we could do that with nextTick/microtick mb? (combined with a property on the session to signal read buffer mb)\n    this.replicator.updatePeer(this)\n  }\n\n  async _onconflict () {\n    this.protomux.cork()\n    if (this.remoteLength > 0 && this.core.tree.fork === this.remoteFork) {\n      await this.onrequest({\n        id: 0,\n        fork: this.core.tree.fork,\n        block: null,\n        hash: null,\n        seek: null,\n        upgrade: {\n          start: 0,\n          length: Math.min(this.core.tree.length, this.remoteLength)\n        }\n      })\n    }\n    this.channel.close()\n    this.protomux.uncork()\n  }\n\n  _makeRequest (needsUpgrade) {\n    if (needsUpgrade === true && this.replicator._shouldUpgrade(this) === false) {\n      return null\n    }\n\n    if (needsUpgrade === false && this.replicator._autoUpgrade(this) === true) {\n      needsUpgrade = true\n    }\n\n    return {\n      peer: this,\n      id: 0,\n      fork: this.remoteFork,\n      block: null,\n      hash: null,\n      seek: null,\n      upgrade: needsUpgrade === false\n        ? null\n        : { start: this.core.tree.length, length: this.remoteLength - this.core.tree.length }\n    }\n  }\n\n  _requestUpgrade (u) {\n    const req = this._makeRequest(true)\n    if (req === null) return false\n\n    this._send(req)\n\n    return true\n  }\n\n  _requestSeek (s) {\n    const { length, fork } = this.core.tree\n\n    if (fork !== this.remoteFork) return false\n\n    if (s.seeker.start >= length) {\n      const req = this._makeRequest(true)\n\n      // We need an upgrade for the seek, if non can be provided, skip\n      if (req === null) return false\n\n      req.seek = { bytes: s.seeker.bytes }\n\n      s.inflight.push(req)\n      this._send(req)\n\n      return true\n    }\n\n    const len = s.seeker.end - s.seeker.start\n    const off = s.seeker.start + Math.floor(Math.random() * len)\n\n    for (let i = 0; i < len; i++) {\n      let index = off + i\n      if (index > s.seeker.end) index -= len\n\n      if (this.remoteBitfield.get(index) === false) continue\n      if (this.core.bitfield.get(index) === true) continue\n\n      // Check if this block is currently inflight - if so pick another\n      const b = this.replicator._blocks.get(index)\n      if (b !== null && b.inflight.length > 0) continue\n\n      // Block is not inflight, but we only want the hash, check if that is inflight\n      const h = this.replicator._hashes.add(index)\n      if (h.inflight.length > 0) continue\n\n      const req = this._makeRequest(false)\n\n      req.hash = { index: 2 * index, nodes: 0 }\n      req.seek = { bytes: s.seeker.bytes }\n\n      s.inflight.push(req)\n      h.inflight.push(req)\n      this._send(req)\n\n      return true\n    }\n\n    this._maybeWant(s.seeker.start, len)\n    return false\n  }\n\n  // mb turn this into a YES/NO/MAYBE enum, could simplify ifavail logic\n  _blockAvailable (b) { // TODO: fork also\n    return this.remoteBitfield.get(b.index)\n  }\n\n  _requestBlock (b) {\n    const { length, fork } = this.core.tree\n\n    if (this.remoteBitfield.get(b.index) === false || fork !== this.remoteFork) {\n      this._maybeWant(b.index)\n      return false\n    }\n\n    const req = this._makeRequest(b.index >= length)\n    if (req === null) return false\n\n    req.block = { index: b.index, nodes: 0 }\n\n    b.inflight.push(req)\n    this._send(req)\n\n    return true\n  }\n\n  _requestRange (r) {\n    const { length, fork } = this.core.tree\n\n    const end = Math.min(r.end === -1 ? this.remoteLength : r.end, this.remoteLength)\n    if (end < r.start || fork !== this.remoteFork) return false\n\n    const len = end - r.start\n    const off = r.start + (r.linear ? 0 : Math.floor(Math.random() * len))\n\n    // TODO: we should weight this to request blocks < .length first\n    // as they are \"cheaper\" and will trigger an auto upgrade if possible\n    // If no blocks < .length is avaible then try the \"needs upgrade\" range\n\n    for (let i = 0; i < len; i++) {\n      let index = off + i\n      if (index >= end) index -= len\n\n      if (r.blocks !== null) index = r.blocks[index]\n\n      if (this.remoteBitfield.get(index) === false) continue\n      if (this.core.bitfield.get(index) === true) continue\n\n      const b = this.replicator._blocks.add(index)\n      if (b.inflight.length > 0) continue\n\n      const req = this._makeRequest(index >= length)\n\n      // If the request cannot be satisfied, dealloc the block request if no one is subscribed to it\n      if (req === null) {\n        b.gc()\n        return false\n      }\n\n      req.block = { index, nodes: 0 }\n\n      b.inflight.push(req)\n      this._send(req)\n\n      // Don't think this will ever happen, as the pending queue is drained before the range queue\n      // but doesn't hurt to check this explicitly here also.\n      if (b.queued) b.queued = false\n\n      return true\n    }\n\n    this._maybeWant(r.start, len)\n    return false\n  }\n\n  _requestForkProof (f) {\n    const req = this._makeRequest(false)\n\n    req.upgrade = { start: 0, length: this.remoteLength }\n\n    f.inflight.push(req)\n    this._send(req)\n  }\n\n  _requestForkRange (f) {\n    if (f.fork !== this.remoteFork || f.batch.want === null) return false\n\n    const end = Math.min(f.batch.want.end, this.remoteLength)\n    if (end < f.batch.want.start) return false\n\n    const len = end - f.batch.want.start\n    const off = f.batch.want.start + Math.floor(Math.random() * len)\n\n    for (let i = 0; i < len; i++) {\n      let index = off + i\n      if (index >= end) index -= len\n\n      if (this.remoteBitfield.get(index) === false) continue\n\n      const req = this._makeRequest(false)\n\n      req.hash = { index: 2 * index, nodes: f.batch.want.nodes }\n\n      f.inflight.push(req)\n      this._send(req)\n\n      return true\n    }\n\n    this._maybeWant(f.batch.want.start, len)\n    return false\n  }\n\n  _maybeWant (start, length = 1) {\n    let i = Math.floor(start / DEFAULT_SEGMENT_SIZE)\n    const n = Math.ceil((start + length) / DEFAULT_SEGMENT_SIZE)\n\n    for (; i < n; i++) {\n      if (this.segmentsWanted.has(i)) continue\n      this.segmentsWanted.add(i)\n\n      this.wireWant.send({\n        start: i * DEFAULT_SEGMENT_SIZE,\n        length: DEFAULT_SEGMENT_SIZE\n      })\n    }\n  }\n\n  async _send (req) {\n    const fork = this.core.tree.fork\n\n    this.inflight++\n    this.replicator._inflight.add(req)\n\n    if (req.upgrade !== null && req.fork === fork) {\n      const u = this.replicator._addUpgrade()\n      u.inflight.push(req)\n    }\n\n    try {\n      if (req.block !== null && req.fork === fork) {\n        req.block.nodes = await this.core.tree.missingNodes(2 * req.block.index)\n      }\n      if (req.hash !== null && req.fork === fork) {\n        req.hash.nodes = await this.core.tree.missingNodes(req.hash.index)\n      }\n    } catch (err) {\n      this.stream.destroy(err)\n      return\n    }\n\n    this.wireRequest.send(req)\n  }\n}\n\nmodule.exports = class Replicator {\n  constructor (core, key, { eagerUpgrade = true, allowFork = true, onpeerupdate = noop, onupload = noop } = {}) {\n    this.key = key\n    this.discoveryKey = core.crypto.discoveryKey(key)\n    this.core = core\n    this.eagerUpgrade = eagerUpgrade\n    this.allowFork = allowFork\n    this.onpeerupdate = onpeerupdate\n    this.onupload = onupload\n    this.peers = []\n    this.findingPeers = 0 // updateable from the outside\n\n    this._inflight = new InflightTracker()\n    this._blocks = new BlockTracker()\n    this._hashes = new BlockTracker()\n\n    this._queued = []\n\n    this._seeks = []\n    this._upgrade = null\n    this._reorgs = []\n    this._ranges = []\n\n    this._hadPeers = false\n    this._ifAvailable = 0\n    this._updatesPending = 0\n    this._applyingReorg = null\n  }\n\n  cork () {\n    for (const peer of this.peers) peer.protomux.cork()\n  }\n\n  uncork () {\n    for (const peer of this.peers) peer.protomux.uncork()\n  }\n\n  // Called externally when a range of new blocks has been processed/removed\n  onhave (start, length, drop = false) {\n    for (const peer of this.peers) peer.broadcastRange(start, length, drop)\n  }\n\n  // Called externally when a truncation upgrade has been processed\n  ontruncate (newLength) {\n    const notify = []\n\n    for (const blk of this._blocks) {\n      if (blk.index < newLength) continue\n      notify.push(blk)\n    }\n\n    for (const blk of notify) {\n      for (const r of blk.refs) {\n        if (r.snapshot === false) continue\n        blk.detach(r, SNAPSHOT_NOT_AVAILABLE())\n      }\n    }\n  }\n\n  // Called externally when a upgrade has been processed\n  onupgrade () {\n    for (const peer of this.peers) peer.signalUpgrade()\n    if (this._blocks.isEmpty() === false) this._resolveBlocksLocally()\n    if (this._upgrade !== null) this._resolveUpgradeRequest(null)\n    if (this._ranges.length !== 0 || this._seeks.length !== 0) this._updateNonPrimary()\n  }\n\n  // Called externally when a conflict has been detected and verified\n  async onconflict (from) {\n    const all = []\n    for (const peer of this.peers) {\n      all.push(peer._onconflict())\n    }\n    await Promise.allSettled(all)\n  }\n\n  async applyPendingReorg () {\n    if (this._applyingReorg !== null) {\n      await this._applyingReorg\n      return true\n    }\n\n    for (let i = this._reorgs.length - 1; i >= 0; i--) {\n      const f = this._reorgs[i]\n      if (f.batch !== null && f.batch.finished) {\n        await this._applyReorg(f)\n        return true\n      }\n    }\n\n    return false\n  }\n\n  addUpgrade (session) {\n    if (this._upgrade !== null) {\n      const ref = this._upgrade.attach(session)\n      this._checkUpgradeIfAvailable()\n      return ref\n    }\n\n    const ref = this._addUpgrade().attach(session)\n\n    this.updateAll()\n\n    return ref\n  }\n\n  addBlock (session, index) {\n    const b = this._blocks.add(index)\n    const ref = b.attach(session)\n\n    this._queueBlock(b)\n    this.updateAll()\n\n    return ref\n  }\n\n  addSeek (session, seeker) {\n    const s = new SeekRequest(this._seeks, seeker)\n    const ref = s.attach(session)\n\n    this._seeks.push(s)\n    this.updateAll()\n\n    return ref\n  }\n\n  addRange (session, { start = 0, end = -1, length = toLength(start, end), blocks = null, linear = false, ifAvailable = false } = {}) {\n    if (blocks !== null) { // if using blocks, start, end just acts as frames around the blocks array\n      start = 0\n      end = length = blocks.length\n    }\n\n    const r = new RangeRequest(\n      this._ranges,\n      start,\n      length === -1 ? -1 : start + length,\n      linear,\n      ifAvailable,\n      blocks\n    )\n\n    const ref = r.attach(session)\n\n    this._ranges.push(r)\n\n    // Trigger this to see if this is already resolved...\n    // Also auto compresses the range based on local bitfield\n    this._updateNonPrimary()\n\n    return ref\n  }\n\n  cancel (ref) {\n    ref.context.detach(ref, null)\n  }\n\n  clearRequests (session, err = null) {\n    while (session.length > 0) {\n      const ref = session[session.length - 1]\n      ref.context.detach(ref, err)\n    }\n\n    this.updateAll()\n  }\n\n  _addUpgradeMaybe () {\n    return this.eagerUpgrade === true ? this._addUpgrade() : this._upgrade\n  }\n\n  // TODO: this function is OVER called atm, at each updatePeer/updateAll\n  // instead its more efficient to only call it when the conditions in here change - ie on sync/add/remove peer\n  // Do this when we have more tests.\n  _checkUpgradeIfAvailable () {\n    if (this._ifAvailable > 0 || this._upgrade === null || this._upgrade.refs.length === 0) return\n    if (this._hadPeers === false && this.findingPeers > 0) return\n\n    // check if a peer can upgrade us\n\n    for (let i = 0; i < this.peers.length; i++) {\n      const peer = this.peers[i]\n\n      if (peer.remoteSynced === false) return\n\n      if (this.core.tree.length === 0 && peer.remoteLength > 0) return\n\n      if (peer.remoteLength <= this._upgrade.length || peer.remoteFork !== this._upgrade.fork) continue\n\n      if (peer.syncsProcessing > 0) return\n\n      if (peer.lengthAcked !== this.core.tree.length && peer.remoteFork === this.core.tree.fork) return\n      if (peer.remoteCanUpgrade === true) return\n    }\n\n    // check if reorgs in progress...\n\n    if (this._applyingReorg !== null) return\n\n    // TODO: we prob should NOT wait for inflight reorgs here, seems better to just resolve the upgrade\n    // and then apply the reorg on the next call in case it's slow - needs some testing in practice\n\n    for (let i = 0; i < this._reorgs.length; i++) {\n      const r = this._reorgs[i]\n      if (r.inflight.length > 0) return\n    }\n\n    // nothing to do, indicate no update avail\n\n    const u = this._upgrade\n    this._upgrade = null\n    u.resolve(false)\n  }\n\n  _addUpgrade () {\n    if (this._upgrade !== null) return this._upgrade\n\n    // TODO: needs a reorg: true/false flag to indicate if the user requested a reorg\n    this._upgrade = new UpgradeRequest(this, this.core.tree.fork, this.core.tree.length)\n\n    return this._upgrade\n  }\n\n  _addReorg (fork, peer) {\n    if (this.allowFork === false) return null\n\n    // TODO: eager gc old reorgs from the same peer\n    // not super important because they'll get gc'ed when the request finishes\n    // but just spam the remote can do ...\n\n    for (const f of this._reorgs) {\n      if (f.fork > fork && f.batch !== null) return null\n      if (f.fork === fork) return f\n    }\n\n    const f = {\n      fork,\n      inflight: [],\n      batch: null\n    }\n\n    this._reorgs.push(f)\n\n    // maintain sorted by fork\n    let i = this._reorgs.length - 1\n    while (i > 0 && this._reorgs[i - 1].fork > fork) {\n      this._reorgs[i] = this._reorgs[i - 1]\n      this._reorgs[--i] = f\n    }\n\n    return f\n  }\n\n  _shouldUpgrade (peer) {\n    if (this._upgrade !== null && this._upgrade.inflight.length > 0) return false\n    return peer.remoteCanUpgrade === true &&\n      peer.remoteLength > this.core.tree.length &&\n      peer.lengthAcked === this.core.tree.length\n  }\n\n  _autoUpgrade (peer) {\n    return this._upgrade !== null && peer.remoteFork === this.core.tree.fork && this._shouldUpgrade(peer)\n  }\n\n  _addPeer (peer) {\n    this._hadPeers = true\n    this.peers.push(peer)\n    this.updatePeer(peer)\n    this.onpeerupdate(true, peer)\n  }\n\n  _removePeer (peer) {\n    this.peers.splice(this.peers.indexOf(peer), 1)\n\n    for (const req of this._inflight) {\n      if (req.peer !== peer) continue\n      this._inflight.remove(req.id)\n      this._clearRequest(peer, req)\n    }\n\n    this.onpeerupdate(false, peer)\n    this.updateAll()\n  }\n\n  _queueBlock (b) {\n    if (b.inflight.length > 0 || b.queued === true) return\n    b.queued = true\n    this._queued.push(b)\n  }\n\n  // Runs in the background - not allowed to throw\n  async _resolveBlocksLocally () {\n    // TODO: check if fork compat etc. Requires that we pass down truncation info\n\n    let clear = null\n\n    for (const b of this._blocks) {\n      if (this.core.bitfield.get(b.index) === false) continue\n\n      try {\n        b.resolve(await this.core.blocks.get(b.index))\n      } catch (err) {\n        b.reject(err)\n      }\n\n      if (clear === null) clear = []\n      clear.push(b)\n    }\n\n    if (clear === null) return\n\n    // Currently the block tracker does not support deletes during iteration, so we make\n    // sure to clear them afterwards.\n    for (const b of clear) {\n      this._blocks.remove(b.index)\n    }\n  }\n\n  _resolveBlockRequest (tracker, index, value, req) {\n    const b = tracker.remove(index)\n    if (b === null) return false\n\n    removeInflight(b.inflight, req)\n    b.queued = false\n\n    b.resolve(value)\n\n    return true\n  }\n\n  _resolveUpgradeRequest (req) {\n    if (req !== null) removeInflight(this._upgrade.inflight, req)\n\n    if (this.core.tree.length === this._upgrade.length && this.core.tree.fork === this._upgrade.fork) return false\n\n    const u = this._upgrade\n    this._upgrade = null\n    u.resolve(true)\n\n    return true\n  }\n\n  _resolveRangeRequest (req, index) {\n    const head = this._ranges.pop()\n\n    if (index < this._ranges.length) this._ranges[index] = head\n\n    req.resolve(true)\n  }\n\n  _clearInflightBlock (tracker, req) {\n    const isBlock = tracker === this._blocks\n    const index = isBlock === true ? req.block.index : req.hash.index / 2\n    const b = tracker.get(index)\n\n    if (b === null || removeInflight(b.inflight, req) === false) return\n\n    if (b.refs.length > 0 && isBlock === true) {\n      this._queueBlock(b)\n      return\n    }\n\n    b.gc()\n  }\n\n  _clearInflightUpgrade (req) {\n    if (removeInflight(this._upgrade.inflight, req) === false) return\n    this._upgrade.gc()\n  }\n\n  _clearInflightSeeks (req) {\n    for (const s of this._seeks) {\n      if (removeInflight(s.inflight, req) === false) continue\n      s.gc()\n    }\n  }\n\n  _clearInflightReorgs (req) {\n    for (const r of this._reorgs) {\n      removeInflight(r.inflight, req)\n    }\n  }\n\n  _clearOldReorgs (fork) {\n    for (let i = 0; i < this._reorgs.length; i++) {\n      const f = this._reorgs[i]\n      if (f.fork >= fork) continue\n      if (i === this._reorgs.length - 1) this._reorgs.pop()\n      else this._reorgs[i] = this._reorgs.pop()\n      i--\n    }\n  }\n\n  // \"slow\" updates here - async but not allowed to ever throw\n  async _updateNonPrimary () {\n    // Check if running, if so skip it and the running one will issue another update for us (debounce)\n    while (++this._updatesPending === 1) {\n      for (let i = 0; i < this._ranges.length; i++) {\n        const r = this._ranges[i]\n\n        clampRange(this.core, r)\n\n        if (r.end !== -1 && r.start >= r.end) {\n          this._resolveRangeRequest(r, i--)\n        }\n      }\n\n      for (let i = 0; i < this._seeks.length; i++) {\n        const s = this._seeks[i]\n\n        let err = null\n        let res = null\n\n        try {\n          res = await s.seeker.update()\n        } catch (error) {\n          err = error\n        }\n\n        if (!res && !err) continue\n\n        if (i < this._seeks.length - 1) this._seeks[i] = this._seeks.pop()\n        else this._seeks.pop()\n\n        i--\n\n        if (err) s.reject(err)\n        else s.resolve(res)\n      }\n\n      if (this._inflight.idle) this.updateAll()\n\n      // No additional updates scheduled - return\n      if (--this._updatesPending === 0) return\n      // Debounce the additional updates - continue\n      this._updatesPending = 0\n    }\n  }\n\n  _maybeResolveIfAvailableRanges () {\n    if (this._ifAvailable > 0 || !this._inflight.idle || !this._ranges.length) return\n\n    for (let i = 0; i < this.peers.length; i++) {\n      if (this.peers[i].dataProcessing > 0) return\n    }\n\n    for (let i = 0; i < this._ranges.length; i++) {\n      const r = this._ranges[i]\n\n      if (r.ifAvailable) {\n        this._resolveRangeRequest(r, i--)\n      }\n    }\n  }\n\n  _clearRequest (peer, req) {\n    if (req.block !== null) {\n      this._clearInflightBlock(this._blocks, req)\n    }\n\n    if (req.hash !== null) {\n      this._clearInflightBlock(this._hashes, req)\n    }\n\n    if (req.upgrade !== null && this._upgrade !== null) {\n      this._clearInflightUpgrade(req)\n    }\n\n    if (this._seeks.length > 0) {\n      this._clearInflightSeeks(req)\n    }\n\n    if (this._reorgs.length > 0) {\n      this._clearInflightReorgs(req)\n    }\n  }\n\n  _onnodata (peer, req) {\n    this._clearRequest(peer, req)\n    this.updateAll()\n  }\n\n  _ondata (peer, req, data) {\n    if (data.block !== null) {\n      this._resolveBlockRequest(this._blocks, data.block.index, data.block.value, req)\n    }\n\n    if (data.hash !== null && (data.hash.index & 1) === 0) {\n      this._resolveBlockRequest(this._hashes, data.hash.index / 2, null, req)\n    }\n\n    if (this._upgrade !== null) {\n      this._resolveUpgradeRequest(req)\n    }\n\n    if (this._seeks.length > 0) {\n      this._clearInflightSeeks(req)\n    }\n\n    if (this._reorgs.length > 0) {\n      this._clearInflightReorgs(req)\n    }\n\n    if (this._seeks.length > 0 || this._ranges.length > 0) this._updateNonPrimary()\n    else this.updatePeer(peer)\n  }\n\n  _onwant (peer, start, length) {\n    length = Math.min(length, this.core.tree.length - start)\n\n    peer.protomux.cork()\n\n    for (const msg of this.core.bitfield.want(start, length)) {\n      peer.wireBitfield.send(msg)\n    }\n\n    peer.protomux.uncork()\n  }\n\n  async _onreorgdata (peer, req, data) {\n    const f = this._addReorg(data.fork, peer)\n\n    if (f === null) {\n      this.updateAll()\n      return\n    }\n\n    removeInflight(f.inflight, req)\n\n    if (f.batch) {\n      await f.batch.update(data)\n    } else if (data.upgrade) {\n      f.batch = await this.core.tree.reorg(data)\n\n      // Remove \"older\" reorgs in progress as we just verified this one.\n      this._clearOldReorgs(f.fork)\n    }\n\n    if (f.batch && f.batch.finished) {\n      if (this._addUpgradeMaybe() !== null) {\n        await this._applyReorg(f)\n      }\n    }\n\n    this.updateAll()\n  }\n\n  // Never throws, allowed to run in the background\n  async _applyReorg (f) {\n    // TODO: more optimal here to check if potentially a better reorg\n    // is available, ie higher fork, and request that one first.\n    // This will request that one after this finishes, which is fine, but we\n    // should investigate the complexity in going the other way\n\n    const u = this._upgrade\n\n    this._reorgs = [] // clear all as the nodes are against the old tree - easier\n    this._applyingReorg = this.core.reorg(f.batch, null) // TODO: null should be the first/last peer?\n\n    try {\n      await this._applyingReorg\n    } catch (err) {\n      this._upgrade = null\n      u.reject(err)\n    }\n\n    this._applyingReorg = null\n\n    if (this._upgrade !== null) {\n      this._resolveUpgradeRequest(null)\n    }\n\n    for (const peer of this.peers) this._updateFork(peer)\n\n    // TODO: all the remaining is a tmp workaround until we have a flag/way for ANY_FORK\n    for (const r of this._ranges) {\n      r.start = r.userStart\n      r.end = r.userEnd\n    }\n\n    this.updateAll()\n  }\n\n  _maybeUpdate () {\n    return this._upgrade !== null && this._upgrade.inflight.length === 0\n  }\n\n  _updateFork (peer) {\n    if (this._applyingReorg !== null || this.allowFork === false || peer.remoteFork <= this.core.tree.fork) {\n      return false\n    }\n\n    const f = this._addReorg(peer.remoteFork, peer)\n\n    // TODO: one per peer is better\n    if (f !== null && f.batch === null && f.inflight.length === 0) {\n      return peer._requestForkProof(f)\n    }\n\n    return false\n  }\n\n  _updatePeer (peer) {\n    if (peer.paused || peer.inflight >= peer.maxInflight) {\n      return false\n    }\n\n    for (const s of this._seeks) {\n      if (s.inflight.length > 0) continue // TODO: one per peer is better\n      if (peer._requestSeek(s) === true) {\n        return true\n      }\n    }\n\n    // Implied that any block in the queue should be requested, no matter how many inflights\n    const blks = new RandomIterator(this._queued)\n\n    for (const b of blks) {\n      if (b.queued === false || peer._requestBlock(b) === true) {\n        b.queued = false\n        blks.dequeue()\n        return true\n      }\n    }\n\n    return false\n  }\n\n  _updatePeerNonPrimary (peer) {\n    if (peer.paused || peer.inflight >= peer.maxInflight) {\n      return false\n    }\n\n    const ranges = new RandomIterator(this._ranges)\n\n    for (const r of ranges) {\n      if (peer._requestRange(r) === true) {\n        return true\n      }\n    }\n\n    // Iterate from newest fork to oldest fork...\n    for (let i = this._reorgs.length - 1; i >= 0; i--) {\n      const f = this._reorgs[i]\n      if (f.batch !== null && f.inflight.length === 0 && peer._requestForkRange(f) === true) {\n        return true\n      }\n    }\n\n    if (this._maybeUpdate() === true && peer._requestUpgrade(this._upgrade) === true) {\n      return true\n    }\n\n    return false\n  }\n\n  updatePeer (peer) {\n    // Quick shortcut to wait for flushing reorgs - not needed but less waisted requests\n    if (this._applyingReorg !== null) return\n\n    while (this._updatePeer(peer) === true);\n    while (this._updatePeerNonPrimary(peer) === true);\n\n    this._checkUpgradeIfAvailable()\n    this._maybeResolveIfAvailableRanges()\n  }\n\n  updateAll () {\n    // Quick shortcut to wait for flushing reorgs - not needed but less waisted requests\n    if (this._applyingReorg !== null) return\n\n    const peers = new RandomIterator(this.peers)\n\n    for (const peer of peers) {\n      if (this._updatePeer(peer) === true) {\n        peers.requeue()\n      }\n    }\n\n    // Check if we can skip the non primary check fully\n    if (this._maybeUpdate() === false && this._ranges.length === 0 && this._reorgs.length === 0) {\n      this._checkUpgradeIfAvailable()\n      return\n    }\n\n    for (const peer of peers.restart()) {\n      if (this._updatePeerNonPrimary(peer) === true) {\n        peers.requeue()\n      }\n    }\n\n    this._checkUpgradeIfAvailable()\n    this._maybeResolveIfAvailableRanges()\n  }\n\n  attachTo (protomux, session) {\n    const makePeer = this._makePeer.bind(this, protomux, session)\n\n    protomux.pair({ protocol: 'hypercore/alpha', id: this.discoveryKey }, makePeer)\n    this._ifAvailable++\n    protomux.stream.opened.then((opened) => {\n      this._ifAvailable--\n      if (opened) makePeer()\n      else if (session) session.close().catch(noop)\n      this._checkUpgradeIfAvailable()\n    })\n  }\n\n  destroy () {\n    for (const peer of this.peers) {\n      peer.protomux.unpair({ protocol: 'hypercore/alpha', id: this.discoveryKey })\n      peer.channel.close()\n    }\n  }\n\n  _makePeer (protomux, session) {\n    if (protomux.opened({ protocol: 'hypercore/alpha', id: this.discoveryKey })) return onnochannel()\n\n    const channel = protomux.createChannel({\n      userData: null,\n      protocol: 'hypercore/alpha',\n      aliases: ['hypercore'],\n      id: this.discoveryKey,\n      handshake: m.wire.handshake,\n      messages: [\n        { encoding: m.wire.sync, onmessage: onwiresync },\n        { encoding: m.wire.request, onmessage: onwirerequest },\n        null, // oncancel\n        { encoding: m.wire.data, onmessage: onwiredata },\n        { encoding: m.wire.noData, onmessage: onwirenodata },\n        { encoding: m.wire.want, onmessage: onwirewant },\n        { encoding: m.wire.unwant, onmessage: onwireunwant },\n        { encoding: m.wire.bitfield, onmessage: onwirebitfield },\n        { encoding: m.wire.range, onmessage: onwirerange },\n        { encoding: m.wire.extension, onmessage: onwireextension }\n      ],\n      onopen: onwireopen,\n      onclose: onwireclose\n    })\n\n    if (channel === null) return onnochannel()\n\n    const peer = new Peer(this, protomux, channel, session)\n    const stream = protomux.stream\n\n    peer.channel.open({\n      capability: caps.replicate(stream.isInitiator, this.key, stream.handshakeHash)\n    })\n\n    return true\n\n    function onnochannel () {\n      if (session) session.close().catch(noop)\n      return false\n    }\n  }\n}\n\nfunction matchingRequest (req, data) {\n  if (data.block !== null && (req.block === null || req.block.index !== data.block.index)) return false\n  if (data.hash !== null && (req.hash === null || req.hash.index !== data.hash.index)) return false\n  if (data.seek !== null && (req.seek === null || req.seek.bytes !== data.seek.bytes)) return false\n  if (data.upgrade !== null && req.upgrade === null) return false\n  return req.fork === data.fork\n}\n\nfunction removeInflight (inf, req) {\n  const i = inf.indexOf(req)\n  if (i === -1) return false\n  if (i < inf.length - 1) inf[i] = inf.pop()\n  else inf.pop()\n  return true\n}\n\nfunction noop () {}\n\nfunction toLength (start, end) {\n  return end === -1 ? -1 : (end < start ? 0 : end - start)\n}\n\nfunction clampRange (core, r) {\n  if (r.blocks === null) {\n    const start = core.bitfield.firstUnset(r.start)\n\n    if (r.end === -1) {\n      r.start = start === -1 ? core.tree.length : start\n    } else {\n      const end = core.bitfield.lastUnset(r.end - 1) + 1\n\n      if (start === -1) {\n        r.start = r.end\n      } else {\n        r.start = start\n        r.end = end\n      }\n    }\n  } else {\n    while (r.start < r.end && core.bitfield.get(r.blocks[r.start])) r.start++\n    while (r.start < r.end && core.bitfield.get(r.blocks[r.end - 1])) r.end--\n  }\n}\n\nfunction onrequesttimeout (req) {\n  if (req.context) req.context.detach(req, REQUEST_TIMEOUT())\n}\n\nfunction destroyRequestTimeout (req) {\n  if (req.timeout !== null) {\n    clearTimeout(req.timeout)\n    req.timeout = null\n  }\n}\n\nfunction onwireopen (m, c) {\n  return c.userData.onopen(m)\n}\n\nfunction onwireclose (isRemote, c) {\n  return c.userData.onclose(isRemote)\n}\n\nfunction onwiresync (m, c) {\n  return c.userData.onsync(m)\n}\n\nfunction onwirerequest (m, c) {\n  return c.userData.onrequest(m)\n}\n\nfunction onwiredata (m, c) {\n  return c.userData.ondata(m)\n}\n\nfunction onwirenodata (m, c) {\n  return c.userData.onnodata(m)\n}\n\nfunction onwirewant (m, c) {\n  return c.userData.onwant(m)\n}\n\nfunction onwireunwant (m, c) {\n  return c.userData.onunwant(m)\n}\n\nfunction onwirebitfield (m, c) {\n  return c.userData.onbitfield(m)\n}\n\nfunction onwirerange (m, c) {\n  return c.userData.onrange(m)\n}\n\nfunction onwireextension (m, c) {\n  return c.userData.onextension(m)\n}\n","const { Writable, Readable } = require('streamx')\n\nclass ReadStream extends Readable {\n  constructor (core, opts = {}) {\n    super()\n\n    this.core = core\n    this.start = opts.start || 0\n    this.end = typeof opts.end === 'number' ? opts.end : -1\n    this.snapshot = !opts.live && opts.snapshot !== false\n    this.live = !!opts.live\n  }\n\n  _open (cb) {\n    this._openP().then(cb, cb)\n  }\n\n  _read (cb) {\n    this._readP().then(cb, cb)\n  }\n\n  async _openP () {\n    if (this.end === -1) await this.core.update()\n    else await this.core.ready()\n    if (this.snapshot && this.end === -1) this.end = this.core.length\n  }\n\n  async _readP () {\n    const end = this.live ? -1 : (this.end === -1 ? this.core.length : this.end)\n    if (end >= 0 && this.start >= end) {\n      this.push(null)\n      return\n    }\n\n    this.push(await this.core.get(this.start++))\n  }\n}\n\nexports.ReadStream = ReadStream\n\nclass WriteStream extends Writable {\n  constructor (core) {\n    super()\n    this.core = core\n  }\n\n  _writev (batch, cb) {\n    this._writevP(batch).then(cb, cb)\n  }\n\n  async _writevP (batch) {\n    await this.core.append(batch)\n  }\n}\n\nexports.WriteStream = WriteStream\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","const b4a = require('b4a')\n\nmodule.exports = function isOptions (opts) {\n  return typeof opts === 'object' && opts && !b4a.isBuffer(opts)\n}\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nvar ensureCallable = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n\nvar byObserver = function (Observer) {\n\tvar node = document.createTextNode(''), queue, currentQueue, i = 0;\n\tnew Observer(function () {\n\t\tvar callback;\n\t\tif (!queue) {\n\t\t\tif (!currentQueue) return;\n\t\t\tqueue = currentQueue;\n\t\t} else if (currentQueue) {\n\t\t\tqueue = currentQueue.concat(queue);\n\t\t}\n\t\tcurrentQueue = queue;\n\t\tqueue = null;\n\t\tif (typeof currentQueue === 'function') {\n\t\t\tcallback = currentQueue;\n\t\t\tcurrentQueue = null;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\tnode.data = (i = ++i % 2); // Invoke other batch, to handle leftover callbacks in case of crash\n\t\twhile (currentQueue) {\n\t\t\tcallback = currentQueue.shift();\n\t\t\tif (!currentQueue.length) currentQueue = null;\n\t\t\tcallback();\n\t\t}\n\t}).observe(node, { characterData: true });\n\treturn function (fn) {\n\t\tensureCallable(fn);\n\t\tif (queue) {\n\t\t\tif (typeof queue === 'function') queue = [queue, fn];\n\t\t\telse queue.push(fn);\n\t\t\treturn;\n\t\t}\n\t\tqueue = fn;\n\t\tnode.data = (i = ++i % 2);\n\t};\n};\n\nmodule.exports = (function () {\n\t// Node.js\n\tif ((typeof process === 'object') && process && (typeof process.nextTick === 'function')) {\n\t\treturn process.nextTick;\n\t}\n\n\t// queueMicrotask\n\tif (typeof queueMicrotask === \"function\") {\n\t\treturn function (cb) { queueMicrotask(ensureCallable(cb)); };\n\t}\n\n\t// MutationObserver\n\tif ((typeof document === 'object') && document) {\n\t\tif (typeof MutationObserver === 'function') return byObserver(MutationObserver);\n\t\tif (typeof WebKitMutationObserver === 'function') return byObserver(WebKitMutationObserver);\n\t}\n\n\t// W3C Draft\n\t// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n\tif (typeof setImmediate === 'function') {\n\t\treturn function (cb) { setImmediate(ensureCallable(cb)); };\n\t}\n\n\t// Wide available standard\n\tif ((typeof setTimeout === 'function') || (typeof setTimeout === 'object')) {\n\t\treturn function (cb) { setTimeout(ensureCallable(cb), 0); };\n\t}\n\n\treturn null;\n}());\n","/* eslint-disable camelcase */\nconst sodium = require('sodium-universal')\nconst assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst DHLEN = sodium.crypto_scalarmult_ed25519_BYTES\nconst PKLEN = sodium.crypto_scalarmult_ed25519_BYTES\nconst SCALARLEN = sodium.crypto_scalarmult_ed25519_BYTES\nconst SKLEN = sodium.crypto_sign_SECRETKEYBYTES\nconst ALG = 'Ed25519'\n\nmodule.exports = {\n  DHLEN,\n  PKLEN,\n  SCALARLEN,\n  SKLEN,\n  ALG,\n  name: ALG,\n  generateKeyPair,\n  dh\n}\n\nfunction generateKeyPair (privKey) {\n  if (privKey) return generateSeedKeyPair(privKey.subarray(0, 32))\n\n  const keyPair = {}\n  keyPair.secretKey = b4a.alloc(SKLEN)\n  keyPair.publicKey = b4a.alloc(PKLEN)\n\n  sodium.crypto_sign_keypair(keyPair.publicKey, keyPair.secretKey)\n  return keyPair\n}\n\nfunction generateSeedKeyPair (seed) {\n  const keyPair = {}\n  keyPair.secretKey = b4a.alloc(SKLEN)\n  keyPair.publicKey = b4a.alloc(PKLEN)\n\n  sodium.crypto_sign_seed_keypair(keyPair.publicKey, keyPair.secretKey, seed)\n  return keyPair\n}\n\nfunction dh (publicKey, { scalar, secretKey }) {\n  // tweaked keys expose scalar directly\n  if (!scalar) {\n    assert(secretKey.byteLength === SKLEN)\n\n    // libsodium stores seed not actual scalar\n    const sk = b4a.alloc(64)\n    sodium.crypto_hash_sha512(sk, secretKey.subarray(0, 32))\n    sk[0] &= 248\n    sk[31] &= 127\n    sk[31] |= 64\n\n    scalar = sk.subarray(0, 32)\n  }\n\n  assert(scalar.byteLength === SCALARLEN)\n  assert(publicKey.byteLength === PKLEN)\n\n  const output = b4a.alloc(DHLEN)\n\n  // we clamp if necessary above\n  sodium.crypto_scalarmult_ed25519_noclamp(\n    output,\n    scalar,\n    publicKey\n  )\n\n  return output\n}\n","const sodium = require('sodium-universal')\nconst b4a = require('b4a')\n\nmodule.exports = class CipherState {\n  constructor (key) {\n    this.key = key || null\n    this.nonce = 0\n    this.CIPHER_ALG = 'ChaChaPoly'\n  }\n\n  initialiseKey (key) {\n    this.key = key\n    this.nonce = 0\n  }\n\n  setNonce (nonce) {\n    this.nonce = nonce\n  }\n\n  encrypt (plaintext, ad) {\n    if (!this.hasKey) return plaintext\n    if (!ad) ad = b4a.alloc(0)\n\n    const ciphertext = encryptWithAD(this.key, this.nonce, ad, plaintext)\n    this.nonce++\n\n    return ciphertext\n  }\n\n  decrypt (ciphertext, ad) {\n    if (!this.hasKey) return ciphertext\n    if (!ad) ad = b4a.alloc(0)\n\n    const plaintext = decryptWithAD(this.key, this.nonce, ad, ciphertext)\n    this.nonce++\n\n    return plaintext\n  }\n\n  get hasKey () {\n    return this.key !== null\n  }\n\n  _clear () {\n    sodium.sodium_memzero(this.key)\n    this.key = null\n    this.nonce = null\n  }\n\n  static get MACBYTES () {\n    return 16\n  }\n\n  static get NONCEBYTES () {\n    return 8\n  }\n\n  static get KEYBYTES () {\n    return 32\n  }\n}\n\nfunction encryptWithAD (key, counter, additionalData, plaintext) {\n  // for our purposes, additionalData will always be a pubkey so we encode from hex\n  if (!b4a.isBuffer(additionalData)) additionalData = b4a.from(additionalData, 'hex')\n  if (!b4a.isBuffer(plaintext)) plaintext = b4a.from(plaintext, 'hex')\n\n  const nonce = b4a.alloc(sodium.crypto_aead_chacha20poly1305_ietf_NPUBBYTES)\n  const view = new DataView(nonce.buffer, nonce.byteOffset, nonce.byteLength)\n  view.setUint32(4, counter, true)\n\n  const ciphertext = b4a.alloc(plaintext.byteLength + sodium.crypto_aead_chacha20poly1305_ietf_ABYTES)\n\n  sodium.crypto_aead_chacha20poly1305_ietf_encrypt(ciphertext, plaintext, additionalData, null, nonce, key)\n  return ciphertext\n}\n\nfunction decryptWithAD (key, counter, additionalData, ciphertext) {\n  // for our purposes, additionalData will always be a pubkey so we encode from hex\n  if (!b4a.isBuffer(additionalData)) additionalData = b4a.from(additionalData, 'hex')\n  if (!b4a.isBuffer(ciphertext)) ciphertext = b4a.from(ciphertext, 'hex')\n\n  const nonce = b4a.alloc(sodium.crypto_aead_chacha20poly1305_ietf_NPUBBYTES)\n  const view = new DataView(nonce.buffer, nonce.byteOffset, nonce.byteLength)\n  view.setUint32(4, counter, true)\n\n  const plaintext = b4a.alloc(ciphertext.byteLength - sodium.crypto_aead_chacha20poly1305_ietf_ABYTES)\n\n  sodium.crypto_aead_chacha20poly1305_ietf_decrypt(plaintext, null, ciphertext, additionalData, nonce, key)\n  return plaintext\n}\n","/* eslint-disable camelcase */\nconst { crypto_kx_SEEDBYTES, crypto_kx_keypair, crypto_kx_seed_keypair } = require('sodium-universal/crypto_kx')\nconst { crypto_scalarmult_BYTES, crypto_scalarmult_SCALARBYTES, crypto_scalarmult, crypto_scalarmult_base } = require('sodium-universal/crypto_scalarmult')\n\nconst assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst DHLEN = crypto_scalarmult_BYTES\nconst PKLEN = crypto_scalarmult_BYTES\nconst SKLEN = crypto_scalarmult_SCALARBYTES\nconst SEEDLEN = crypto_kx_SEEDBYTES\nconst ALG = '25519'\n\nmodule.exports = {\n  DHLEN,\n  PKLEN,\n  SKLEN,\n  SEEDLEN,\n  ALG,\n  generateKeyPair,\n  generateSeedKeyPair,\n  dh\n}\n\nfunction generateKeyPair (privKey) {\n  const keyPair = {}\n\n  keyPair.secretKey = privKey || b4a.alloc(SKLEN)\n  keyPair.publicKey = b4a.alloc(PKLEN)\n\n  if (privKey) {\n    crypto_scalarmult_base(keyPair.publicKey, keyPair.secretKey)\n  } else {\n    crypto_kx_keypair(keyPair.publicKey, keyPair.secretKey)\n  }\n\n  return keyPair\n}\n\nfunction generateSeedKeyPair (seed) {\n  assert(seed.byteLength === SKLEN)\n\n  const keyPair = {}\n  keyPair.secretKey = b4a.alloc(SKLEN)\n  keyPair.publicKey = b4a.alloc(PKLEN)\n\n  crypto_kx_seed_keypair(keyPair.publicKey, keyPair.secretKey, seed)\n  return keyPair\n}\n\nfunction dh (publicKey, { secretKey }) {\n  assert(secretKey.byteLength === SKLEN)\n  assert(publicKey.byteLength === PKLEN)\n\n  const output = b4a.alloc(DHLEN)\n\n  crypto_scalarmult(\n    output,\n    secretKey,\n    publicKey\n  )\n\n  return output\n}\n","const hmacBlake2b = require('./hmac')\nconst assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst HASHLEN = 64\n\nmodule.exports = {\n  hkdf,\n  HASHLEN\n}\n\nfunction hkdf (salt, inputKeyMaterial, info = '', length = 2 * HASHLEN) {\n  const pseudoRandomKey = hkdfExtract(salt, inputKeyMaterial)\n  const result = hkdfExpand(pseudoRandomKey, info, length)\n\n  const [k1, k2] = [result.slice(0, HASHLEN), result.slice(HASHLEN)]\n\n  return [k1, k2]\n\n  function hkdfExtract (salt, inputKeyMaterial) {\n    return hmacDigest(salt, inputKeyMaterial)\n  }\n\n  function hkdfExpand (key, info, length) {\n    const T = [b4a.from(info)]\n    const lengthRatio = length / HASHLEN\n\n    for (let i = 0; i < lengthRatio; i++) {\n      const infoBuf = b4a.from(info)\n      const toHash = b4a.concat([T[i], infoBuf, b4a.from([i + 1])])\n\n      T[i + 1] = hmacDigest(key, toHash)\n    }\n\n    const result = b4a.concat(T.slice(1))\n    assert(result.byteLength === length, 'key expansion failed, length not as expected')\n\n    return result\n  }\n}\n\nfunction hmacDigest (key, input) {\n  const hmac = b4a.alloc(HASHLEN)\n  hmacBlake2b(hmac, input, key)\n\n  return hmac\n}\n","/* eslint-disable camelcase */\nconst b4a = require('b4a')\nconst { sodium_memzero } = require('sodium-universal/memory')\nconst { crypto_generichash, crypto_generichash_batch } = require('sodium-universal/crypto_generichash')\n\nconst HASHLEN = 64\nconst BLOCKLEN = 128\nconst scratch = b4a.alloc(BLOCKLEN * 3)\nconst HMACKey = scratch.subarray(BLOCKLEN * 0, BLOCKLEN * 1)\nconst OuterKeyPad = scratch.subarray(BLOCKLEN * 1, BLOCKLEN * 2)\nconst InnerKeyPad = scratch.subarray(BLOCKLEN * 2, BLOCKLEN * 3)\n\n// Post-fill is done in the cases where someone caught an exception that\n// happened before we were able to clear data at the end\n\nmodule.exports = function hmac (out, data, key) {\n  if (key.byteLength > BLOCKLEN) {\n    crypto_generichash(HMACKey.subarray(0, HASHLEN), key)\n    sodium_memzero(HMACKey.subarray(HASHLEN))\n  } else {\n    // Covers key <= BLOCKLEN\n    HMACKey.set(key)\n    sodium_memzero(HMACKey.subarray(key.byteLength))\n  }\n\n  for (let i = 0; i < HMACKey.byteLength; i++) {\n    OuterKeyPad[i] = 0x5c ^ HMACKey[i]\n    InnerKeyPad[i] = 0x36 ^ HMACKey[i]\n  }\n  sodium_memzero(HMACKey)\n\n  crypto_generichash_batch(out, [InnerKeyPad].concat(data))\n  sodium_memzero(InnerKeyPad)\n  crypto_generichash_batch(out, [OuterKeyPad].concat(out))\n  sodium_memzero(OuterKeyPad)\n}\n\nmodule.exports.BYTES = HASHLEN\nmodule.exports.KEYBYTES = BLOCKLEN\n","const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst SymmetricState = require('./symmetric-state')\nconst { HASHLEN } = require('./hkdf')\n\nconst PRESHARE_IS = Symbol('initiator static key preshared')\nconst PRESHARE_RS = Symbol('responder static key preshared')\n\nconst TOK_S = Symbol('s')\nconst TOK_E = Symbol('e')\n\nconst TOK_ES = Symbol('es')\nconst TOK_SE = Symbol('se')\nconst TOK_EE = Symbol('ee')\nconst TOK_SS = Symbol('ss')\n\nconst HANDSHAKES = Object.freeze({\n  XX: [\n    [TOK_E],\n    [TOK_E, TOK_EE, TOK_S, TOK_ES],\n    [TOK_S, TOK_SE]\n  ],\n  IK: [\n    PRESHARE_RS,\n    [TOK_E, TOK_ES, TOK_S, TOK_SS],\n    [TOK_E, TOK_EE, TOK_SE]\n  ]\n})\n\nclass Writer {\n  constructor () {\n    this.size = 0\n    this.buffers = []\n  }\n\n  push (b) {\n    this.size += b.byteLength\n    this.buffers.push(b)\n  }\n\n  end () {\n    const all = b4a.alloc(this.size)\n    let offset = 0\n    for (const b of this.buffers) {\n      all.set(b, offset)\n      offset += b.byteLength\n    }\n    return all\n  }\n}\n\nclass Reader {\n  constructor (buf) {\n    this.offset = 0\n    this.buffer = buf\n  }\n\n  shift (n) {\n    const start = this.offset\n    const end = this.offset += n\n    if (end > this.buffer.byteLength) throw new Error('Insufficient bytes')\n    return this.buffer.subarray(start, end)\n  }\n\n  end () {\n    return this.shift(this.buffer.byteLength - this.offset)\n  }\n}\n\nmodule.exports = class NoiseState extends SymmetricState {\n  constructor (pattern, initiator, staticKeypair, opts = {}) {\n    super(opts)\n\n    this.s = staticKeypair || this.curve.generateKeyPair()\n    this.e = null\n\n    this.re = null\n    this.rs = null\n\n    this.pattern = pattern\n    this.handshake = HANDSHAKES[this.pattern].slice()\n\n    this.protocol = b4a.from([\n      'Noise',\n      this.pattern,\n      this.DH_ALG,\n      this.CIPHER_ALG,\n      'BLAKE2b'\n    ].join('_'))\n\n    this.initiator = initiator\n    this.complete = false\n\n    this.rx = null\n    this.tx = null\n    this.hash = null\n  }\n\n  initialise (prologue, remoteStatic) {\n    if (this.protocol.byteLength <= HASHLEN) this.digest.set(this.protocol)\n    else this.mixHash(this.protocol)\n\n    this.chainingKey = b4a.from(this.digest)\n\n    this.mixHash(prologue)\n\n    while (!Array.isArray(this.handshake[0])) {\n      const message = this.handshake.shift()\n\n      // handshake steps should be as arrays, only\n      // preshare tokens are provided otherwise\n      assert(message === PRESHARE_RS || message === PRESHARE_IS,\n        'Unexpected pattern')\n\n      const takeRemoteKey = this.initiator\n        ? message === PRESHARE_RS\n        : message === PRESHARE_IS\n\n      if (takeRemoteKey) this.rs = remoteStatic\n\n      const key = takeRemoteKey ? this.rs : this.s.publicKey\n      assert(key != null, 'Remote pubkey required')\n\n      this.mixHash(key)\n    }\n  }\n\n  final () {\n    const [k1, k2] = this.split()\n\n    this.tx = this.initiator ? k1 : k2\n    this.rx = this.initiator ? k2 : k1\n\n    this.complete = true\n    this.hash = this.getHandshakeHash()\n\n    this._clear()\n  }\n\n  recv (buf) {\n    const r = new Reader(buf)\n\n    for (const pattern of this.handshake.shift()) {\n      switch (pattern) {\n        case TOK_E :\n          this.re = r.shift(this.curve.PKLEN)\n          this.mixHash(this.re)\n          break\n\n        case TOK_S : {\n          const klen = this.hasKey ? this.curve.PKLEN + 16 : this.curve.PKLEN\n          this.rs = this.decryptAndHash(r.shift(klen))\n          break\n        }\n\n        case TOK_EE :\n        case TOK_ES :\n        case TOK_SE :\n        case TOK_SS : {\n          const useStatic = keyPattern(pattern, this.initiator)\n\n          const localKey = useStatic.local ? this.s : this.e\n          const remoteKey = useStatic.remote ? this.rs : this.re\n\n          this.mixKey(remoteKey, localKey)\n          break\n        }\n\n        default :\n          throw new Error('Unexpected message')\n      }\n    }\n\n    const payload = this.decryptAndHash(r.end())\n\n    if (!this.handshake.length) this.final()\n    return payload\n  }\n\n  send (payload = b4a.alloc(0)) {\n    const w = new Writer()\n\n    for (const pattern of this.handshake.shift()) {\n      switch (pattern) {\n        case TOK_E :\n          if (this.e === null) this.e = this.curve.generateKeyPair()\n          this.mixHash(this.e.publicKey)\n          w.push(this.e.publicKey)\n          break\n\n        case TOK_S :\n          w.push(this.encryptAndHash(this.s.publicKey))\n          break\n\n        case TOK_ES :\n        case TOK_SE :\n        case TOK_EE :\n        case TOK_SS : {\n          const useStatic = keyPattern(pattern, this.initiator)\n\n          const localKey = useStatic.local ? this.s : this.e\n          const remoteKey = useStatic.remote ? this.rs : this.re\n\n          this.mixKey(remoteKey, localKey)\n          break\n        }\n\n        default :\n          throw new Error('Unexpected message')\n      }\n    }\n\n    w.push(this.encryptAndHash(payload))\n    const response = w.end()\n\n    if (!this.handshake.length) this.final()\n    return response\n  }\n\n  _clear () {\n    super._clear()\n\n    this.e.secretKey.fill(0)\n    this.e.publicKey.fill(0)\n\n    this.re.fill(0)\n\n    this.e = null\n    this.re = null\n  }\n}\n\nfunction keyPattern (pattern, initiator) {\n  const ret = {\n    local: false,\n    remote: false\n  }\n\n  switch (pattern) {\n    case TOK_EE:\n      return ret\n\n    case TOK_ES:\n      ret.local ^= !initiator\n      ret.remote ^= initiator\n      return ret\n\n    case TOK_SE:\n      ret.local ^= initiator\n      ret.remote ^= !initiator\n      return ret\n\n    case TOK_SS:\n      ret.local ^= 1\n      ret.remote ^= 1\n      return ret\n  }\n}\n","const sodium = require('sodium-universal')\nconst assert = require('nanoassert')\nconst b4a = require('b4a')\nconst CipherState = require('./cipher')\nconst curve = require('./dh')\nconst { HASHLEN, hkdf } = require('./hkdf')\n\nmodule.exports = class SymmetricState extends CipherState {\n  constructor (opts = {}) {\n    super()\n\n    this.curve = opts.curve || curve\n    this.digest = b4a.alloc(HASHLEN)\n    this.chainingKey = null\n    this.offset = 0\n\n    this.DH_ALG = this.curve.ALG\n  }\n\n  mixHash (data) {\n    accumulateDigest(this.digest, data)\n  }\n\n  mixKey (remoteKey, localKey) {\n    const dh = this.curve.dh(remoteKey, localKey)\n    const hkdfResult = hkdf(this.chainingKey, dh)\n    this.chainingKey = hkdfResult[0]\n    this.initialiseKey(hkdfResult[1].subarray(0, 32))\n  }\n\n  encryptAndHash (plaintext) {\n    const ciphertext = this.encrypt(plaintext, this.digest)\n    accumulateDigest(this.digest, ciphertext)\n    return ciphertext\n  }\n\n  decryptAndHash (ciphertext) {\n    const plaintext = this.decrypt(ciphertext, this.digest)\n    accumulateDigest(this.digest, ciphertext)\n    return plaintext\n  }\n\n  getHandshakeHash (out) {\n    if (!out) return this.getHandshakeHash(b4a.alloc(HASHLEN))\n    assert(out.byteLength === HASHLEN, `output must be ${HASHLEN} bytes`)\n\n    out.set(this.digest)\n    return out\n  }\n\n  split () {\n    const res = hkdf(this.chainingKey, b4a.alloc(0))\n    return res.map(k => k.subarray(0, 32))\n  }\n\n  _clear () {\n    super._clear()\n\n    sodium.sodium_memzero(this.digest)\n    sodium.sodium_memzero(this.chainingKey)\n\n    this.digest = null\n    this.chainingKey = null\n    this.offset = null\n\n    this.curve = null\n  }\n\n  static get alg () {\n    return CipherState.alg + '_BLAKE2b'\n  }\n}\n\nfunction accumulateDigest (digest, input) {\n  const toHash = b4a.concat([digest, input])\n  sodium.crypto_generichash(digest, toHash)\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","const b4a = require('b4a')\nconst c = require('compact-encoding')\nconst queueTick = require('queue-tick')\nconst safetyCatch = require('safety-catch')\n\nconst MAX_BUFFERED = 32768\nconst MAX_BACKLOG = Infinity // TODO: impl \"open\" backpressure\nconst MAX_BATCH = 8 * 1024 * 1024\n\nclass Channel {\n  constructor (mux, info, userData, protocol, aliases, id, handshake, messages, onopen, onclose, ondestroy) {\n    this.userData = userData\n    this.protocol = protocol\n    this.aliases = aliases\n    this.id = id\n    this.handshake = null\n    this.messages = []\n\n    this.opened = false\n    this.closed = false\n    this.destroyed = false\n\n    this.onopen = onopen\n    this.onclose = onclose\n    this.ondestroy = ondestroy\n\n    this._handshake = handshake\n    this._mux = mux\n    this._info = info\n    this._localId = 0\n    this._remoteId = 0\n    this._active = 0\n    this._extensions = null\n\n    this._decBound = this._dec.bind(this)\n    this._decAndDestroyBound = this._decAndDestroy.bind(this)\n\n    for (const m of messages) this.addMessage(m)\n  }\n\n  open (handshake) {\n    const id = this._mux._free.length > 0\n      ? this._mux._free.pop()\n      : this._mux._local.push(null) - 1\n\n    this._info.opened++\n    this._localId = id + 1\n    this._mux._local[id] = this\n\n    if (this._remoteId === 0) {\n      this._info.outgoing.push(this._localId)\n    }\n\n    const state = { buffer: null, start: 2, end: 2 }\n\n    c.uint.preencode(state, this._localId)\n    c.string.preencode(state, this.protocol)\n    c.buffer.preencode(state, this.id)\n    if (this._handshake) this._handshake.preencode(state, handshake)\n\n    state.buffer = this._mux._alloc(state.end)\n\n    state.buffer[0] = 0\n    state.buffer[1] = 1\n    c.uint.encode(state, this._localId)\n    c.string.encode(state, this.protocol)\n    c.buffer.encode(state, this.id)\n    if (this._handshake) this._handshake.encode(state, handshake)\n\n    this._mux._write0(state.buffer)\n  }\n\n  _dec () {\n    if (--this._active === 0 && this.closed === true) this._destroy()\n  }\n\n  _decAndDestroy (err) {\n    this._dec()\n    this._mux._safeDestroy(err)\n  }\n\n  _fullyOpenSoon () {\n    this._mux._remote[this._remoteId - 1].session = this\n    queueTick(this._fullyOpen.bind(this))\n  }\n\n  _fullyOpen () {\n    if (this.opened === true || this.closed === true) return\n\n    const remote = this._mux._remote[this._remoteId - 1]\n\n    this.opened = true\n    this.handshake = this._handshake ? this._handshake.decode(remote.state) : null\n    this._track(this.onopen(this.handshake, this))\n\n    remote.session = this\n    remote.state = null\n    if (remote.pending !== null) this._drain(remote)\n  }\n\n  _drain (remote) {\n    for (let i = 0; i < remote.pending.length; i++) {\n      const p = remote.pending[i]\n      this._mux._buffered -= byteSize(p.state)\n      this._recv(p.type, p.state)\n    }\n\n    remote.pending = null\n    this._mux._resumeMaybe()\n  }\n\n  _track (p) {\n    if (isPromise(p) === true) {\n      this._active++\n      p.then(this._decBound, this._decAndDestroyBound)\n    }\n  }\n\n  _close (isRemote) {\n    if (this.closed === true) return\n    this.closed = true\n\n    this._info.opened--\n\n    if (this._remoteId > 0) {\n      this._mux._remote[this._remoteId - 1] = null\n      this._remoteId = 0\n      // If remote has acked, we can reuse the local id now\n      // otherwise, we need to wait for the \"ack\" to arrive\n      this._mux._free.push(this._localId - 1)\n    }\n\n    this._mux._local[this._localId - 1] = null\n    this._localId = 0\n\n    this._mux._gc(this._info)\n    this._track(this.onclose(isRemote, this))\n\n    if (this._active === 0) this._destroy()\n  }\n\n  _destroy () {\n    if (this.destroyed === true) return\n    this.destroyed = true\n    this._track(this.ondestroy(this))\n  }\n\n  _recv (type, state) {\n    if (type < this.messages.length) {\n      this.messages[type].recv(state, this)\n    }\n  }\n\n  cork () {\n    this._mux.cork()\n  }\n\n  uncork () {\n    this._mux.uncork()\n  }\n\n  close () {\n    if (this.closed === true) return\n\n    const state = { buffer: null, start: 2, end: 2 }\n\n    c.uint.preencode(state, this._localId)\n\n    state.buffer = this._mux._alloc(state.end)\n\n    state.buffer[0] = 0\n    state.buffer[1] = 3\n    c.uint.encode(state, this._localId)\n\n    this._close(false)\n    this._mux._write0(state.buffer)\n  }\n\n  addMessage (opts) {\n    if (!opts) return this._skipMessage()\n\n    const type = this.messages.length\n    const encoding = opts.encoding || c.raw\n    const onmessage = opts.onmessage || noop\n\n    const s = this\n    const typeLen = encodingLength(c.uint, type)\n\n    const m = {\n      type,\n      encoding,\n      onmessage,\n      recv (state, session) {\n        session._track(m.onmessage(encoding.decode(state), session))\n      },\n      send (m, session = s) {\n        if (session.closed === true) return false\n\n        const mux = session._mux\n        const state = { buffer: null, start: 0, end: typeLen }\n\n        if (mux._batch !== null) {\n          encoding.preencode(state, m)\n          state.buffer = mux._alloc(state.end)\n\n          c.uint.encode(state, type)\n          encoding.encode(state, m)\n\n          mux._pushBatch(session._localId, state.buffer)\n          return true\n        }\n\n        c.uint.preencode(state, session._localId)\n        encoding.preencode(state, m)\n\n        state.buffer = mux._alloc(state.end)\n\n        c.uint.encode(state, session._localId)\n        c.uint.encode(state, type)\n        encoding.encode(state, m)\n\n        return mux.stream.write(state.buffer)\n      }\n    }\n\n    this.messages.push(m)\n\n    return m\n  }\n\n  _skipMessage () {\n    const type = this.messages.length\n    const m = {\n      type,\n      encoding: c.raw,\n      onmessage: noop,\n      recv (state, session) {},\n      send (m, session) {}\n    }\n\n    this.messages.push(m)\n    return m\n  }\n}\n\nmodule.exports = class Protomux {\n  constructor (stream, { alloc } = {}) {\n    if (stream.userData === null) stream.userData = this\n\n    this.isProtomux = true\n    this.stream = stream\n    this.corked = 0\n\n    this._alloc = alloc || (typeof stream.alloc === 'function' ? stream.alloc.bind(stream) : b4a.allocUnsafe)\n    this._safeDestroyBound = this._safeDestroy.bind(this)\n\n    this._remoteBacklog = 0\n    this._buffered = 0\n    this._paused = false\n    this._remote = []\n    this._local = []\n    this._free = []\n    this._batch = null\n    this._batchState = null\n\n    this._infos = new Map()\n    this._notify = new Map()\n\n    this.stream.on('data', this._ondata.bind(this))\n    this.stream.on('end', this._onend.bind(this))\n    this.stream.on('error', noop) // we handle this in \"close\"\n    this.stream.on('close', this._shutdown.bind(this))\n  }\n\n  static from (stream, opts) {\n    if (stream.userData && stream.userData.isProtomux) return stream.userData\n    if (stream.isProtomux) return stream\n    return new this(stream, opts)\n  }\n\n  static isProtomux (mux) {\n    return typeof mux === 'object' && mux.isProtomux === true\n  }\n\n  * [Symbol.iterator] () {\n    for (const session of this._local) {\n      if (session !== null) yield session\n    }\n  }\n\n  cork () {\n    if (++this.corked === 1) {\n      this._batch = []\n      this._batchState = { buffer: null, start: 0, end: 1 }\n    }\n  }\n\n  uncork () {\n    if (--this.corked === 0) {\n      this._sendBatch(this._batch, this._batchState)\n      this._batch = null\n      this._batchState = null\n    }\n  }\n\n  pair ({ protocol, id = null }, notify) {\n    this._notify.set(toKey(protocol, id), notify)\n  }\n\n  unpair ({ protocol, id = null }) {\n    this._notify.delete(toKey(protocol, id))\n  }\n\n  opened ({ protocol, id = null }) {\n    const key = toKey(protocol, id)\n    const info = this._infos.get(key)\n    return info ? info.opened > 0 : false\n  }\n\n  createChannel ({ userData = null, protocol, aliases = [], id = null, unique = true, handshake = null, messages = [], onopen = noop, onclose = noop, ondestroy = noop }) {\n    if (this.stream.destroyed) return null\n\n    const info = this._get(protocol, id, aliases)\n    if (unique && info.opened > 0) return null\n\n    if (info.incoming.length === 0) {\n      return new Channel(this, info, userData, protocol, aliases, id, handshake, messages, onopen, onclose, ondestroy)\n    }\n\n    this._remoteBacklog--\n\n    const remoteId = info.incoming.shift()\n    const r = this._remote[remoteId - 1]\n    if (r === null) return null\n\n    const session = new Channel(this, info, userData, protocol, aliases, id, handshake, messages, onopen, onclose, ondestroy)\n\n    session._remoteId = remoteId\n    session._fullyOpenSoon()\n\n    return session\n  }\n\n  _pushBatch (localId, buffer) {\n    if (this._batchState.end >= MAX_BATCH) {\n      this._sendBatch(this._batch, this._batchState)\n      this._batch = []\n      this._batchState = { buffer: null, start: 0, end: 1 }\n    }\n\n    if (this._batch.length === 0 || this._batch[this._batch.length - 1].localId !== localId) {\n      this._batchState.end++\n      c.uint.preencode(this._batchState, localId)\n    }\n    c.buffer.preencode(this._batchState, buffer)\n    this._batch.push({ localId, buffer })\n  }\n\n  _sendBatch (batch, state) {\n    if (batch.length === 0) return\n\n    let prev = batch[0].localId\n\n    state.buffer = this._alloc(state.end)\n    state.buffer[state.start++] = 0\n    state.buffer[state.start++] = 0\n\n    c.uint.encode(state, prev)\n\n    for (let i = 0; i < batch.length; i++) {\n      const b = batch[i]\n      if (prev !== b.localId) {\n        state.buffer[state.start++] = 0\n        c.uint.encode(state, (prev = b.localId))\n      }\n      c.buffer.encode(state, b.buffer)\n    }\n\n    this.stream.write(state.buffer)\n  }\n\n  _get (protocol, id, aliases = []) {\n    const key = toKey(protocol, id)\n\n    let info = this._infos.get(key)\n    if (info) return info\n\n    info = { key, protocol, aliases: [], id, pairing: 0, opened: 0, incoming: [], outgoing: [] }\n    this._infos.set(key, info)\n\n    for (const alias of aliases) {\n      const key = toKey(alias, id)\n      info.aliases.push(key)\n\n      this._infos.set(key, info)\n    }\n\n    return info\n  }\n\n  _gc (info) {\n    if (info.opened === 0 && info.outgoing.length === 0 && info.incoming.length === 0) {\n      this._infos.delete(info.key)\n\n      for (const alias of info.aliases) this._infos.delete(alias)\n    }\n  }\n\n  _ondata (buffer) {\n    try {\n      const state = { buffer, start: 0, end: buffer.byteLength }\n      this._decode(c.uint.decode(state), state)\n    } catch (err) {\n      this._safeDestroy(err)\n    }\n  }\n\n  _onend () { // TODO: support half open mode for the users who wants that here\n    this.stream.end()\n  }\n\n  _decode (remoteId, state) {\n    const type = c.uint.decode(state)\n\n    if (remoteId === 0) {\n      this._oncontrolsession(type, state)\n      return\n    }\n\n    const r = remoteId <= this._remote.length ? this._remote[remoteId - 1] : null\n\n    // if the channel is closed ignore - could just be a pipeline message...\n    if (r === null) return\n\n    if (r.pending !== null) {\n      this._bufferMessage(r, type, state)\n      return\n    }\n\n    r.session._recv(type, state)\n  }\n\n  _oncontrolsession (type, state) {\n    switch (type) {\n      case 0:\n        this._onbatch(state)\n        break\n\n      case 1:\n        this._onopensession(state)\n        break\n\n      case 2:\n        this._onrejectsession(state)\n        break\n\n      case 3:\n        this._onclosesession(state)\n        break\n    }\n  }\n\n  _bufferMessage (r, type, { buffer, start, end }) {\n    const state = { buffer, start, end } // copy\n    r.pending.push({ type, state })\n    this._buffered += byteSize(state)\n    this._pauseMaybe()\n  }\n\n  _pauseMaybe () {\n    if (this._paused === true || this._buffered <= MAX_BUFFERED) return\n    this._paused = true\n    this.stream.pause()\n  }\n\n  _resumeMaybe () {\n    if (this._paused === false || this._buffered > MAX_BUFFERED) return\n    this._paused = false\n    this.stream.resume()\n  }\n\n  _onbatch (state) {\n    const end = state.end\n    let remoteId = c.uint.decode(state)\n\n    while (state.end > state.start) {\n      const len = c.uint.decode(state)\n      if (len === 0) {\n        remoteId = c.uint.decode(state)\n        continue\n      }\n      state.end = state.start + len\n      this._decode(remoteId, state)\n      state.start = state.end\n      state.end = end\n    }\n  }\n\n  _onopensession (state) {\n    const remoteId = c.uint.decode(state)\n    const protocol = c.string.decode(state)\n    const id = c.buffer.decode(state)\n\n    // remote tried to open the control session - auto reject for now\n    // as we can use as an explicit control protocol declaration if we need to\n    if (remoteId === 0) {\n      this._rejectSession(0)\n      return\n    }\n\n    const rid = remoteId - 1\n    const info = this._get(protocol, id)\n\n    // allow the remote to grow the ids by one\n    if (this._remote.length === rid) {\n      this._remote.push(null)\n    }\n\n    if (rid >= this._remote.length || this._remote[rid] !== null) {\n      throw new Error('Invalid open message')\n    }\n\n    if (info.outgoing.length > 0) {\n      const localId = info.outgoing.shift()\n      const session = this._local[localId - 1]\n\n      if (session === null) { // we already closed the channel - ignore\n        this._free.push(localId - 1)\n        return\n      }\n\n      this._remote[rid] = { state, pending: null, session: null }\n\n      session._remoteId = remoteId\n      session._fullyOpen()\n      return\n    }\n\n    const copyState = { buffer: state.buffer, start: state.start, end: state.end }\n    this._remote[rid] = { state: copyState, pending: [], session: null }\n\n    if (++this._remoteBacklog > MAX_BACKLOG) {\n      throw new Error('Remote exceeded backlog')\n    }\n\n    info.pairing++\n    info.incoming.push(remoteId)\n\n    this._requestSession(protocol, id, info).catch(this._safeDestroyBound)\n  }\n\n  _onrejectsession (state) {\n    const localId = c.uint.decode(state)\n\n    // TODO: can be done smarter...\n    for (const info of this._infos.values()) {\n      const i = info.outgoing.indexOf(localId)\n      if (i === -1) continue\n\n      info.outgoing.splice(i, 1)\n\n      const session = this._local[localId - 1]\n\n      this._free.push(localId - 1)\n      if (session !== null) session._close(true)\n\n      this._gc(info)\n      return\n    }\n\n    throw new Error('Invalid reject message')\n  }\n\n  _onclosesession (state) {\n    const remoteId = c.uint.decode(state)\n\n    if (remoteId === 0) return // ignore\n\n    const rid = remoteId - 1\n    const r = rid < this._remote.length ? this._remote[rid] : null\n\n    if (r === null) return\n\n    if (r.session !== null) r.session._close(true)\n  }\n\n  async _requestSession (protocol, id, info) {\n    const notify = this._notify.get(toKey(protocol, id)) || this._notify.get(toKey(protocol, null))\n\n    if (notify) await notify(id)\n\n    if (--info.pairing > 0) return\n\n    while (info.incoming.length > 0) {\n      this._rejectSession(info, info.incoming.shift())\n    }\n\n    this._gc(info)\n  }\n\n  _rejectSession (info, remoteId) {\n    if (remoteId > 0) {\n      const r = this._remote[remoteId - 1]\n\n      if (r.pending !== null) {\n        for (let i = 0; i < r.pending.length; i++) {\n          this._buffered -= byteSize(r.pending[i].state)\n        }\n      }\n\n      this._remote[remoteId - 1] = null\n      this._resumeMaybe()\n    }\n\n    const state = { buffer: null, start: 2, end: 2 }\n\n    c.uint.preencode(state, remoteId)\n\n    state.buffer = this._alloc(state.end)\n\n    state.buffer[0] = 0\n    state.buffer[1] = 2\n    c.uint.encode(state, remoteId)\n\n    this._write0(state.buffer)\n  }\n\n  _write0 (buffer) {\n    if (this._batch !== null) {\n      this._pushBatch(0, buffer.subarray(1))\n      return\n    }\n\n    this.stream.write(buffer)\n  }\n\n  destroy (err) {\n    this.stream.destroy(err)\n  }\n\n  _safeDestroy (err) {\n    safetyCatch(err)\n    this.stream.destroy(err)\n  }\n\n  _shutdown () {\n    for (const s of this._local) {\n      if (s !== null) s._close(true)\n    }\n  }\n}\n\nfunction noop () {}\n\nfunction toKey (protocol, id) {\n  return protocol + '##' + (id ? b4a.toString(id, 'hex') : '')\n}\n\nfunction byteSize (state) {\n  return 512 + (state.end - state.start)\n}\n\nfunction isPromise (p) {\n  return !!(p && typeof p.then === 'function')\n}\n\nfunction encodingLength (enc, val) {\n  const state = { buffer: null, start: 0, end: 0 }\n  enc.preencode(state, val)\n  return state.end\n}\n","module.exports = typeof queueMicrotask === 'function' ? queueMicrotask : (fn) => Promise.resolve().then(fn)\n","const simdle = require('simdle-universal')\n\nconst INDEX_LEN = (16 /* root */ + 128 * 16 /* children */) * 2\n\nconst get = exports.get = function get (field, bit) {\n  const n = field.byteLength * 8\n\n  if (bit < 0) bit += n\n  if (bit < 0 || bit >= n) return false\n\n  const m = field.BYTES_PER_ELEMENT * 8\n\n  const offset = bit & (m - 1)\n  const i = (bit - offset) / m\n\n  return (field[i] & (1 << offset)) !== 0\n}\n\nconst set = exports.set = function set (field, bit, value = true) {\n  const n = field.byteLength * 8\n\n  if (bit < 0) bit += n\n  if (bit < 0 || bit >= n) return false\n\n  const m = field.BYTES_PER_ELEMENT * 8\n\n  const offset = bit & (m - 1)\n  const i = (bit - offset) / m\n  const mask = 1 << offset\n\n  if (value) {\n    if ((field[i] & mask) !== 0) return false\n  } else {\n    if ((field[i] & mask) === 0) return false\n  }\n\n  field[i] ^= mask\n\n  return true\n}\n\nexports.fill = function fill (field, value, start = 0, end = field.byteLength * 8) {\n  const n = field.byteLength * 8\n\n  if (start < 0) start += n\n  if (end < 0) end += n\n  if (start < 0 || start >= field.byteLength * 8 || start >= end) return field\n\n  const m = field.BYTES_PER_ELEMENT * 8\n\n  let i, j\n\n  {\n    const offset = start & (m - 1)\n    i = (start - offset) / m\n\n    if (offset !== 0) {\n      let shift = m - offset\n      if (end - start < shift) shift = end - start\n\n      const mask = ((1 << shift) - 1) << offset\n\n      if (value) field[i] |= mask\n      else field[i] &= ~mask\n\n      i++\n    }\n  }\n\n  {\n    const offset = end & (m - 1)\n    j = (end - offset) / m\n\n    if (offset !== 0 && j >= i) {\n      const mask = (1 << offset) - 1\n\n      if (value) field[j] |= mask\n      else field[j] &= ~mask\n    }\n  }\n\n  if (i < j) field.fill(value ? (2 ** m) - 1 : 0, i, j)\n\n  return field\n}\n\nfunction bitOffset (bit, offset) {\n  return !bit ? offset : (INDEX_LEN * 8 / 2) + offset\n}\n\nfunction byteOffset (bit, offset) {\n  return !bit ? offset : (INDEX_LEN / 2) + offset\n}\n\nexports.findFirst = function findFirst (field, value, position = 0) {\n  const n = field.byteLength * 8\n\n  if (position < 0) position += n\n  if (position < 0) position = 0\n  if (position >= n) return -1\n\n  value = !!value\n\n  for (let i = position; i < n; i++) {\n    if (get(field, i) === value) return i\n  }\n\n  return -1\n}\n\nexports.findLast = function findLast (field, value, position = field.byteLength * 8 - 1) {\n  const n = field.byteLength * 8\n\n  if (position < 0) position += n\n  if (position < 0) return -1\n  if (position >= n) position = n - 1\n\n  value = !!value\n\n  for (let i = position; i >= 0; i--) {\n    if (get(field, i) === value) return i\n  }\n\n  return -1\n}\n\nconst Index = exports.Index = class Index {\n  static from (fieldOrChunks) {\n    if (Array.isArray(fieldOrChunks)) {\n      return new SparseIndex(fieldOrChunks)\n    } else {\n      return new DenseIndex(fieldOrChunks)\n    }\n  }\n\n  get byteLength () {\n    return 0\n  }\n\n  constructor () {\n    this.handle = new Uint32Array(INDEX_LEN / 4)\n  }\n\n  skipFirst (value, position = 0) {\n    const n = this.field.byteLength * 8\n\n    if (position < 0) position += n\n    if (position < 0) position = 0\n    if (position >= n) return n - 1\n\n    let i = Math.floor(position / 16384)\n\n    if (i > 127) return position\n\n    while (i <= 127 && get(this.handle, bitOffset(value, i))) {\n      i++\n    }\n\n    if (i === 128) return n - 1\n\n    let k = i * 16384\n    let j = 0\n\n    if (position > k) j = Math.floor((position - k) / 128)\n\n    while (j <= 127 && get(this.handle, bitOffset(value, i * 128 + j + 128))) {\n      j++\n      k += 128\n    }\n\n    if (j === 128 && i !== 127) return this.skipFirst(value, (i + 1) * 16384)\n\n    if (k > position) position = k\n\n    return position < n ? position : n - 1\n  }\n\n  skipLast (value, position = this.field.byteLength * 8 - 1) {\n    const n = this.field.byteLength * 8\n\n    if (position < 0) position += n\n    if (position < 0) return 0\n    if (position >= n) position = n - 1\n\n    let i = Math.floor(position / 16384)\n\n    if (i > 127) return position\n\n    while (i >= 0 && get(this.handle, bitOffset(value, i))) {\n      i--\n    }\n\n    if (i === -1) return 0\n\n    let k = ((i + 1) * 16384) - 1\n    let j = 127\n\n    if (position < k) j = Math.floor((k - position) / 128)\n\n    while (j >= 0 && get(this.handle, bitOffset(value, i * 128 + j + 128))) {\n      j--\n      k -= 128\n    }\n\n    if (j === -1 && i !== 0) return this.skipLast(value, i * 16384 - 1)\n\n    if (k < position) position = k\n\n    return position\n  }\n}\n\nclass DenseIndex extends Index {\n  constructor (field) {\n    super()\n    this.field = field\n\n    const m = field.BYTES_PER_ELEMENT\n\n    for (let i = 0; i < 128; i++) {\n      for (let j = 0; j < 128; j++) {\n        const offset = (i * 128 + j) * 16\n        let allz = true\n        let allo = false\n\n        if (offset + 16 <= this.field.byteLength) {\n          const vec = this.field.subarray(offset / m, (offset + 16) / m)\n\n          allz = simdle.allz(vec)\n          allo = simdle.allo(vec)\n        }\n\n        const k = i * 128 + 128 + j\n\n        set(this.handle, bitOffset(false, k), allz)\n        set(this.handle, bitOffset(true, k), allo)\n      }\n\n      {\n        const offset = byteOffset(false, i * 16 + 16) / 4\n        const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n        set(this.handle, bitOffset(false, i), allo)\n      }\n\n      {\n        const offset = byteOffset(true, i * 16 + 16) / 4\n        const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n        set(this.handle, bitOffset(true, i), allo)\n      }\n    }\n  }\n\n  get byteLength () {\n    return this.field.byteLength\n  }\n\n  update (bit) {\n    const n = this.field.byteLength * 8\n\n    if (bit < 0) bit += n\n    if (bit < 0 || bit >= n) return false\n\n    const m = this.field.BYTES_PER_ELEMENT\n\n    const i = Math.floor(bit / 16384)\n    const j = Math.floor(bit / 128)\n\n    const offset = (j * 16) / m\n    const vec = this.field.subarray(offset, offset + (16 / m))\n\n    const allz = simdle.allz(vec)\n    const allo = simdle.allo(vec)\n\n    let changed = false\n\n    if (set(this.handle, bitOffset(false, 128 + j), allz)) {\n      changed = true\n\n      const offset = byteOffset(false, i * 16 + 16) / 4\n      const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n      set(this.handle, bitOffset(false, i), allo)\n    }\n\n    if (set(this.handle, bitOffset(true, 128 + j), allo)) {\n      changed = true\n\n      const offset = byteOffset(true, i * 16 + 16) / 4\n      const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n      set(this.handle, bitOffset(true, i), allo)\n    }\n\n    return changed\n  }\n}\n\nfunction selectChunk (chunks, offset) {\n  for (let i = 0; i < chunks.length; i++) {\n    const next = chunks[i]\n\n    const start = next.offset\n    const end = next.offset + next.field.byteLength\n\n    if (offset >= start && offset + 16 <= end) {\n      return next\n    }\n  }\n\n  return null\n}\n\nclass SparseIndex extends Index {\n  constructor (chunks) {\n    super()\n    this.chunks = chunks\n\n    for (let i = 0; i < 128; i++) {\n      for (let j = 0; j < 128; j++) {\n        const offset = (i * 128 + j) * 16\n        let allz = true\n        let allo = false\n\n        const chunk = selectChunk(this.chunks, offset)\n\n        if (chunk !== null) {\n          const m = chunk.field.BYTES_PER_ELEMENT\n\n          const vec = chunk.field.subarray((offset - chunk.offset) / m, (offset - chunk.offset + 16) / m)\n\n          allz = simdle.allz(vec)\n          allo = simdle.allo(vec)\n        }\n\n        const k = i * 128 + 128 + j\n\n        set(this.handle, bitOffset(false, k), allz)\n        set(this.handle, bitOffset(true, k), allo)\n      }\n\n      {\n        const offset = byteOffset(false, i * 16 + 16) / 4\n        const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n        set(this.handle, bitOffset(false, i), allo)\n      }\n\n      {\n        const offset = byteOffset(true, i * 16 + 16) / 4\n        const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n        set(this.handle, bitOffset(true, i), allo)\n      }\n    }\n  }\n\n  get byteLength () {\n    const last = this.chunks[this.chunks.length - 1]\n    return last ? last.offset + last.field.byteLength : 0\n  }\n\n  update (bit) {\n    if (this.chunks.length === 0) return false\n\n    const last = this.chunks[this.chunks.length - 1]\n\n    const n = (last.offset + last.field.byteLength) * 8\n\n    if (bit < 0) bit += n\n    if (bit < 0 || bit >= n) return false\n\n    const i = Math.floor(bit / 16384)\n    const j = Math.floor(bit / 128)\n\n    const offset = j * 16\n\n    const chunk = selectChunk(this.chunks, offset)\n\n    if (chunk === null) return false\n\n    const m = chunk.field.BYTES_PER_ELEMENT\n\n    const vec = chunk.field.subarray((offset - chunk.offset) / m, (offset - chunk.offset + 16) / m)\n\n    const allz = simdle.allz(vec)\n    const allo = simdle.allo(vec)\n\n    let changed = false\n\n    if (set(this.handle, bitOffset(false, 128 + j), allz)) {\n      changed = true\n\n      const offset = byteOffset(false, i * 16 + 16) / 4\n      const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n      set(this.handle, bitOffset(false, i), allo)\n    }\n\n    if (set(this.handle, bitOffset(true, 128 + j), allo)) {\n      changed = true\n\n      const offset = byteOffset(true, i * 16 + 16) / 4\n      const allo = simdle.allo(this.handle.subarray(offset, offset + 4))\n\n      set(this.handle, bitOffset(true, i), allo)\n    }\n\n    return changed\n  }\n}\n","module.exports = function () {\n  throw new Error('random-access-file is not supported in the browser')\n}\n","var RandomAccess = require('random-access-storage')\nvar inherits = require('inherits')\nvar nextTick = require('next-tick')\nvar once = require('once')\nvar blocks = require('./lib/blocks.js')\nvar bufferFrom = require('buffer-from')\nvar bufferAlloc = require('buffer-alloc')\n\nvar DELIM = '\\0'\nvar win = typeof window !== 'undefined' ? window\n  : (typeof self !== 'undefined' ? self : {})\n\nmodule.exports = function (dbname, xopts) {\n  if (!xopts) xopts = {}\n  var idb = xopts.idb || (typeof win !== 'undefined'\n    ? win.indexedDB || win.mozIndexedDB\n      || win.webkitIndexedDB || win.msIndexedDB\n    : null)\n  if (!idb) throw new Error('indexedDB not present and not given')\n  var db = null, dbqueue = []\n  if (typeof idb.open === 'function') {\n    var req = idb.open(dbname)\n    req.addEventListener('upgradeneeded', function () {\n      db = req.result\n      db.createObjectStore('data')\n    })\n    req.addEventListener('success', function () {\n      db = req.result\n      dbqueue.forEach(function (cb) { cb(db) })\n      dbqueue = null\n    })\n  } else {\n    db = idb\n  }\n  return function (name, opts) {\n    if (typeof name === 'object') {\n      opts = name\n      name = opts.name\n    }\n\n    if (!opts) opts = {}\n    opts.name = name\n\n    return new Store(Object.assign({ db: getdb }, xopts, opts))\n  }\n  function getdb (cb) {\n    if (db) nextTick(function () { cb(db) })\n    else dbqueue.push(cb)\n  }\n}\n\nfunction Store (opts) {\n  if (!(this instanceof Store)) return new Store(opts)\n  RandomAccess.call(this)\n  if (!opts) opts = {}\n  if (typeof opts === 'string') opts = { name: opts }\n  this.size = opts.size || 4096\n  this.name = opts.name\n  this.length = opts.length || 0\n  this._getdb = opts.db\n}\ninherits(Store, RandomAccess)\n\nStore.prototype._blocks = function (i, j) {\n  return blocks(this.size, i, j)\n}\n\nStore.prototype._read = function (req) {\n  var self = this\n  var buffers = []\n  self._store('readonly', function (err, store) {\n    if ((self.length || 0) < req.offset+req.size) {\n      return req.callback(new Error('Could not satisfy length'))\n    }\n    if (err) return req.callback(err)\n    var offsets = self._blocks(req.offset, req.offset+req.size)\n    var pending = offsets.length + 1\n    var firstBlock = offsets.length > 0 ? offsets[0].block : 0\n    var j = 0\n    for (var i = 0; i < offsets.length; i++) (function (o) {\n      var key = self.name + DELIM + o.block\n      backify(store.get(key), function (err, ev) {\n        if (err) return req.callback(err)\n        buffers[o.block-firstBlock] = ev.target.result\n          ? bufferFrom(ev.target.result.subarray(o.start,o.end))\n          : bufferAlloc(o.end-o.start)\n        if (--pending === 0) req.callback(null, Buffer.concat(buffers))\n      })\n    })(offsets[i])\n    if (--pending === 0) req.callback(null, Buffer.concat(buffers))\n  })\n}\n\nStore.prototype._write = function (req) {\n  var self = this\n  self._store('readwrite', function (err, store) {\n    if (err) return req.callback(err)\n    var offsets = self._blocks(req.offset, req.offset + req.data.length)\n    var pending = 1\n    var buffers = {}\n    for (var i = 0; i < offsets.length; i++) (function (o,i) {\n      if (o.end-o.start === self.size) return\n      pending++\n      var key = self.name + DELIM + o.block\n      backify(store.get(key), function (err, ev) {\n        if (err) return req.callback(err)\n        buffers[i] = bufferFrom(ev.target.result || bufferAlloc(self.size))\n        if (--pending === 0) write(store, offsets, buffers)\n      })\n    })(offsets[i],i)\n    if (--pending === 0) write(store, offsets, buffers)\n  })\n  function write (store, offsets, buffers) {\n    var block\n    for (var i = 0, j = 0; i < offsets.length; i++) {\n      var o = offsets[i]\n      var len = o.end - o.start\n      if (len === self.size) {\n        block = bufferFrom(req.data.slice(j, j+len))\n      } else {\n        block = buffers[i]\n        req.data.copy(block, o.start, j, j+len)\n      }\n      store.put(block,self.name + DELIM + o.block)\n      j += len\n    }\n    var length = Math.max(self.length || 0, req.offset + req.data.length)\n    store.put(length, self.name + DELIM + 'length')\n    store.transaction.addEventListener('complete', function () {\n      self.length = length\n      req.callback(null)\n    })\n    store.transaction.addEventListener('error', function (err) {\n      req.callback(err)\n    })\n  }\n}\n\nStore.prototype._store = function (mode, cb) {\n  cb = once(cb)\n  var self = this\n  self._getdb(function (db) {\n    var tx = db.transaction(['data'], mode)\n    var store = tx.objectStore('data')\n    tx.addEventListener('error', cb)\n    cb(null, store)\n  })\n}\n\nStore.prototype._open = function (req) {\n  var self = this\n  this._getdb(function(db) {\n    self._store('readonly', function (err, store) {\n      backify(store.get(self.name + DELIM + \"length\"), function(err, ev) {\n        self.length = ev.target.result || 0\n        req.callback(null)\n      })\n    })\n  })\n}\n\nStore.prototype._close = function (req) {\n  this._getdb(function (db) {\n    // db.close() // TODO: reopen gracefully. Close breaks with corestore, as innercorestore closes the db\n    req.callback()\n  })\n}\n\nStore.prototype._stat = function (req) {\n  var self = this\n  nextTick(function () {\n    req.callback(null, { size: self.length })\n  })\n}\n\nfunction backify (r, cb) {\n  r.addEventListener('success', function (ev) { cb(null, ev) })\n  r.addEventListener('error', cb)\n}\n","module.exports = function (size, start, end) {\n  var result = []\n  for (var n = Math.floor(start/size)*size; n < end; n += size) {\n    result.push({\n      block: Math.floor(n/size),\n      start: Math.max(n,start) % size,\n      end: Math.min(n+size,end) % size || size\n    })\n  }\n  return result\n}\n","var toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n","const RandomAccess = require('random-access-storage')\nconst isOptions = require('is-options')\nconst b4a = require('b4a')\n\nconst DEFAULT_PAGE_SIZE = 1024 * 1024\n\nmodule.exports = class RAM extends RandomAccess {\n  constructor (opts) {\n    super()\n\n    if (typeof opts === 'number') opts = { length: opts }\n    if (!opts) opts = {}\n\n    if (b4a.isBuffer(opts)) {\n      opts = { length: opts.length, buffer: opts }\n    }\n    if (!isOptions(opts)) opts = {}\n\n    this.length = opts.length || 0\n    this.pageSize = opts.length || opts.pageSize || DEFAULT_PAGE_SIZE\n    this.buffers = []\n\n    if (opts.buffer) this.buffers.push(opts.buffer)\n  }\n\n  _stat (req) {\n    const st = {\n      size: this.length,\n      blksize: this.pageSize,\n      blocks: 0\n    }\n\n    for (let i = 0; i < this.buffers.length; i++) {\n      if (this.buffers[i]) st.blocks += this.buffers[i].byteLength / 512\n    }\n\n    req.callback(null, st)\n  }\n\n  _write (req) {\n    let i = Math.floor(req.offset / this.pageSize)\n    let rel = req.offset - i * this.pageSize\n    let start = 0\n\n    const len = req.offset + req.size\n    if (len > this.length) this.length = len\n\n    while (start < req.size) {\n      const page = this._page(i++, true)\n      const free = this.pageSize - rel\n      const end = free < (req.size - start)\n        ? start + free\n        : req.size\n\n      b4a.copy(req.data, page, rel, start, end)\n      start = end\n      rel = 0\n    }\n\n    req.callback(null, null)\n  }\n\n  _read (req) {\n    let i = Math.floor(req.offset / this.pageSize)\n    let rel = req.offset - i * this.pageSize\n    let start = 0\n\n    if (req.offset + req.size > this.length) {\n      return req.callback(new Error('Could not satisfy length'), null)\n    }\n\n    const data = b4a.alloc(req.size)\n\n    while (start < req.size) {\n      const page = this._page(i++, false)\n      const avail = this.pageSize - rel\n      const wanted = req.size - start\n      const len = avail < wanted ? avail : wanted\n\n      if (page) b4a.copy(page, data, start, rel, rel + len)\n      start += len\n      rel = 0\n    }\n\n    req.callback(null, data)\n  }\n\n  _del (req) {\n    let i = Math.floor(req.offset / this.pageSize)\n    let rel = req.offset - i * this.pageSize\n    let start = 0\n\n    if (rel && req.offset + req.size >= this.length) {\n      const buf = this.buffers[i]\n      if (buf) buf.fill(0, rel)\n    }\n\n    if (req.offset + req.size > this.length) {\n      req.size = Math.max(0, this.length - req.offset)\n    }\n\n    while (start < req.size) {\n      if (rel === 0 && req.size - start >= this.pageSize) {\n        this.buffers[i] = undefined\n      }\n\n      rel = 0\n      i += 1\n      start += this.pageSize - rel\n    }\n\n    if (req.offset + req.size >= this.length) {\n      this.length = req.offset\n    }\n\n    req.callback(null, null)\n  }\n\n  _unlink (req) {\n    this._buffers = []\n    this.length = 0\n    req.callback(null, null)\n  }\n\n  _page (i, upsert) {\n    let page = this.buffers[i]\n    if (page || !upsert) return page\n    page = this.buffers[i] = b4a.alloc(this.pageSize)\n    return page\n  }\n\n  toBuffer () {\n    const buf = b4a.alloc(this.length)\n\n    for (let i = 0; i < this.buffers.length; i++) {\n      if (this.buffers[i]) b4a.copy(this.buffers[i], buf, i * this.pageSize)\n    }\n\n    return buf\n  }\n\n  clone () {\n    const ram = new RAM()\n    ram.length = this.length\n    ram.pageSize = this.pageSize\n    ram.buffers = this.buffers.map((buffer) => b4a.from(buffer))\n    return ram\n  }\n}\n","const EventEmitter = require('events')\nconst queueTick = require('queue-tick')\n\nconst NOT_READABLE = defaultImpl(new Error('Not readable'))\nconst NOT_WRITABLE = defaultImpl(new Error('Not writable'))\nconst NOT_DELETABLE = defaultImpl(new Error('Not deletable'))\nconst NOT_STATABLE = defaultImpl(new Error('Not statable'))\n\nconst DEFAULT_OPEN = defaultImpl(null)\nconst DEFAULT_CLOSE = defaultImpl(null)\nconst DEFAULT_UNLINK = defaultImpl(null)\n\n// NON_BLOCKING_OPS\nconst READ_OP = 0\nconst WRITE_OP = 1\nconst DEL_OP = 2\nconst TRUNCATE_OP = 3\nconst STAT_OP = 4\n\n// BLOCKING_OPS\nconst OPEN_OP = 5\nconst SUSPEND_OP = 6\nconst CLOSE_OP = 7\nconst UNLINK_OP = 8\n\nmodule.exports = class RandomAccessStorage extends EventEmitter {\n  constructor (opts) {\n    super()\n\n    this._queued = []\n    this._pending = 0\n    this._needsOpen = true\n\n    this.opened = false\n    this.suspended = false\n    this.closed = false\n    this.unlinked = false\n    this.writing = false\n\n    if (opts) {\n      if (opts.open) this._open = opts.open\n      if (opts.read) this._read = opts.read\n      if (opts.write) this._write = opts.write\n      if (opts.del) this._del = opts.del\n      if (opts.truncate) this._truncate = opts.truncate\n      if (opts.stat) this._stat = opts.stat\n      if (opts.suspend) this._suspend = opts.suspend\n      if (opts.close) this._close = opts.close\n      if (opts.unlink) this._unlink = opts.unlink\n    }\n\n    this.readable = this._read !== RandomAccessStorage.prototype._read\n    this.writable = this._write !== RandomAccessStorage.prototype._write\n    this.deletable = this._del !== RandomAccessStorage.prototype._del\n    this.truncatable = this._truncate !== RandomAccessStorage.prototype._truncate || this.deletable\n    this.statable = this._stat !== RandomAccessStorage.prototype._stat\n  }\n\n  read (offset, size, cb) {\n    this.run(new Request(this, READ_OP, offset, size, null, cb), false)\n  }\n\n  _read (req) {\n    return NOT_READABLE(req)\n  }\n\n  write (offset, data, cb) {\n    if (!cb) cb = noop\n    this.run(new Request(this, WRITE_OP, offset, data.length, data, cb), true)\n  }\n\n  _write (req) {\n    return NOT_WRITABLE(req)\n  }\n\n  del (offset, size, cb) {\n    if (!cb) cb = noop\n    this.run(new Request(this, DEL_OP, offset, size, null, cb), true)\n  }\n\n  _del (req) {\n    return NOT_DELETABLE(req)\n  }\n\n  truncate (offset, cb) {\n    if (!cb) cb = noop\n    this.run(new Request(this, TRUNCATE_OP, offset, 0, null, cb), true)\n  }\n\n  _truncate (req) {\n    req.size = Infinity\n    this._del(req)\n  }\n\n  stat (cb) {\n    this.run(new Request(this, STAT_OP, 0, 0, null, cb), false)\n  }\n\n  _stat (req) {\n    return NOT_STATABLE(req)\n  }\n\n  open (cb) {\n    if (!cb) cb = noop\n    if (this.opened && !this._needsOpen) return nextTickCallback(cb)\n    this._needsOpen = false\n    queueAndRun(this, new Request(this, OPEN_OP, 0, 0, null, cb))\n  }\n\n  _open (req) {\n    return DEFAULT_OPEN(req)\n  }\n\n  suspend (cb) {\n    if (!cb) cb = noop\n    if (this.closed || this.suspended) return nextTickCallback(cb)\n    this._needsOpen = true\n    queueAndRun(this, new Request(this, SUSPEND_OP, 0, 0, null, cb))\n  }\n\n  _suspend (req) {\n    this._close(req)\n  }\n\n  close (cb) {\n    if (!cb) cb = noop\n    if (this.closed) return nextTickCallback(cb)\n    queueAndRun(this, new Request(this, CLOSE_OP, 0, 0, null, cb))\n  }\n\n  _close (req) {\n    return DEFAULT_CLOSE(req)\n  }\n\n  unlink (cb) {\n    if (!cb) cb = noop\n    if (!this.closed) this.close(noop)\n    queueAndRun(this, new Request(this, UNLINK_OP, 0, 0, null, cb))\n  }\n\n  _unlink (req) {\n    return DEFAULT_UNLINK(req)\n  }\n\n  run (req, writing) {\n    if (writing && !this.writing) {\n      this.writing = true\n      this._needsOpen = true\n    }\n\n    if (this._needsOpen) this.open(noop)\n    if (this._queued.length) this._queued.push(req)\n    else req._run()\n  }\n}\n\nclass Request {\n  constructor (self, type, offset, size, data, cb) {\n    this.type = type\n    this.offset = offset\n    this.size = size\n    this.data = data\n    this.storage = self\n\n    this._sync = false\n    this._callback = cb\n    this._openError = null\n  }\n\n  _maybeOpenError (err) {\n    if (this.type !== OPEN_OP) return\n    const queued = this.storage._queued\n    for (let i = 1; i < queued.length; i++) {\n      const q = queued[i]\n      if (q.type === OPEN_OP) break\n      q._openError = err\n    }\n  }\n\n  _unqueue (err) {\n    const ra = this.storage\n    const queued = ra._queued\n\n    if (err) {\n      this._maybeOpenError(err)\n    } else if (this.type > 4) {\n      switch (this.type) {\n        case OPEN_OP:\n          if (ra.suspended) {\n            ra.suspended = false\n            ra.emit('unsuspend')\n          }\n          if (!ra.opened) {\n            ra.opened = true\n            ra.emit('open')\n          }\n          break\n\n        case SUSPEND_OP:\n          if (!ra.suspended) {\n            ra.suspended = true\n            ra.emit('suspend')\n          }\n          break\n\n        case CLOSE_OP:\n          if (!ra.closed) {\n            ra.closed = true\n            ra.emit('close')\n          }\n          break\n\n        case UNLINK_OP:\n          if (!ra.unlinked) {\n            ra.unlinked = true\n            ra.emit('unlink')\n          }\n          break\n      }\n    }\n\n    if (queued.length && queued[0] === this) queued.shift()\n\n    if (!--ra._pending) drainQueue(ra)\n  }\n\n  callback (err, val) {\n    if (this._sync) return nextTick(this, err, val)\n    this._unqueue(err)\n    this._callback(err, val)\n  }\n\n  _openAndNotClosed () {\n    const ra = this.storage\n    if (ra.opened && !ra.closed) return true\n    if (!ra.opened) nextTick(this, this._openError || new Error('Not opened'))\n    else if (ra.closed) nextTick(this, new Error('Closed'))\n    return false\n  }\n\n  _open () {\n    const ra = this.storage\n\n    if (ra.opened && !ra.suspended) return nextTick(this, null)\n    if (ra.closed) return nextTick(this, new Error('Closed'))\n\n    ra._open(this)\n  }\n\n  _run () {\n    const ra = this.storage\n    ra._pending++\n\n    this._sync = true\n\n    switch (this.type) {\n      case READ_OP:\n        if (this._openAndNotClosed()) ra._read(this)\n        break\n\n      case WRITE_OP:\n        if (this._openAndNotClosed()) ra._write(this)\n        break\n\n      case DEL_OP:\n        if (this._openAndNotClosed()) ra._del(this)\n        break\n\n      case TRUNCATE_OP:\n        if (this._openAndNotClosed()) ra._truncate(this)\n        break\n\n      case STAT_OP:\n        if (this._openAndNotClosed()) ra._stat(this)\n        break\n\n      case OPEN_OP:\n        this._open()\n        break\n\n      case SUSPEND_OP:\n        if (ra.closed || !ra.opened || ra.suspended) nextTick(this, null)\n        else ra._suspend(this)\n        break\n\n      case CLOSE_OP:\n        if (ra.closed || !ra.opened || ra.suspended) nextTick(this, null)\n        else ra._close(this)\n        break\n\n      case UNLINK_OP:\n        if (ra.unlinked) nextTick(this, null)\n        else ra._unlink(this)\n        break\n    }\n\n    this._sync = false\n  }\n}\n\nfunction queueAndRun (self, req) {\n  self._queued.push(req)\n  if (!self._pending) req._run()\n}\n\nfunction drainQueue (self) {\n  const queued = self._queued\n\n  while (queued.length > 0) {\n    const blocking = queued[0].type > 4\n    if (!blocking || !self._pending) queued[0]._run()\n    if (blocking) return\n    queued.shift()\n  }\n}\n\nfunction defaultImpl (err) {\n  return overridable\n\n  function overridable (req) {\n    nextTick(req, err)\n  }\n}\n\nfunction nextTick (req, err, val) {\n  queueTick(() => req.callback(err, val))\n}\n\nfunction nextTickCallback (cb) {\n  queueTick(() => cb(null))\n}\n\nfunction noop () {}\n","var events = require('events')\nvar inherits = require('inherits')\nvar queueTick = require('queue-tick')\n\nvar NOT_READABLE = defaultImpl(new Error('Not readable'))\nvar NOT_WRITABLE = defaultImpl(new Error('Not writable'))\nvar NOT_DELETABLE = defaultImpl(new Error('Not deletable'))\nvar NOT_STATABLE = defaultImpl(new Error('Not statable'))\nvar NO_OPEN_READABLE = defaultImpl(new Error('No readonly open'))\n\n// NON_BLOCKING_OPS\nvar READ_OP = 0\nvar WRITE_OP = 1\nvar DEL_OP = 2\nvar STAT_OP = 3\n\n// BLOCKING_OPS\nvar OPEN_OP = 4\nvar CLOSE_OP = 5\nvar DESTROY_OP = 6\n\nmodule.exports = RandomAccess\n\nfunction RandomAccess (opts) {\n  if (!(this instanceof RandomAccess)) return new RandomAccess(opts)\n  events.EventEmitter.call(this)\n\n  this._queued = []\n  this._pending = 0\n  this._needsOpen = true\n\n  this.opened = false\n  this.closed = false\n  this.destroyed = false\n\n  if (opts) {\n    if (opts.openReadonly) this._openReadonly = opts.openReadonly\n    if (opts.open) this._open = opts.open\n    if (opts.read) this._read = opts.read\n    if (opts.write) this._write = opts.write\n    if (opts.del) this._del = opts.del\n    if (opts.stat) this._stat = opts.stat\n    if (opts.close) this._close = opts.close\n    if (opts.destroy) this._destroy = opts.destroy\n  }\n\n  this.preferReadonly = this._openReadonly !== NO_OPEN_READABLE\n  this.readable = this._read !== NOT_READABLE\n  this.writable = this._write !== NOT_WRITABLE\n  this.deletable = this._del !== NOT_DELETABLE\n  this.statable = this._stat !== NOT_STATABLE\n}\n\ninherits(RandomAccess, events.EventEmitter)\n\nRandomAccess.prototype.read = function (offset, size, cb) {\n  this.run(new Request(this, READ_OP, offset, size, null, cb))\n}\n\nRandomAccess.prototype._read = NOT_READABLE\n\nRandomAccess.prototype.write = function (offset, data, cb) {\n  if (!cb) cb = noop\n  openWritable(this)\n  this.run(new Request(this, WRITE_OP, offset, data.length, data, cb))\n}\n\nRandomAccess.prototype._write = NOT_WRITABLE\n\nRandomAccess.prototype.del = function (offset, size, cb) {\n  if (!cb) cb = noop\n  openWritable(this)\n  this.run(new Request(this, DEL_OP, offset, size, null, cb))\n}\n\nRandomAccess.prototype._del = NOT_DELETABLE\n\nRandomAccess.prototype.stat = function (cb) {\n  this.run(new Request(this, STAT_OP, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._stat = NOT_STATABLE\n\nRandomAccess.prototype.open = function (cb) {\n  if (!cb) cb = noop\n  if (this.opened && !this._needsOpen) return queueTick(() => cb(null))\n  queueAndRun(this, new Request(this, OPEN_OP, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._open = defaultImpl(null)\nRandomAccess.prototype._openReadonly = NO_OPEN_READABLE\n\nRandomAccess.prototype.close = function (cb) {\n  if (!cb) cb = noop\n  if (this.closed) return queueTick(() => cb(null))\n  queueAndRun(this, new Request(this, CLOSE_OP, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._close = defaultImpl(null)\n\nRandomAccess.prototype.destroy = function (cb) {\n  if (!cb) cb = noop\n  if (!this.closed) this.close(noop)\n  queueAndRun(this, new Request(this, DESTROY_OP, 0, 0, null, cb))\n}\n\nRandomAccess.prototype._destroy = defaultImpl(null)\n\nRandomAccess.prototype.run = function (req) {\n  if (this._needsOpen) this.open(noop)\n  if (this._queued.length) this._queued.push(req)\n  else req._run()\n}\n\nfunction noop () {}\n\nfunction Request (self, type, offset, size, data, cb) {\n  this.type = type\n  this.offset = offset\n  this.data = data\n  this.size = size\n  this.storage = self\n\n  this._sync = false\n  this._callback = cb\n  this._openError = null\n}\n\nRequest.prototype._maybeOpenError = function (err) {\n  if (this.type !== OPEN_OP) return\n  var queued = this.storage._queued\n  for (var i = 0; i < queued.length; i++) queued[i]._openError = err\n}\n\nRequest.prototype._unqueue = function (err) {\n  var ra = this.storage\n  var queued = ra._queued\n\n  if (!err) {\n    switch (this.type) {\n      case OPEN_OP:\n        if (!ra.opened) {\n          ra.opened = true\n          ra.emit('open')\n        }\n        break\n\n      case CLOSE_OP:\n        if (!ra.closed) {\n          ra.closed = true\n          ra.emit('close')\n        }\n        break\n\n      case DESTROY_OP:\n        if (!ra.destroyed) {\n          ra.destroyed = true\n          ra.emit('destroy')\n        }\n        break\n    }\n  } else {\n    this._maybeOpenError(err)\n  }\n\n  if (queued.length && queued[0] === this) queued.shift()\n\n  if (!--ra._pending) drainQueue(ra)\n}\n\nRequest.prototype.callback = function (err, val) {\n  if (this._sync) return nextTick(this, err, val)\n  this._unqueue(err)\n  this._callback(err, val)\n}\n\nRequest.prototype._openAndNotClosed = function () {\n  var ra = this.storage\n  if (ra.opened && !ra.closed) return true\n  if (!ra.opened) nextTick(this, this._openError || new Error('Not opened'))\n  else if (ra.closed) nextTick(this, new Error('Closed'))\n  return false\n}\n\nRequest.prototype._open = function () {\n  var ra = this.storage\n\n  if (ra.opened && !ra._needsOpen) return nextTick(this, null)\n  if (ra.closed) return nextTick(this, new Error('Closed'))\n\n  ra._needsOpen = false\n  if (ra.preferReadonly) ra._openReadonly(this)\n  else ra._open(this)\n}\n\nRequest.prototype._run = function () {\n  var ra = this.storage\n  ra._pending++\n\n  this._sync = true\n\n  switch (this.type) {\n    case READ_OP:\n      if (this._openAndNotClosed()) ra._read(this)\n      break\n\n    case WRITE_OP:\n      if (this._openAndNotClosed()) ra._write(this)\n      break\n\n    case DEL_OP:\n      if (this._openAndNotClosed()) ra._del(this)\n      break\n\n    case STAT_OP:\n      if (this._openAndNotClosed()) ra._stat(this)\n      break\n\n    case OPEN_OP:\n      this._open()\n      break\n\n    case CLOSE_OP:\n      if (ra.closed || !ra.opened) nextTick(this, null)\n      else ra._close(this)\n      break\n\n    case DESTROY_OP:\n      if (ra.destroyed) nextTick(this, null)\n      else ra._destroy(this)\n      break\n  }\n\n  this._sync = false\n}\n\nfunction queueAndRun (self, req) {\n  self._queued.push(req)\n  if (!self._pending) req._run()\n}\n\nfunction drainQueue (self) {\n  var queued = self._queued\n\n  while (queued.length > 0) {\n    var blocking = queued[0].type > 3\n    if (!blocking || !self._pending) queued[0]._run()\n    if (blocking) return\n    queued.shift()\n  }\n}\n\nfunction openWritable (self) {\n  if (self.preferReadonly) {\n    self._needsOpen = true\n    self.preferReadonly = false\n  }\n}\n\nfunction defaultImpl (err) {\n  return overridable\n\n  function overridable (req) {\n    nextTick(req, err)\n  }\n}\n\nfunction nextTick (req, err, val) {\n  queueTick(() => req.callback(err, val))\n}\n","module.exports = class RandomArrayIterator {\n  constructor (values) {\n    this.values = values\n    this.start = 0\n    this.length = this.values.length\n  }\n\n  next () {\n    if (this.length === 0) {\n      if (this.start === 0) return { done: true, value: undefined }\n      this.length = this.start\n      this.start = 0\n    }\n\n    const i = this.start + ((Math.random() * this.length) | 0)\n    const j = this.start + --this.length\n    const value = this.values[i]\n\n    this.values[i] = this.values[j]\n    this.values[j] = value\n\n    return { done: false, value }\n  }\n\n  dequeue () {\n    this.values[this.start + this.length] = this.values[this.values.length - 1]\n    this.values.pop()\n  }\n\n  requeue () {\n    const i = this.start + this.length\n    const value = this.values[i]\n    this.values[i] = this.values[this.start]\n    this.values[this.start++] = value\n  }\n\n  restart () {\n    this.start = 0\n    this.length = this.values.length\n    return this\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n}\n","module.exports = safetyCatch\n\nfunction isActuallyUncaught (err) {\n  if (!err) return false\n  return err instanceof TypeError ||\n    err instanceof SyntaxError ||\n    err instanceof ReferenceError ||\n    err instanceof EvalError ||\n    err instanceof RangeError ||\n    err instanceof URIError ||\n    err.code === 'ERR_ASSERTION'\n}\n\nfunction throwErrorNT (err) {\n  queueMicrotask(() => { throw err })\n}\n\nfunction safetyCatch (err) {\n  if (isActuallyUncaught(err)) {\n    throwErrorNT(err)\n    throw err\n  }\n}\n","const js = require('./sha256.js')\nconst wasm = require('sha256-wasm')\n\nvar Proto = js\n\nmodule.exports = function () {\n  return new Proto()\n}\n\nmodule.exports.ready = function (cb) {\n  wasm.ready(function () { // ignore errors\n    cb()\n  })\n}\n\nmodule.exports.WASM_SUPPORTED = wasm.WASM_SUPPORTED\nmodule.exports.WASM_LOADED = false\n\nvar SHA256_BYTES = module.exports.SHA256_BYTES = 32\n\nwasm.ready(function (err) {\n  if (!err) {\n    module.exports.WASM_LOADED = true\n    module.exports = Proto = wasm\n  }\n})\n","const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nmodule.exports = Sha256\nconst SHA256_BYTES = module.exports.SHA256_BYTES = 32\nconst BLOCKSIZE = 64\n\nconst K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]\n\nfunction expand (a, b, c, d) {\n  var b_ = (((a >>> 17) | (a << 15)) ^ ((a >>> 19) | (a << 13)) ^ (a >>> 10)) + b\n  var d_ = (((c >>> 7) | (c << 25)) ^ ((c >>> 18) | (c << 14)) ^ (c >>> 3)) + d\n\n  return (b_ + d_) << 0\n}\n\nfunction compress (state, words) {\n  // initialise registers\n  var ch, maj, s0, s1, T1, T2\n  var [a, b, c, d, e, f, g, h] = state\n\n  // expand message schedule\n  const w = new Uint32Array(64)\n  for (let i = 0; i < 16; i++) w[i] = bswap(words[i])\n  for (let i = 16; i < 64; i++) w[i] = expand(w[i - 2], w[i - 7], w[i - 15], w[i - 16])\n  for (let i = 0; i < 64; i += 4) round(i)\n\n  state[0] = state[0] + a\n  state[1] = state[1] + b\n  state[2] = state[2] + c\n  state[3] = state[3] + d\n  state[4] = state[4] + e\n  state[5] = state[5] + f\n  state[6] = state[6] + g\n  state[7] = state[7] + h\n\n  function round (n) {\n    ch = (e & f) ^ (~e & g)\n    maj = (a & b) ^ (a & c) ^ (b & c)\n    s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10))\n    s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7))\n    T1 = h + ch + s1 + w[n] + K[n]\n    T2 = s0 + maj\n    h = d + T1\n    d = T1 + T2\n\n    ch = (h & e) ^ (~h & f)\n    maj = (d & a) ^ (d & b) ^ (a & b)\n    s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10))\n    s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7))\n    T1 = g + ch + s1 + w[n + 1] + K[n + 1]\n    T2 = s0 + maj\n    g = c + T1\n    c = T1 + T2\n\n    ch = (g & h) ^ (~g & e)\n    maj = (c & d) ^ (c & a) ^ (d & a)\n    s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10))\n    s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7))\n    T1 = f + ch + s1 + w[n + 2] + K[n + 2]\n    T2 = s0 + maj\n    f = b + T1\n    b = T1 + T2\n\n    ch = (f & g) ^ (~f & h)\n    maj = (b & c) ^ (b & d) ^ (c & d)\n    s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10))\n    s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7))\n    T1 = e + ch + s1 + w[n + 3] + K[n + 3]\n    T2 = s0 + maj\n    e = a + T1\n    a = T1 + T2\n  }\n}\n\nfunction Sha256 () {\n  if (!(this instanceof Sha256)) return new Sha256()\n\n  this.buffer = new ArrayBuffer(64)\n  this.bytesRead = 0\n  this.pos = 0\n  this.digestLength = SHA256_BYTES\n  this.finalised = false\n\n  this.load = new Uint8Array(this.buffer)\n  this.words = new Uint32Array(this.buffer)\n\n  this.state = new Uint32Array([\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n  ])\n\n  return this\n}\n\nSha256.prototype.update = function (input, enc) {\n  assert(this.finalised === false, 'Hash instance finalised')\n\n  var [inputBuf, len] = formatInput(input, enc)\n  var i = 0\n  this.bytesRead += len\n\n  while (len > 0) {\n    this.load.set(inputBuf.subarray(i, i + BLOCKSIZE - this.pos), this.pos)\n    i += BLOCKSIZE - this.pos\n    len -= BLOCKSIZE - this.pos\n\n    if (len < 0) break\n\n    this.pos = 0\n    compress(this.state, this.words)\n  }\n\n  this.pos = this.bytesRead & 0x3f\n  this.load.fill(0, this.pos)\n\n  return this\n}\n\nSha256.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalised === false, 'Hash instance finalised')\n  this.finalised = true\n\n  this.load.fill(0, this.pos)\n  this.load[this.pos] = 0x80\n\n  if (this.pos > 55) {\n    compress(this.state, this.words)\n\n    this.words.fill(0)\n    this.pos = 0\n  }\n\n  const view = new DataView(this.buffer)\n  view.setUint32(56, this.bytesRead / 2 ** 29)\n  view.setUint32(60, this.bytesRead << 3)\n\n  compress(this.state, this.words)\n\n  const resultBuf = new Uint8Array(this.state.map(bswap).buffer)\n\n  if (!enc) {\n    return new Uint8Array(resultBuf)\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  assert(enc instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n  assert(enc.byteLength >= this.digestLength + offset, 'input not large enough for digest')\n\n  for (let i = 0; i < this.digestLength; i++) {\n    enc[i + offset] = resultBuf[i]\n  }\n\n  return enc\n}\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(64)\n  this.inner = Sha256()\n  this.outer = Sha256()\n\n  const keyhash = b4a.alloc(32)\n  if (key.byteLength > 64) {\n    Sha256().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha256.HMAC = HMAC\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\nfunction bswap (a) {\n  var r = ((a & 0x00ff00ff) >>> 8) | ((a & 0x00ff00ff) << 24)\n  var l = ((a & 0xff00ff00) << 8) | ((a & 0xff00ff00) >>> 24)\n\n  return r | l\n}\n","const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst wasm = typeof WebAssembly !== 'undefined' && require('./sha256.js')({\n  imports: {\n    debug: {\n      log (...args) {\n        console.log(...args.map(int => (int >>> 0).toString(16).padStart(8, '0')))\n      },\n      log_tee (arg) {\n        console.log((arg >>> 0).toString(16).padStart(8, '0'))\n        return arg\n      }\n    }\n  }\n})\n\nlet head = 0\nconst freeList = []\n\nmodule.exports = Sha256\nconst SHA256_BYTES = module.exports.SHA256_BYTES = 32\nconst INPUT_OFFSET = 40\nconst STATEBYTES = 108\nconst BLOCKSIZE = 64\n\nfunction Sha256 () {\n  if (!(this instanceof Sha256)) return new Sha256()\n  if (!(wasm)) throw new Error('WASM not loaded. Wait for Sha256.ready(cb)')\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += STATEBYTES // need 100 bytes for internal state\n  }\n\n  this.finalized = false\n  this.digestLength = SHA256_BYTES\n  this.pointer = freeList.pop()\n  this.pos = 0\n\n  this._memory = new Uint8Array(wasm.memory.buffer)\n  this._memory.fill(0, this.pointer, this.pointer + STATEBYTES)\n\n  if (this.pointer + this.digestLength > this._memory.length) this._realloc(this.pointer + STATEBYTES)\n}\n\nSha256.prototype._realloc = function (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - this._memory.length) / 65536)))\n  this._memory = new Uint8Array(wasm.memory.buffer)\n}\n\nSha256.prototype.update = function (input, enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  if (head % 4 !== 0) head += 4 - head % 4\n  assert(head % 4 === 0, 'input shoud be aligned for int32')\n\n  const [inputBuf, length] = formatInput(input, enc)\n\n  assert(inputBuf instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n\n  if (head + length > this._memory.length) this._realloc(head + input.length)\n\n  this._memory.fill(0, head, head + roundUp(length, BLOCKSIZE) - BLOCKSIZE)\n  this._memory.set(inputBuf.subarray(0, BLOCKSIZE - this.pos), this.pointer + INPUT_OFFSET + this.pos)\n  this._memory.set(inputBuf.subarray(BLOCKSIZE - this.pos), head)\n\n  this.pos = (this.pos + length) & 0x3f\n  wasm.sha256(this.pointer, head, length, 0)\n\n  return this\n}\n\nSha256.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  this.finalized = true\n  freeList.push(this.pointer)\n\n  const paddingStart = this.pointer + INPUT_OFFSET + this.pos\n  this._memory.fill(0, paddingStart, this.pointer + INPUT_OFFSET + BLOCKSIZE)\n  wasm.sha256(this.pointer, head, 0, 1)\n\n  const resultBuf = this._memory.subarray(this.pointer, this.pointer + this.digestLength)\n\n  if (!enc) {\n    return resultBuf\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  assert(enc instanceof Uint8Array, 'output must be Uint8Array or Buffer')\n  assert(enc.byteLength >= this.digestLength + offset,\n    \"output must have at least 'SHA256_BYTES' bytes remaining\")\n\n  for (let i = 0; i < this.digestLength; i++) {\n    enc[i + offset] = resultBuf[i]\n  }\n\n  return enc\n}\n\nSha256.WASM = wasm\nSha256.WASM_SUPPORTED = typeof WebAssembly !== 'undefined'\n\nSha256.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n  cb()\n  return Promise.resolve()\n}\n\nSha256.prototype.ready = Sha256.ready\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(64)\n  this.inner = Sha256()\n  this.outer = Sha256()\n\n  const keyhash = b4a.alloc(32)\n  if (key.byteLength > 64) {\n    Sha256().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha256.HMAC = HMAC\n\nfunction noop () {}\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\n// only works for base that is power of 2\nfunction roundUp (n, base) {\n  return (n + base - 1) & -base\n}\n","var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./sha256.wat\nvar require_sha256 = __commonJS({\n  \"wasm-binary:./sha256.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"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\");\n  }\n});\n\n// wasm-module:./sha256.wat\nvar bytes = require_sha256();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n","const js = require('./sha512.js')\nconst wasm = require('sha512-wasm')\n\nvar Proto = js\n\nmodule.exports = function () {\n  return new Proto()\n}\n\nmodule.exports.ready = function (cb) {\n  wasm.ready(function () { // ignore errors\n    cb()\n  })\n}\n\nmodule.exports.WASM_SUPPORTED = wasm.SUPPORTED\nmodule.exports.WASM_LOADED = false\n\nvar SHA512_BYTES = module.exports.SHA512_BYTES = 64\n\nwasm.ready(function (err) {\n  if (!err) {\n    module.exports.WASM_LOADED = true\n    module.exports = Proto = wasm\n  }\n})\n","const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nmodule.exports = Sha512\n\nconst BLOCKSIZE = 128\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nfunction Sha512 () {\n  if (!(this instanceof Sha512)) return new Sha512()\n\n  this.hh = new Int32Array(8)\n  this.hl = new Int32Array(8)\n  this.buffer = new Uint8Array(128)\n  this.finalised = false\n  this.bytesRead = 0\n  this.pos = 0\n\n  this.hh[0] = 0x6a09e667\n  this.hh[1] = 0xbb67ae85\n  this.hh[2] = 0x3c6ef372\n  this.hh[3] = 0xa54ff53a\n  this.hh[4] = 0x510e527f\n  this.hh[5] = 0x9b05688c\n  this.hh[6] = 0x1f83d9ab\n  this.hh[7] = 0x5be0cd19\n\n  this.hl[0] = 0xf3bcc908\n  this.hl[1] = 0x84caa73b\n  this.hl[2] = 0xfe94f82b\n  this.hl[3] = 0x5f1d36f1\n  this.hl[4] = 0xade682d1\n  this.hl[5] = 0x2b3e6c1f\n  this.hl[6] = 0xfb41bd6b\n  this.hl[7] = 0x137e2179\n\n  return this\n}\n\nSha512.prototype.update = function (input, enc) {\n  assert(this.finalised === false, 'Hash instance finalised')\n\n  var [inputBuf, len] = formatInput(input, enc)\n  this.bytesRead += len\n\n  const full = (len + this.pos) & -128\n\n  this.buffer.set(inputBuf.subarray(0, BLOCKSIZE - this.pos), this.pos)\n  const pos = this.pos\n  len -= BLOCKSIZE - this.pos\n\n  if (len >= 0) {\n    compress(this.hh, this.hl, this.buffer, 128)\n    this.pos = 0\n  }\n\n  if (len > 127) {\n    compress(this.hh, this.hl, inputBuf.subarray(BLOCKSIZE - pos, full - pos), full - BLOCKSIZE)\n    len %= 128\n  }\n\n  this.buffer.set(inputBuf.subarray(inputBuf.byteLength - len))\n  this.pos = this.bytesRead & 0x7f\n  this.buffer.fill(0, this.pos)\n\n  return this\n}\n\nSha512.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalised === false, 'Hash instance finalised')\n  this.finalised = true\n\n  this.buffer.fill(0, this.pos)\n  this.buffer[this.pos] = 128\n\n  if (this.pos > 111) {\n    compress(this.hh, this.hl, this.buffer, 128)\n\n    this.buffer.fill(0)\n    this.pos = 0\n  }\n\n  ts64(this.buffer, 120, (this.bytesRead / 0x20000000) | 0, this.bytesRead << 3)\n  compress(this.hh, this.hl, this.buffer, 128)\n\n  if (enc instanceof Uint8Array && enc.byteLength > 63) {\n    for (let i = 0; i < 8; i++) ts64(enc, 8 * i + offset, this.hh[i], this.hl[i])\n    return enc\n  }\n\n  const resultBuf = new Uint8Array(64)\n  for (let i = 0; i < 8; i++) ts64(resultBuf, 8 * i, this.hh[i], this.hl[i])\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  return resultBuf\n}\n\nfunction ts64 (x, i, h, l) {\n  x[i] = (h >> 24) & 0xff\n  x[i + 1] = (h >> 16) & 0xff\n  x[i + 2] = (h >> 8) & 0xff\n  x[i + 3] = h & 0xff\n  x[i + 4] = (l >> 24) & 0xff\n  x[i + 5] = (l >> 16) & 0xff\n  x[i + 6] = (l >> 8) & 0xff\n  x[i + 7] = l & 0xff\n}\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\nfunction compress(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n}\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(128)\n  this.inner = Sha512()\n  this.outer = Sha512()\n\n  const keyhash = b4a.alloc(64)\n  if (key.byteLength > 128) {\n    Sha512().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha512.HMAC = HMAC\n","const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst wasm = typeof WebAssembly !== 'undefined' && require('./sha512.js')({\n  imports: {\n    debug: {\n      log (...args) {\n        console.log(...args.map(int => (int >>> 0).toString(16).padStart(8, '0')))\n      },\n      log_tee (arg) {\n        console.log((arg >>> 0).toString(16).padStart(8, '0'))\n        return arg\n      }\n    }\n  }\n})\n\nlet head = 0\n// assetrt head % 8 === 0 to guarantee alignment\nconst freeList = []\n\nmodule.exports = Sha512\nconst SHA512_BYTES = module.exports.SHA512_BYTES = 64\nconst INPUT_OFFSET = 80\nconst STATEBYTES = 216\nconst BLOCKSIZE = 128\n\nfunction Sha512 () {\n  if (!(this instanceof Sha512)) return new Sha512()\n  if (!(wasm)) throw new Error('WASM not loaded. Wait for Sha512.ready(cb)')\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += STATEBYTES\n  }\n\n  this.finalized = false\n  this.digestLength = SHA512_BYTES\n  this.pointer = freeList.pop()\n  this.pos = 0\n  this.wasm = wasm\n\n  this._memory = new Uint8Array(wasm.memory.buffer)\n  this._memory.fill(0, this.pointer, this.pointer + STATEBYTES)\n\n  if (this.pointer + this.digestLength > this._memory.length) this._realloc(this.pointer + STATEBYTES)\n}\n\nSha512.prototype._realloc = function (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - this._memory.length) / 65536)))\n  this._memory = new Uint8Array(wasm.memory.buffer)\n}\n\nSha512.prototype.update = function (input, enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  if (head % 8 !== 0) head += 8 - head % 8\n  assert(head % 8 === 0, 'input should be aligned for int64')\n\n  const [inputBuf, length] = formatInput(input, enc)\n\n  assert(inputBuf instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n\n  if (head + input.length > this._memory.length) this._realloc(head + input.length)\n\n  this._memory.fill(0, head, head + roundUp(length, BLOCKSIZE) - BLOCKSIZE)\n  this._memory.set(inputBuf.subarray(0, BLOCKSIZE - this.pos), this.pointer + INPUT_OFFSET + this.pos)\n  this._memory.set(inputBuf.subarray(BLOCKSIZE - this.pos), head)\n\n  this.pos = (this.pos + length) & 0x7f\n  wasm.sha512(this.pointer, head, length, 0)\n\n  return this\n}\n\nSha512.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  this.finalized = true\n  freeList.push(this.pointer)\n\n  const paddingStart = this.pointer + INPUT_OFFSET + this.pos\n  this._memory.fill(0, paddingStart, this.pointer + INPUT_OFFSET + BLOCKSIZE)\n  wasm.sha512(this.pointer, head, 0, 1)\n\n  const resultBuf = this._memory.subarray(this.pointer, this.pointer + this.digestLength)\n\n  if (!enc) {\n    return resultBuf\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  assert(enc instanceof Uint8Array, 'output must be Uint8Array or Buffer')\n  assert(enc.byteLength >= this.digestLength + offset,\n    \"output must have at least 'SHA512_BYTES' bytes remaining\")\n\n  for (let i = 0; i < this.digestLength; i++) {\n    enc[i + offset] = resultBuf[i]\n  }\n\n  return enc\n}\n\nSha512.WASM = wasm\nSha512.WASM_SUPPORTED = typeof WebAssembly !== 'undefined'\n\nSha512.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n  cb()\n  return Promise.resolve()\n}\n\nSha512.prototype.ready = Sha512.ready\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(128)\n  this.inner = Sha512()\n  this.outer = Sha512()\n\n  const keyhash = b4a.alloc(64)\n  if (key.byteLength > 128) {\n    Sha512().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha512.HMAC = HMAC\n\nfunction noop () {}\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\n// only works for base that is power of 2\nfunction roundUp (n, base) {\n  return (n + base - 1) & -base\n}\n","var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./sha512.wat\nvar require_sha512 = __commonJS({\n  \"wasm-binary:./sha512.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"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\");\n  }\n});\n\n// wasm-module:./sha512.wat\nvar bytes = require_sha512();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n","const b4a = require('b4a')\nconst scalar = require('./scalar')\n\nfunction view (buf, n) {\n  if (n === buf.BYTES_PER_ELEMENT) return buf\n\n  let TypedArray\n\n  if (n === 1) TypedArray = Uint8Array\n  else if (n === 2) TypedArray = Uint16Array\n  else TypedArray = Uint32Array\n\n  return new TypedArray(buf.buffer, buf.byteOffset, buf.byteLength / n)\n}\n\nfunction unary (u8, u16 = u8, u32 = u16) {\n  return function unary (buf, result = b4a.allocUnsafe(buf.byteLength)) {\n    if (buf.byteLength % 16 !== 0) {\n      throw new Error('Buffer length must be a multiple of 16')\n    }\n\n    if (buf.byteLength !== result.byteLength) {\n      throw new Error('Length of result buffer is insufficient')\n    }\n\n    const n = buf.BYTES_PER_ELEMENT\n\n    if (n === 1) u8(buf, view(result, n))\n    else if (n === 2) u16(buf, view(result, n))\n    else u32(buf, view(result, n))\n\n    return result\n  }\n}\n\nfunction binary (u8, u16 = u8, u32 = u16) {\n  return function binary (a, b, result = b4a.allocUnsafe(a.byteLength)) {\n    if (a.byteLength % 16 !== 0) {\n      throw new Error('Buffer length must be a multiple of 16')\n    }\n\n    if (a.byteLength !== b.byteLength || a.byteLength !== result.byteLength) {\n      throw new Error('Buffers must be the same length')\n    }\n\n    const n = a.BYTES_PER_ELEMENT\n\n    if (n === 1) u8(a, b, view(result, n))\n    else if (n === 2) u16(a, b, view(result, n))\n    else u32(a, b, view(result, n))\n\n    return result\n  }\n}\n\nfunction reduce (u8, u16 = u8, u32 = u16) {\n  return function reduce (buf) {\n    if (buf.byteLength % 16 !== 0) {\n      throw new Error('Buffer length must be a multiple of 16')\n    }\n\n    const n = buf.BYTES_PER_ELEMENT\n\n    if (n === 1) return u8(buf)\n    if (n === 2) return u16(buf)\n    return u32(buf)\n  }\n}\n\nexports.allo = function allo (buf) {\n  if (buf.byteLength % 16 !== 0) {\n    throw new Error('Buffer length must be a multiple of 16')\n  }\n\n  const m = 2 ** (buf.BYTES_PER_ELEMENT * 8) - 1\n\n  for (let i = 0, n = buf.length; i < n; i++) {\n    if (buf[i] !== m) return false\n  }\n\n  return true\n}\n\nexports.allz = function allz (buf) {\n  if (buf.byteLength % 16 !== 0) {\n    throw new Error('Buffer length must be a multiple of 16')\n  }\n\n  for (let i = 0, n = buf.length; i < n; i++) {\n    if (buf[i] !== 0) return false\n  }\n\n  return true\n}\n\nexports.and = binary(\n  (a, b, result) => {\n    for (let i = 0, n = result.length; i < n; i++) {\n      result[i] = a[i] & b[i]\n    }\n  }\n)\n\nexports.clear = binary(\n  (a, b, result) => {\n    for (let i = 0, n = result.length; i < n; i++) {\n      result[i] = a[i] & ~b[i]\n    }\n  }\n)\n\nexports.clo = unary(\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = 24 - scalar.clo(buf[i])\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = 16 - scalar.clo(buf[i])\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = scalar.clo(buf[i])\n    }\n  }\n)\n\nexports.clz = unary(\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = 24 - scalar.clz(buf[i])\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = 16 - scalar.clz(buf[i])\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = scalar.clz(buf[i])\n    }\n  }\n)\n\nexports.cnt = unary(\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = scalar.cnt(buf[i]) & 0xff\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = scalar.cnt(buf[i]) & 0xffff\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = scalar.cnt(buf[i])\n    }\n  }\n)\n\nexports.cto = unary(\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = Math.min(scalar.cto(buf[i]), 8)\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = Math.min(scalar.cto(buf[i]), 16)\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = scalar.cto(buf[i])\n    }\n  }\n)\n\nexports.ctz = unary(\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = Math.min(scalar.ctz(buf[i]), 8)\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = Math.min(scalar.ctz(buf[i]), 16)\n    }\n  },\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = scalar.ctz(buf[i])\n    }\n  }\n)\n\nexports.not = unary(\n  (buf, result) => {\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result[i] = ~buf[i]\n    }\n  }\n)\n\nexports.or = binary(\n  (a, b, result) => {\n    for (let i = 0, n = result.length; i < n; i++) {\n      result[i] = a[i] | b[i]\n    }\n  }\n)\n\nexports.sum = reduce(\n  (buf) => {\n    let result = 0n\n\n    for (let i = 0, n = buf.length; i < n; i++) {\n      result += BigInt(buf[i])\n    }\n\n    return result\n  }\n)\n\nexports.xor = binary(\n  (a, b, result) => {\n    for (let i = 0, n = result.length; i < n; i++) {\n      result[i] = a[i] ^ b[i]\n    }\n  }\n)\n","const clz = exports.clz = function clz (n) {\n  return Math.clz32(n)\n}\n\nexports.clo = function clo (n) {\n  return clz(~n)\n}\n\nconst ctz = exports.ctz = function ctz (n) {\n  return 32 - (n === 0 ? 0 : (clz(n & -n) + 1))\n}\n\nexports.cto = function cto (n) {\n  return ctz(~n)\n}\n\nexports.cnt = function cnt (n) {\n  n = n - ((n >>> 1) & 0x55555555)\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333)\n  n = (n + (n >>> 4)) & 0x0f0f0f0f\n  n = (n * 0x01010101) >>> 24\n  return n\n}\n","(function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var t;t=\"undefined\"==typeof window?\"undefined\"==typeof global?\"undefined\"==typeof self?this:self:global:window,t.SimplePeer=e()}})(function(){var t=Math.floor,n=Math.abs,r=Math.pow;return function(){function d(s,e,n){function t(o,i){if(!e[o]){if(!s[o]){var l=\"function\"==typeof require&&require;if(!i&&l)return l(o,!0);if(r)return r(o,!0);var c=new Error(\"Cannot find module '\"+o+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var a=e[o]={exports:{}};s[o][0].call(a.exports,function(e){var r=s[o][1][e];return t(r||e)},a,a.exports,d,s,e,n)}return e[o].exports}for(var r=\"function\"==typeof require&&require,a=0;a<n.length;a++)t(n[a]);return t}return d}()({1:[function(e,t,n){'use strict';function r(e){var t=e.length;if(0<t%4)throw new Error(\"Invalid string. Length must be a multiple of 4\");var n=e.indexOf(\"=\");-1===n&&(n=t);var r=n===t?0:4-n%4;return[n,r]}function a(e,t,n){return 3*(t+n)/4-n}function o(e){var t,n,o=r(e),d=o[0],s=o[1],l=new p(a(e,d,s)),c=0,f=0<s?d-4:d;for(n=0;n<f;n+=4)t=u[e.charCodeAt(n)]<<18|u[e.charCodeAt(n+1)]<<12|u[e.charCodeAt(n+2)]<<6|u[e.charCodeAt(n+3)],l[c++]=255&t>>16,l[c++]=255&t>>8,l[c++]=255&t;return 2===s&&(t=u[e.charCodeAt(n)]<<2|u[e.charCodeAt(n+1)]>>4,l[c++]=255&t),1===s&&(t=u[e.charCodeAt(n)]<<10|u[e.charCodeAt(n+1)]<<4|u[e.charCodeAt(n+2)]>>2,l[c++]=255&t>>8,l[c++]=255&t),l}function d(e){return c[63&e>>18]+c[63&e>>12]+c[63&e>>6]+c[63&e]}function s(e,t,n){for(var r,a=[],o=t;o<n;o+=3)r=(16711680&e[o]<<16)+(65280&e[o+1]<<8)+(255&e[o+2]),a.push(d(r));return a.join(\"\")}function l(e){for(var t,n=e.length,r=n%3,a=[],o=16383,d=0,l=n-r;d<l;d+=o)a.push(s(e,d,d+o>l?l:d+o));return 1===r?(t=e[n-1],a.push(c[t>>2]+c[63&t<<4]+\"==\")):2===r&&(t=(e[n-2]<<8)+e[n-1],a.push(c[t>>10]+c[63&t>>4]+c[63&t<<2]+\"=\")),a.join(\"\")}n.byteLength=function(e){var t=r(e),n=t[0],a=t[1];return 3*(n+a)/4-a},n.toByteArray=o,n.fromByteArray=l;for(var c=[],u=[],p=\"undefined\"==typeof Uint8Array?Array:Uint8Array,f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",g=0,_=f.length;g<_;++g)c[g]=f[g],u[f.charCodeAt(g)]=g;u[45]=62,u[95]=63},{}],2:[function(){},{}],3:[function(e,t,n){(function(){(function(){/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */'use strict';var t=String.fromCharCode,o=Math.min;function d(e){if(2147483647<e)throw new RangeError(\"The value \\\"\"+e+\"\\\" is invalid for option \\\"size\\\"\");var t=new Uint8Array(e);return t.__proto__=s.prototype,t}function s(e,t,n){if(\"number\"==typeof e){if(\"string\"==typeof t)throw new TypeError(\"The \\\"string\\\" argument must be of type string. Received type number\");return p(e)}return l(e,t,n)}function l(e,t,n){if(\"string\"==typeof e)return f(e,t);if(ArrayBuffer.isView(e))return g(e);if(null==e)throw TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return _(e,t,n);if(\"number\"==typeof e)throw new TypeError(\"The \\\"value\\\" argument must not be of type number. Received type number\");var r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return s.from(r,t,n);var a=h(e);if(a)return a;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof e[Symbol.toPrimitive])return s.from(e[Symbol.toPrimitive](\"string\"),t,n);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e)}function c(e){if(\"number\"!=typeof e)throw new TypeError(\"\\\"size\\\" argument must be of type number\");else if(0>e)throw new RangeError(\"The value \\\"\"+e+\"\\\" is invalid for option \\\"size\\\"\")}function u(e,t,n){return c(e),0>=e?d(e):void 0===t?d(e):\"string\"==typeof n?d(e).fill(t,n):d(e).fill(t)}function p(e){return c(e),d(0>e?0:0|m(e))}function f(e,t){if((\"string\"!=typeof t||\"\"===t)&&(t=\"utf8\"),!s.isEncoding(t))throw new TypeError(\"Unknown encoding: \"+t);var n=0|b(e,t),r=d(n),a=r.write(e,t);return a!==n&&(r=r.slice(0,a)),r}function g(e){for(var t=0>e.length?0:0|m(e.length),n=d(t),r=0;r<t;r+=1)n[r]=255&e[r];return n}function _(e,t,n){if(0>t||e.byteLength<t)throw new RangeError(\"\\\"offset\\\" is outside of buffer bounds\");if(e.byteLength<t+(n||0))throw new RangeError(\"\\\"length\\\" is outside of buffer bounds\");var r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),r.__proto__=s.prototype,r}function h(e){if(s.isBuffer(e)){var t=0|m(e.length),n=d(t);return 0===n.length?n:(e.copy(n,0,0,t),n)}return void 0===e.length?\"Buffer\"===e.type&&Array.isArray(e.data)?g(e.data):void 0:\"number\"!=typeof e.length||X(e.length)?d(0):g(e)}function m(e){if(e>=2147483647)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+2147483647 .toString(16)+\" bytes\");return 0|e}function b(e,t){if(s.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if(\"string\"!=typeof e)throw new TypeError(\"The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. Received type \"+typeof e);var n=e.length,r=2<arguments.length&&!0===arguments[2];if(!r&&0===n)return 0;for(var a=!1;;)switch(t){case\"ascii\":case\"latin1\":case\"binary\":return n;case\"utf8\":case\"utf-8\":return H(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*n;case\"hex\":return n>>>1;case\"base64\":return z(e).length;default:if(a)return r?-1:H(e).length;t=(\"\"+t).toLowerCase(),a=!0;}}function y(e,t,n){var r=!1;if((void 0===t||0>t)&&(t=0),t>this.length)return\"\";if((void 0===n||n>this.length)&&(n=this.length),0>=n)return\"\";if(n>>>=0,t>>>=0,n<=t)return\"\";for(e||(e=\"utf8\");;)switch(e){case\"hex\":return P(this,t,n);case\"utf8\":case\"utf-8\":return x(this,t,n);case\"ascii\":return D(this,t,n);case\"latin1\":case\"binary\":return I(this,t,n);case\"base64\":return A(this,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return M(this,t,n);default:if(r)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase(),r=!0;}}function C(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function R(e,t,n,r,a){if(0===e.length)return-1;if(\"string\"==typeof n?(r=n,n=0):2147483647<n?n=2147483647:-2147483648>n&&(n=-2147483648),n=+n,X(n)&&(n=a?0:e.length-1),0>n&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(0>n)if(a)n=0;else return-1;if(\"string\"==typeof t&&(t=s.from(t,r)),s.isBuffer(t))return 0===t.length?-1:E(e,t,n,r,a);if(\"number\"==typeof t)return t&=255,\"function\"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):E(e,[t],n,r,a);throw new TypeError(\"val must be string, number or Buffer\")}function E(e,t,n,r,a){function o(e,t){return 1===d?e[t]:e.readUInt16BE(t*d)}var d=1,s=e.length,l=t.length;if(void 0!==r&&(r=(r+\"\").toLowerCase(),\"ucs2\"===r||\"ucs-2\"===r||\"utf16le\"===r||\"utf-16le\"===r)){if(2>e.length||2>t.length)return-1;d=2,s/=2,l/=2,n/=2}var c;if(a){var u=-1;for(c=n;c<s;c++)if(o(e,c)!==o(t,-1===u?0:c-u))-1!==u&&(c-=c-u),u=-1;else if(-1===u&&(u=c),c-u+1===l)return u*d}else for(n+l>s&&(n=s-l),c=n;0<=c;c--){for(var p=!0,f=0;f<l;f++)if(o(e,c+f)!==o(t,f)){p=!1;break}if(p)return c}return-1}function w(e,t,n,r){n=+n||0;var a=e.length-n;r?(r=+r,r>a&&(r=a)):r=a;var o=t.length;r>o/2&&(r=o/2);for(var d,s=0;s<r;++s){if(d=parseInt(t.substr(2*s,2),16),X(d))return s;e[n+s]=d}return s}function S(e,t,n,r){return G(H(t,e.length-n),e,n,r)}function T(e,t,n,r){return G(Y(t),e,n,r)}function v(e,t,n,r){return T(e,t,n,r)}function k(e,t,n,r){return G(z(t),e,n,r)}function L(e,t,n,r){return G(V(t,e.length-n),e,n,r)}function A(e,t,n){return 0===t&&n===e.length?$.fromByteArray(e):$.fromByteArray(e.slice(t,n))}function x(e,t,n){n=o(e.length,n);for(var r=[],a=t;a<n;){var d=e[a],s=null,l=239<d?4:223<d?3:191<d?2:1;if(a+l<=n){var c,u,p,f;1===l?128>d&&(s=d):2===l?(c=e[a+1],128==(192&c)&&(f=(31&d)<<6|63&c,127<f&&(s=f))):3===l?(c=e[a+1],u=e[a+2],128==(192&c)&&128==(192&u)&&(f=(15&d)<<12|(63&c)<<6|63&u,2047<f&&(55296>f||57343<f)&&(s=f))):4===l?(c=e[a+1],u=e[a+2],p=e[a+3],128==(192&c)&&128==(192&u)&&128==(192&p)&&(f=(15&d)<<18|(63&c)<<12|(63&u)<<6|63&p,65535<f&&1114112>f&&(s=f))):void 0}null===s?(s=65533,l=1):65535<s&&(s-=65536,r.push(55296|1023&s>>>10),s=56320|1023&s),r.push(s),a+=l}return N(r)}function N(e){var n=e.length;if(n<=4096)return t.apply(String,e);for(var r=\"\",a=0;a<n;)r+=t.apply(String,e.slice(a,a+=4096));return r}function D(e,n,r){var a=\"\";r=o(e.length,r);for(var d=n;d<r;++d)a+=t(127&e[d]);return a}function I(e,n,r){var a=\"\";r=o(e.length,r);for(var d=n;d<r;++d)a+=t(e[d]);return a}function P(e,t,n){var r=e.length;(!t||0>t)&&(t=0),(!n||0>n||n>r)&&(n=r);for(var a=\"\",o=t;o<n;++o)a+=W(e[o]);return a}function M(e,n,r){for(var a=e.slice(n,r),o=\"\",d=0;d<a.length;d+=2)o+=t(a[d]+256*a[d+1]);return o}function O(e,t,n){if(0!=e%1||0>e)throw new RangeError(\"offset is not uint\");if(e+t>n)throw new RangeError(\"Trying to access beyond buffer length\")}function F(e,t,n,r,a,o){if(!s.isBuffer(e))throw new TypeError(\"\\\"buffer\\\" argument must be a Buffer instance\");if(t>a||t<o)throw new RangeError(\"\\\"value\\\" argument is out of bounds\");if(n+r>e.length)throw new RangeError(\"Index out of range\")}function B(e,t,n,r){if(n+r>e.length)throw new RangeError(\"Index out of range\");if(0>n)throw new RangeError(\"Index out of range\")}function U(e,t,n,r,a){return t=+t,n>>>=0,a||B(e,t,n,4,34028234663852886e22,-34028234663852886e22),J.write(e,t,n,r,23,4),n+4}function j(e,t,n,r,a){return t=+t,n>>>=0,a||B(e,t,n,8,17976931348623157e292,-17976931348623157e292),J.write(e,t,n,r,52,8),n+8}function q(e){if(e=e.split(\"=\")[0],e=e.trim().replace(Q,\"\"),2>e.length)return\"\";for(;0!=e.length%4;)e+=\"=\";return e}function W(e){return 16>e?\"0\"+e.toString(16):e.toString(16)}function H(e,t){t=t||1/0;for(var n,r=e.length,a=null,o=[],d=0;d<r;++d){if(n=e.charCodeAt(d),55295<n&&57344>n){if(!a){if(56319<n){-1<(t-=3)&&o.push(239,191,189);continue}else if(d+1===r){-1<(t-=3)&&o.push(239,191,189);continue}a=n;continue}if(56320>n){-1<(t-=3)&&o.push(239,191,189),a=n;continue}n=(a-55296<<10|n-56320)+65536}else a&&-1<(t-=3)&&o.push(239,191,189);if(a=null,128>n){if(0>(t-=1))break;o.push(n)}else if(2048>n){if(0>(t-=2))break;o.push(192|n>>6,128|63&n)}else if(65536>n){if(0>(t-=3))break;o.push(224|n>>12,128|63&n>>6,128|63&n)}else if(1114112>n){if(0>(t-=4))break;o.push(240|n>>18,128|63&n>>12,128|63&n>>6,128|63&n)}else throw new Error(\"Invalid code point\")}return o}function Y(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function V(e,t){for(var n,r,a,o=[],d=0;d<e.length&&!(0>(t-=2));++d)n=e.charCodeAt(d),r=n>>8,a=n%256,o.push(a),o.push(r);return o}function z(e){return $.toByteArray(q(e))}function G(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function X(e){return e!==e}var $=e(\"base64-js\"),J=e(\"ieee754\");n.Buffer=s,n.SlowBuffer=function(e){return+e!=e&&(e=0),s.alloc(+e)},n.INSPECT_MAX_BYTES=50;n.kMaxLength=2147483647,s.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(t){return!1}}(),s.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(s.prototype,\"parent\",{enumerable:!0,get:function(){return s.isBuffer(this)?this.buffer:void 0}}),Object.defineProperty(s.prototype,\"offset\",{enumerable:!0,get:function(){return s.isBuffer(this)?this.byteOffset:void 0}}),\"undefined\"!=typeof Symbol&&null!=Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),s.poolSize=8192,s.from=function(e,t,n){return l(e,t,n)},s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,s.alloc=function(e,t,n){return u(e,t,n)},s.allocUnsafe=function(e){return p(e)},s.allocUnsafeSlow=function(e){return p(e)},s.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==s.prototype},s.compare=function(e,t){if(K(e,Uint8Array)&&(e=s.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=s.from(t,t.offset,t.byteLength)),!s.isBuffer(e)||!s.isBuffer(t))throw new TypeError(\"The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array\");if(e===t)return 0;for(var n=e.length,r=t.length,d=0,l=o(n,r);d<l;++d)if(e[d]!==t[d]){n=e[d],r=t[d];break}return n<r?-1:r<n?1:0},s.isEncoding=function(e){switch((e+\"\").toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1;}},s.concat=function(e,t){if(!Array.isArray(e))throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");if(0===e.length)return s.alloc(0);var n;if(t===void 0)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=s.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var o=e[n];if(K(o,Uint8Array)&&(o=s.from(o)),!s.isBuffer(o))throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");o.copy(r,a),a+=o.length}return r},s.byteLength=b,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var e=this.length;if(0!=e%2)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var t=0;t<e;t+=2)C(this,t,t+1);return this},s.prototype.swap32=function(){var e=this.length;if(0!=e%4)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var t=0;t<e;t+=4)C(this,t,t+3),C(this,t+1,t+2);return this},s.prototype.swap64=function(){var e=this.length;if(0!=e%8)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var t=0;t<e;t+=8)C(this,t,t+7),C(this,t+1,t+6),C(this,t+2,t+5),C(this,t+3,t+4);return this},s.prototype.toString=function(){var e=this.length;return 0===e?\"\":0===arguments.length?x(this,0,e):y.apply(this,arguments)},s.prototype.toLocaleString=s.prototype.toString,s.prototype.equals=function(e){if(!s.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===s.compare(this,e)},s.prototype.inspect=function(){var e=\"\",t=n.INSPECT_MAX_BYTES;return e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim(),this.length>t&&(e+=\" ... \"),\"<Buffer \"+e+\">\"},s.prototype.compare=function(e,t,n,r,a){if(K(e,Uint8Array)&&(e=s.from(e,e.offset,e.byteLength)),!s.isBuffer(e))throw new TypeError(\"The \\\"target\\\" argument must be one of type Buffer or Uint8Array. Received type \"+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),0>t||n>e.length||0>r||a>this.length)throw new RangeError(\"out of range index\");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,a>>>=0,this===e)return 0;for(var d=a-r,l=n-t,c=o(d,l),u=this.slice(r,a),p=e.slice(t,n),f=0;f<c;++f)if(u[f]!==p[f]){d=u[f],l=p[f];break}return d<l?-1:l<d?1:0},s.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},s.prototype.indexOf=function(e,t,n){return R(this,e,t,n,!0)},s.prototype.lastIndexOf=function(e,t,n){return R(this,e,t,n,!1)},s.prototype.write=function(e,t,n,r){if(void 0===t)r=\"utf8\",n=this.length,t=0;else if(void 0===n&&\"string\"==typeof t)r=t,n=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r=\"utf8\")):(r=n,n=void 0);else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");var a=this.length-t;if((void 0===n||n>a)&&(n=a),0<e.length&&(0>n||0>t)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");r||(r=\"utf8\");for(var o=!1;;)switch(r){case\"hex\":return w(this,e,t,n);case\"utf8\":case\"utf-8\":return S(this,e,t,n);case\"ascii\":return T(this,e,t,n);case\"latin1\":case\"binary\":return v(this,e,t,n);case\"base64\":return k(this,e,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return L(this,e,t,n);default:if(o)throw new TypeError(\"Unknown encoding: \"+r);r=(\"\"+r).toLowerCase(),o=!0;}},s.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};s.prototype.slice=function(e,t){var n=this.length;e=~~e,t=t===void 0?n:~~t,0>e?(e+=n,0>e&&(e=0)):e>n&&(e=n),0>t?(t+=n,0>t&&(t=0)):t>n&&(t=n),t<e&&(t=e);var r=this.subarray(e,t);return r.__proto__=s.prototype,r},s.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var r=this[e],a=1,o=0;++o<t&&(a*=256);)r+=this[e+o]*a;return r},s.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var r=this[e+--t],a=1;0<t&&(a*=256);)r+=this[e+--t]*a;return r},s.prototype.readUInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),this[e]},s.prototype.readUInt16LE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]|this[e+1]<<8},s.prototype.readUInt16BE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]<<8|this[e+1]},s.prototype.readUInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},s.prototype.readUInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},s.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var a=this[e],o=1,d=0;++d<t&&(o*=256);)a+=this[e+d]*o;return o*=128,a>=o&&(a-=r(2,8*t)),a},s.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var a=t,o=1,d=this[e+--a];0<a&&(o*=256);)d+=this[e+--a]*o;return o*=128,d>=o&&(d-=r(2,8*t)),d},s.prototype.readInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},s.prototype.readInt16LE=function(e,t){e>>>=0,t||O(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt16BE=function(e,t){e>>>=0,t||O(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},s.prototype.readInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},s.prototype.readFloatLE=function(e,t){return e>>>=0,t||O(e,4,this.length),J.read(this,e,!0,23,4)},s.prototype.readFloatBE=function(e,t){return e>>>=0,t||O(e,4,this.length),J.read(this,e,!1,23,4)},s.prototype.readDoubleLE=function(e,t){return e>>>=0,t||O(e,8,this.length),J.read(this,e,!0,52,8)},s.prototype.readDoubleBE=function(e,t){return e>>>=0,t||O(e,8,this.length),J.read(this,e,!1,52,8)},s.prototype.writeUIntLE=function(e,t,n,a){if(e=+e,t>>>=0,n>>>=0,!a){var o=r(2,8*n)-1;F(this,e,t,n,o,0)}var d=1,s=0;for(this[t]=255&e;++s<n&&(d*=256);)this[t+s]=255&e/d;return t+n},s.prototype.writeUIntBE=function(e,t,n,a){if(e=+e,t>>>=0,n>>>=0,!a){var o=r(2,8*n)-1;F(this,e,t,n,o,0)}var d=n-1,s=1;for(this[t+d]=255&e;0<=--d&&(s*=256);)this[t+d]=255&e/s;return t+n},s.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,255,0),this[t]=255&e,t+1},s.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},s.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},s.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},s.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},s.prototype.writeIntLE=function(e,t,n,a){if(e=+e,t>>>=0,!a){var o=r(2,8*n-1);F(this,e,t,n,o-1,-o)}var d=0,s=1,l=0;for(this[t]=255&e;++d<n&&(s*=256);)0>e&&0===l&&0!==this[t+d-1]&&(l=1),this[t+d]=255&(e/s>>0)-l;return t+n},s.prototype.writeIntBE=function(e,t,n,a){if(e=+e,t>>>=0,!a){var o=r(2,8*n-1);F(this,e,t,n,o-1,-o)}var d=n-1,s=1,l=0;for(this[t+d]=255&e;0<=--d&&(s*=256);)0>e&&0===l&&0!==this[t+d+1]&&(l=1),this[t+d]=255&(e/s>>0)-l;return t+n},s.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,127,-128),0>e&&(e=255+e+1),this[t]=255&e,t+1},s.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},s.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},s.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},s.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),0>e&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},s.prototype.writeFloatLE=function(e,t,n){return U(this,e,t,!0,n)},s.prototype.writeFloatBE=function(e,t,n){return U(this,e,t,!1,n)},s.prototype.writeDoubleLE=function(e,t,n){return j(this,e,t,!0,n)},s.prototype.writeDoubleBE=function(e,t,n){return j(this,e,t,!1,n)},s.prototype.copy=function(e,t,n,r){if(!s.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),0<r&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(0>t)throw new RangeError(\"targetStart out of bounds\");if(0>n||n>=this.length)throw new RangeError(\"Index out of range\");if(0>r)throw new RangeError(\"sourceEnd out of bounds\");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a=r-n;if(this===e&&\"function\"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,r);else if(this===e&&n<t&&t<r)for(var o=a-1;0<=o;--o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,r),t);return a},s.prototype.fill=function(e,t,n,r){if(\"string\"==typeof e){if(\"string\"==typeof t?(r=t,t=0,n=this.length):\"string\"==typeof n&&(r=n,n=this.length),void 0!==r&&\"string\"!=typeof r)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof r&&!s.isEncoding(r))throw new TypeError(\"Unknown encoding: \"+r);if(1===e.length){var a=e.charCodeAt(0);(\"utf8\"===r&&128>a||\"latin1\"===r)&&(e=a)}}else\"number\"==typeof e&&(e&=255);if(0>t||this.length<t||this.length<n)throw new RangeError(\"Out of range index\");if(n<=t)return this;t>>>=0,n=n===void 0?this.length:n>>>0,e||(e=0);var o;if(\"number\"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var d=s.isBuffer(e)?e:s.from(e,r),l=d.length;if(0===l)throw new TypeError(\"The value \\\"\"+e+\"\\\" is invalid for argument \\\"value\\\"\");for(o=0;o<n-t;++o)this[o+t]=d[o%l]}return this};var Q=/[^+/0-9A-Za-z-_]/g}).call(this)}).call(this,e(\"buffer\").Buffer)},{\"base64-js\":1,buffer:3,ieee754:9}],4:[function(e,t,n){(function(a){(function(){function r(){let e;try{e=n.storage.getItem(\"debug\")}catch(e){}return!e&&\"undefined\"!=typeof a&&\"env\"in a&&(e=a.env.DEBUG),e}n.formatArgs=function(e){if(e[0]=(this.useColors?\"%c\":\"\")+this.namespace+(this.useColors?\" %c\":\" \")+e[0]+(this.useColors?\"%c \":\" \")+\"+\"+t.exports.humanize(this.diff),!this.useColors)return;const n=\"color: \"+this.color;e.splice(1,0,n,\"color: inherit\");let r=0,a=0;e[0].replace(/%[a-zA-Z%]/g,e=>{\"%%\"===e||(r++,\"%c\"===e&&(a=r))}),e.splice(a,0,n)},n.save=function(e){try{e?n.storage.setItem(\"debug\",e):n.storage.removeItem(\"debug\")}catch(e){}},n.load=r,n.useColors=function(){return!!(\"undefined\"!=typeof window&&window.process&&(\"renderer\"===window.process.type||window.process.__nwjs))||!(\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))&&(\"undefined\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&31<=parseInt(RegExp.$1,10)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/))},n.storage=function(){try{return localStorage}catch(e){}}(),n.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"))}})(),n.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],n.log=console.debug||console.log||(()=>{}),t.exports=e(\"./common\")(n);const{formatters:o}=t.exports;o.j=function(e){try{return JSON.stringify(e)}catch(e){return\"[UnexpectedJSONParseError]: \"+e.message}}}).call(this)}).call(this,e(\"_process\"))},{\"./common\":5,_process:12}],5:[function(e,t){t.exports=function(t){function r(e){function t(...e){if(!t.enabled)return;const a=t,o=+new Date,i=o-(n||o);a.diff=i,a.prev=n,a.curr=o,n=o,e[0]=r.coerce(e[0]),\"string\"!=typeof e[0]&&e.unshift(\"%O\");let d=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(t,n)=>{if(\"%%\"===t)return\"%\";d++;const o=r.formatters[n];if(\"function\"==typeof o){const n=e[d];t=o.call(a,n),e.splice(d,1),d--}return t}),r.formatArgs.call(a,e);const s=a.log||r.log;s.apply(a,e)}let n,o=null;return t.namespace=e,t.useColors=r.useColors(),t.color=r.selectColor(e),t.extend=a,t.destroy=r.destroy,Object.defineProperty(t,\"enabled\",{enumerable:!0,configurable:!1,get:()=>null===o?r.enabled(e):o,set:e=>{o=e}}),\"function\"==typeof r.init&&r.init(t),t}function a(e,t){const n=r(this.namespace+(\"undefined\"==typeof t?\":\":t)+e);return n.log=this.log,n}function o(e){return e.toString().substring(2,e.toString().length-2).replace(/\\.\\*\\?$/,\"*\")}return r.debug=r,r.default=r,r.coerce=function(e){return e instanceof Error?e.stack||e.message:e},r.disable=function(){const e=[...r.names.map(o),...r.skips.map(o).map(e=>\"-\"+e)].join(\",\");return r.enable(\"\"),e},r.enable=function(e){r.save(e),r.names=[],r.skips=[];let t;const n=(\"string\"==typeof e?e:\"\").split(/[\\s,]+/),a=n.length;for(t=0;t<a;t++)n[t]&&(e=n[t].replace(/\\*/g,\".*?\"),\"-\"===e[0]?r.skips.push(new RegExp(\"^\"+e.substr(1)+\"$\")):r.names.push(new RegExp(\"^\"+e+\"$\")))},r.enabled=function(e){if(\"*\"===e[e.length-1])return!0;let t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return!1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return!0;return!1},r.humanize=e(\"ms\"),r.destroy=function(){console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\")},Object.keys(t).forEach(e=>{r[e]=t[e]}),r.names=[],r.skips=[],r.formatters={},r.selectColor=function(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[n(t)%r.colors.length]},r.enable(r.load()),r}},{ms:11}],6:[function(e,t){'use strict';function n(e,t){for(const n in t)Object.defineProperty(e,n,{value:t[n],enumerable:!0,configurable:!0});return e}t.exports=function(e,t,r){if(!e||\"string\"==typeof e)throw new TypeError(\"Please pass an Error to err-code\");r||(r={}),\"object\"==typeof t&&(r=t,t=\"\"),t&&(r.code=t);try{return n(e,r)}catch(t){r.message=e.message,r.stack=e.stack;const a=function(){};a.prototype=Object.create(Object.getPrototypeOf(e));const o=n(new a,r);return o}}},{}],7:[function(e,t){'use strict';function n(e){console&&console.warn&&console.warn(e)}function r(){r.init.call(this)}function a(e){if(\"function\"!=typeof e)throw new TypeError(\"The \\\"listener\\\" argument must be of type Function. Received type \"+typeof e)}function o(e){return void 0===e._maxListeners?r.defaultMaxListeners:e._maxListeners}function i(e,t,r,i){var d,s,l;if(a(r),s=e._events,void 0===s?(s=e._events=Object.create(null),e._eventsCount=0):(void 0!==s.newListener&&(e.emit(\"newListener\",t,r.listener?r.listener:r),s=e._events),l=s[t]),void 0===l)l=s[t]=r,++e._eventsCount;else if(\"function\"==typeof l?l=s[t]=i?[r,l]:[l,r]:i?l.unshift(r):l.push(r),d=o(e),0<d&&l.length>d&&!l.warned){l.warned=!0;var c=new Error(\"Possible EventEmitter memory leak detected. \"+l.length+\" \"+(t+\" listeners added. Use emitter.setMaxListeners() to increase limit\"));c.name=\"MaxListenersExceededWarning\",c.emitter=e,c.type=t,c.count=l.length,n(c)}return e}function d(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function s(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},a=d.bind(r);return a.listener=n,r.wrapFn=a,a}function l(e,t,n){var r=e._events;if(r===void 0)return[];var a=r[t];return void 0===a?[]:\"function\"==typeof a?n?[a.listener||a]:[a]:n?f(a):u(a,a.length)}function c(e){var t=this._events;if(t!==void 0){var n=t[e];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function u(e,t){for(var n=Array(t),r=0;r<t;++r)n[r]=e[r];return n}function p(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}function f(e){for(var t=Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}function g(e,t,n){\"function\"==typeof e.on&&_(e,\"error\",t,n)}function _(e,t,n,r){if(\"function\"==typeof e.on)r.once?e.once(t,n):e.on(t,n);else if(\"function\"==typeof e.addEventListener)e.addEventListener(t,function a(o){r.once&&e.removeEventListener(t,a),n(o)});else throw new TypeError(\"The \\\"emitter\\\" argument must be of type EventEmitter. Received type \"+typeof e)}var h,m=\"object\"==typeof Reflect?Reflect:null,b=m&&\"function\"==typeof m.apply?m.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};h=m&&\"function\"==typeof m.ownKeys?m.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var y=Number.isNaN||function(e){return e!==e};t.exports=r,t.exports.once=function(e,t){return new Promise(function(n,r){function a(n){e.removeListener(t,o),r(n)}function o(){\"function\"==typeof e.removeListener&&e.removeListener(\"error\",a),n([].slice.call(arguments))}_(e,t,o,{once:!0}),\"error\"!==t&&g(e,a,{once:!0})})},r.EventEmitter=r,r.prototype._events=void 0,r.prototype._eventsCount=0,r.prototype._maxListeners=void 0;var C=10;Object.defineProperty(r,\"defaultMaxListeners\",{enumerable:!0,get:function(){return C},set:function(e){if(\"number\"!=typeof e||0>e||y(e))throw new RangeError(\"The value of \\\"defaultMaxListeners\\\" is out of range. It must be a non-negative number. Received \"+e+\".\");C=e}}),r.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},r.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||0>e||y(e))throw new RangeError(\"The value of \\\"n\\\" is out of range. It must be a non-negative number. Received \"+e+\".\");return this._maxListeners=e,this},r.prototype.getMaxListeners=function(){return o(this)},r.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=\"error\"===e,a=this._events;if(a!==void 0)r=r&&a.error===void 0;else if(!r)return!1;if(r){var o;if(0<t.length&&(o=t[0]),o instanceof Error)throw o;var d=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw d.context=o,d}var s=a[e];if(s===void 0)return!1;if(\"function\"==typeof s)b(s,this,t);else for(var l=s.length,c=u(s,l),n=0;n<l;++n)b(c[n],this,t);return!0},r.prototype.addListener=function(e,t){return i(this,e,t,!1)},r.prototype.on=r.prototype.addListener,r.prototype.prependListener=function(e,t){return i(this,e,t,!0)},r.prototype.once=function(e,t){return a(t),this.on(e,s(this,e,t)),this},r.prototype.prependOnceListener=function(e,t){return a(t),this.prependListener(e,s(this,e,t)),this},r.prototype.removeListener=function(e,t){var n,r,o,d,s;if(a(t),r=this._events,void 0===r)return this;if(n=r[e],void 0===n)return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit(\"removeListener\",e,n.listener||t));else if(\"function\"!=typeof n){for(o=-1,d=n.length-1;0<=d;d--)if(n[d]===t||n[d].listener===t){s=n[d].listener,o=d;break}if(0>o)return this;0===o?n.shift():p(n,o),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",e,s||t)}return this},r.prototype.off=r.prototype.removeListener,r.prototype.removeAllListeners=function(e){var t,n,r;if(n=this._events,void 0===n)return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var a,o=Object.keys(n);for(r=0;r<o.length;++r)a=o[r],\"removeListener\"!==a&&this.removeAllListeners(a);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],\"function\"==typeof t)this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;0<=r;r--)this.removeListener(e,t[r]);return this},r.prototype.listeners=function(e){return l(this,e,!0)},r.prototype.rawListeners=function(e){return l(this,e,!1)},r.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):c.call(e,t)},r.prototype.listenerCount=c,r.prototype.eventNames=function(){return 0<this._eventsCount?h(this._events):[]}},{}],8:[function(e,t){t.exports=function(){if(\"undefined\"==typeof globalThis)return null;var e={RTCPeerConnection:globalThis.RTCPeerConnection||globalThis.mozRTCPeerConnection||globalThis.webkitRTCPeerConnection,RTCSessionDescription:globalThis.RTCSessionDescription||globalThis.mozRTCSessionDescription||globalThis.webkitRTCSessionDescription,RTCIceCandidate:globalThis.RTCIceCandidate||globalThis.mozRTCIceCandidate||globalThis.webkitRTCIceCandidate};return e.RTCPeerConnection?e:null}},{}],9:[function(e,a,o){/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */o.read=function(t,n,a,o,l){var c,u,p=8*l-o-1,f=(1<<p)-1,g=f>>1,_=-7,h=a?l-1:0,b=a?-1:1,d=t[n+h];for(h+=b,c=d&(1<<-_)-1,d>>=-_,_+=p;0<_;c=256*c+t[n+h],h+=b,_-=8);for(u=c&(1<<-_)-1,c>>=-_,_+=o;0<_;u=256*u+t[n+h],h+=b,_-=8);if(0===c)c=1-g;else{if(c===f)return u?NaN:(d?-1:1)*(1/0);u+=r(2,o),c-=g}return(d?-1:1)*u*r(2,c-o)},o.write=function(a,o,l,u,p,f){var h,b,y,g=Math.LN2,_=Math.log,C=8*f-p-1,R=(1<<C)-1,E=R>>1,w=23===p?r(2,-24)-r(2,-77):0,S=u?0:f-1,T=u?1:-1,d=0>o||0===o&&0>1/o?1:0;for(o=n(o),isNaN(o)||o===1/0?(b=isNaN(o)?1:0,h=R):(h=t(_(o)/g),1>o*(y=r(2,-h))&&(h--,y*=2),o+=1<=h+E?w/y:w*r(2,1-E),2<=o*y&&(h++,y/=2),h+E>=R?(b=0,h=R):1<=h+E?(b=(o*y-1)*r(2,p),h+=E):(b=o*r(2,E-1)*r(2,p),h=0));8<=p;a[l+S]=255&b,S+=T,b/=256,p-=8);for(h=h<<p|b,C+=p;0<C;a[l+S]=255&h,S+=T,h/=256,C-=8);a[l+S-T]|=128*d}},{}],10:[function(e,t){t.exports=\"function\"==typeof Object.create?function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:function(e,t){if(t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}}},{}],11:[function(e,t){var r=Math.round;function a(e){if(e+=\"\",!(100<e.length)){var t=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]),n=(t[2]||\"ms\").toLowerCase();return\"years\"===n||\"year\"===n||\"yrs\"===n||\"yr\"===n||\"y\"===n?31557600000*r:\"weeks\"===n||\"week\"===n||\"w\"===n?604800000*r:\"days\"===n||\"day\"===n||\"d\"===n?86400000*r:\"hours\"===n||\"hour\"===n||\"hrs\"===n||\"hr\"===n||\"h\"===n?3600000*r:\"minutes\"===n||\"minute\"===n||\"mins\"===n||\"min\"===n||\"m\"===n?60000*r:\"seconds\"===n||\"second\"===n||\"secs\"===n||\"sec\"===n||\"s\"===n?1000*r:\"milliseconds\"===n||\"millisecond\"===n||\"msecs\"===n||\"msec\"===n||\"ms\"===n?r:void 0}}}function o(e){var t=n(e);return 86400000<=t?r(e/86400000)+\"d\":3600000<=t?r(e/3600000)+\"h\":60000<=t?r(e/60000)+\"m\":1000<=t?r(e/1000)+\"s\":e+\"ms\"}function i(e){var t=n(e);return 86400000<=t?s(e,t,86400000,\"day\"):3600000<=t?s(e,t,3600000,\"hour\"):60000<=t?s(e,t,60000,\"minute\"):1000<=t?s(e,t,1000,\"second\"):e+\" ms\"}function s(e,t,a,n){return r(e/a)+\" \"+n+(t>=1.5*a?\"s\":\"\")}var l=24*(60*60000);t.exports=function(e,t){t=t||{};var n=typeof e;if(\"string\"==n&&0<e.length)return a(e);if(\"number\"===n&&isFinite(e))return t.long?i(e):o(e);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))}},{}],12:[function(e,t){function n(){throw new Error(\"setTimeout has not been defined\")}function r(){throw new Error(\"clearTimeout has not been defined\")}function a(t){if(c===setTimeout)return setTimeout(t,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(t,0);try{return c(t,0)}catch(n){try{return c.call(null,t,0)}catch(n){return c.call(this,t,0)}}}function o(t){if(u===clearTimeout)return clearTimeout(t);if((u===r||!u)&&clearTimeout)return u=clearTimeout,clearTimeout(t);try{return u(t)}catch(n){try{return u.call(null,t)}catch(n){return u.call(this,t)}}}function i(){_&&f&&(_=!1,f.length?g=f.concat(g):h=-1,g.length&&d())}function d(){if(!_){var e=a(i);_=!0;for(var t=g.length;t;){for(f=g,g=[];++h<t;)f&&f[h].run();h=-1,t=g.length}f=null,_=!1,o(e)}}function s(e,t){this.fun=e,this.array=t}function l(){}var c,u,p=t.exports={};(function(){try{c=\"function\"==typeof setTimeout?setTimeout:n}catch(t){c=n}try{u=\"function\"==typeof clearTimeout?clearTimeout:r}catch(t){u=r}})();var f,g=[],_=!1,h=-1;p.nextTick=function(e){var t=Array(arguments.length-1);if(1<arguments.length)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];g.push(new s(e,t)),1!==g.length||_||a(d)},s.prototype.run=function(){this.fun.apply(null,this.array)},p.title=\"browser\",p.browser=!0,p.env={},p.argv=[],p.version=\"\",p.versions={},p.on=l,p.addListener=l,p.once=l,p.off=l,p.removeListener=l,p.removeAllListeners=l,p.emit=l,p.prependListener=l,p.prependOnceListener=l,p.listeners=function(){return[]},p.binding=function(){throw new Error(\"process.binding is not supported\")},p.cwd=function(){return\"/\"},p.chdir=function(){throw new Error(\"process.chdir is not supported\")},p.umask=function(){return 0}},{}],13:[function(e,t){(function(e){(function(){/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */let n;t.exports=\"function\"==typeof queueMicrotask?queueMicrotask.bind(\"undefined\"==typeof window?e:window):e=>(n||(n=Promise.resolve())).then(e).catch(e=>setTimeout(()=>{throw e},0))}).call(this)}).call(this,\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{}],14:[function(e,t){(function(n,r){(function(){'use strict';var a=e(\"safe-buffer\").Buffer,o=r.crypto||r.msCrypto;t.exports=o&&o.getRandomValues?function(e,t){if(e>4294967295)throw new RangeError(\"requested too many random bytes\");var r=a.allocUnsafe(e);if(0<e)if(65536<e)for(var i=0;i<e;i+=65536)o.getRandomValues(r.slice(i,i+65536));else o.getRandomValues(r);return\"function\"==typeof t?n.nextTick(function(){t(null,r)}):r}:function(){throw new Error(\"Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11\")}}).call(this)}).call(this,e(\"_process\"),\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{_process:12,\"safe-buffer\":30}],15:[function(e,t){'use strict';function n(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function r(e,t,r){function a(e,n,r){return\"string\"==typeof t?t:t(e,n,r)}r||(r=Error);var o=function(e){function t(t,n,r){return e.call(this,a(t,n,r))||this}return n(t,e),t}(r);o.prototype.name=r.name,o.prototype.code=e,s[e]=o}function a(e,t){if(Array.isArray(e)){var n=e.length;return e=e.map(function(e){return e+\"\"}),2<n?\"one of \".concat(t,\" \").concat(e.slice(0,n-1).join(\", \"),\", or \")+e[n-1]:2===n?\"one of \".concat(t,\" \").concat(e[0],\" or \").concat(e[1]):\"of \".concat(t,\" \").concat(e[0])}return\"of \".concat(t,\" \").concat(e+\"\")}function o(e,t,n){return e.substr(!n||0>n?0:+n,t.length)===t}function i(e,t,n){return(void 0===n||n>e.length)&&(n=e.length),e.substring(n-t.length,n)===t}function d(e,t,n){return\"number\"!=typeof n&&(n=0),!(n+t.length>e.length)&&-1!==e.indexOf(t,n)}var s={};r(\"ERR_INVALID_OPT_VALUE\",function(e,t){return\"The value \\\"\"+t+\"\\\" is invalid for option \\\"\"+e+\"\\\"\"},TypeError),r(\"ERR_INVALID_ARG_TYPE\",function(e,t,n){var r;\"string\"==typeof t&&o(t,\"not \")?(r=\"must not be\",t=t.replace(/^not /,\"\")):r=\"must be\";var s;if(i(e,\" argument\"))s=\"The \".concat(e,\" \").concat(r,\" \").concat(a(t,\"type\"));else{var l=d(e,\".\")?\"property\":\"argument\";s=\"The \\\"\".concat(e,\"\\\" \").concat(l,\" \").concat(r,\" \").concat(a(t,\"type\"))}return s+=\". Received type \".concat(typeof n),s},TypeError),r(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\"),r(\"ERR_METHOD_NOT_IMPLEMENTED\",function(e){return\"The \"+e+\" method is not implemented\"}),r(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\"),r(\"ERR_STREAM_DESTROYED\",function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}),r(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\"),r(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\"),r(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\"),r(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError),r(\"ERR_UNKNOWN_ENCODING\",function(e){return\"Unknown encoding: \"+e},TypeError),r(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\"),t.exports.codes=s},{}],16:[function(e,t){(function(n){(function(){'use strict';function r(e){return this instanceof r?void(d.call(this,e),s.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once(\"end\",a)))):new r(e)}function a(){this._writableState.ended||n.nextTick(o,this)}function o(e){e.end()}var i=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};t.exports=r;var d=e(\"./_stream_readable\"),s=e(\"./_stream_writable\");e(\"inherits\")(r,d);for(var l,c=i(s.prototype),u=0;u<c.length;u++)l=c[u],r.prototype[l]||(r.prototype[l]=s.prototype[l]);Object.defineProperty(r.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(r.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(r.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(r.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0===this._readableState||void 0===this._writableState||(this._readableState.destroyed=e,this._writableState.destroyed=e)}})}).call(this)}).call(this,e(\"_process\"))},{\"./_stream_readable\":18,\"./_stream_writable\":20,_process:12,inherits:10}],17:[function(e,t){'use strict';function n(e){return this instanceof n?void r.call(this,e):new n(e)}t.exports=n;var r=e(\"./_stream_transform\");e(\"inherits\")(n,r),n.prototype._transform=function(e,t,n){n(null,e)}},{\"./_stream_transform\":19,inherits:10}],18:[function(e,t){(function(n,r){(function(){'use strict';function a(e){return P.from(e)}function o(e){return P.isBuffer(e)||e instanceof M}function i(e,t,n){return\"function\"==typeof e.prependListener?e.prependListener(t,n):void(e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n))}function d(t,n,r){A=A||e(\"./_stream_duplex\"),t=t||{},\"boolean\"!=typeof r&&(r=n instanceof A),this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.highWaterMark=H(this,t,\"readableHighWaterMark\",r),this.buffer=new j,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(!F&&(F=e(\"string_decoder/\").StringDecoder),this.decoder=new F(t.encoding),this.encoding=t.encoding)}function s(t){if(A=A||e(\"./_stream_duplex\"),!(this instanceof s))return new s(t);var n=this instanceof A;this._readableState=new d(t,this,n),this.readable=!0,t&&(\"function\"==typeof t.read&&(this._read=t.read),\"function\"==typeof t.destroy&&(this._destroy=t.destroy)),I.call(this)}function l(e,t,n,r,o){x(\"readableAddChunk\",t);var i=e._readableState;if(null===t)i.reading=!1,g(e,i);else{var d;if(o||(d=u(i,t)),d)X(e,d);else if(!(i.objectMode||t&&0<t.length))r||(i.reading=!1,m(e,i));else if(\"string\"==typeof t||i.objectMode||Object.getPrototypeOf(t)===P.prototype||(t=a(t)),r)i.endEmitted?X(e,new K):c(e,i,t,!0);else if(i.ended)X(e,new z);else{if(i.destroyed)return!1;i.reading=!1,i.decoder&&!n?(t=i.decoder.write(t),i.objectMode||0!==t.length?c(e,i,t,!1):m(e,i)):c(e,i,t,!1)}}return!i.ended&&(i.length<i.highWaterMark||0===i.length)}function c(e,t,n,r){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit(\"data\",n)):(t.length+=t.objectMode?1:n.length,r?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&_(e)),m(e,t)}function u(e,t){var n;return o(t)||\"string\"==typeof t||void 0===t||e.objectMode||(n=new V(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)),n}function p(e){return 1073741824<=e?e=1073741824:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}function f(e,t){return 0>=e||0===t.length&&t.ended?0:t.objectMode?1:e===e?(e>t.highWaterMark&&(t.highWaterMark=p(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0)):t.flowing&&t.length?t.buffer.head.data.length:t.length}function g(e,t){if(x(\"onEofChunk\"),!t.ended){if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,t.sync?_(e):(t.needReadable=!1,!t.emittedReadable&&(t.emittedReadable=!0,h(e)))}}function _(e){var t=e._readableState;x(\"emitReadable\",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(x(\"emitReadable\",t.flowing),t.emittedReadable=!0,n.nextTick(h,e))}function h(e){var t=e._readableState;x(\"emitReadable_\",t.destroyed,t.length,t.ended),!t.destroyed&&(t.length||t.ended)&&(e.emit(\"readable\"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,S(e)}function m(e,t){t.readingMore||(t.readingMore=!0,n.nextTick(b,e,t))}function b(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var n=t.length;if(x(\"maybeReadMore read 0\"),e.read(0),n===t.length)break}t.readingMore=!1}function y(e){return function(){var t=e._readableState;x(\"pipeOnDrain\",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&D(e,\"data\")&&(t.flowing=!0,S(e))}}function C(e){var t=e._readableState;t.readableListening=0<e.listenerCount(\"readable\"),t.resumeScheduled&&!t.paused?t.flowing=!0:0<e.listenerCount(\"data\")&&e.resume()}function R(e){x(\"readable nexttick read 0\"),e.read(0)}function E(e,t){t.resumeScheduled||(t.resumeScheduled=!0,n.nextTick(w,e,t))}function w(e,t){x(\"resume\",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit(\"resume\"),S(e),t.flowing&&!t.reading&&e.read(0)}function S(e){var t=e._readableState;for(x(\"flow\",t.flowing);t.flowing&&null!==e.read(););}function T(e,t){if(0===t.length)return null;var n;return t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(\"\"):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):n=t.buffer.consume(e,t.decoder),n}function v(e){var t=e._readableState;x(\"endReadable\",t.endEmitted),t.endEmitted||(t.ended=!0,n.nextTick(k,t,e))}function k(e,t){if(x(\"endReadableNT\",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit(\"end\"),e.autoDestroy)){var n=t._writableState;(!n||n.autoDestroy&&n.finished)&&t.destroy()}}function L(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}t.exports=s;var A;s.ReadableState=d;var x,N=e(\"events\").EventEmitter,D=function(e,t){return e.listeners(t).length},I=e(\"./internal/streams/stream\"),P=e(\"buffer\").Buffer,M=r.Uint8Array||function(){},O=e(\"util\");x=O&&O.debuglog?O.debuglog(\"stream\"):function(){};var F,B,U,j=e(\"./internal/streams/buffer_list\"),q=e(\"./internal/streams/destroy\"),W=e(\"./internal/streams/state\"),H=W.getHighWaterMark,Y=e(\"../errors\").codes,V=Y.ERR_INVALID_ARG_TYPE,z=Y.ERR_STREAM_PUSH_AFTER_EOF,G=Y.ERR_METHOD_NOT_IMPLEMENTED,K=Y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;e(\"inherits\")(s,I);var X=q.errorOrDestroy,$=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];Object.defineProperty(s.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),s.prototype.destroy=q.destroy,s.prototype._undestroy=q.undestroy,s.prototype._destroy=function(e,t){t(e)},s.prototype.push=function(e,t){var n,r=this._readableState;return r.objectMode?n=!0:\"string\"==typeof e&&(t=t||r.defaultEncoding,t!==r.encoding&&(e=P.from(e,t),t=\"\"),n=!0),l(this,e,t,!1,n)},s.prototype.unshift=function(e){return l(this,e,null,!0,!1)},s.prototype.isPaused=function(){return!1===this._readableState.flowing},s.prototype.setEncoding=function(t){F||(F=e(\"string_decoder/\").StringDecoder);var n=new F(t);this._readableState.decoder=n,this._readableState.encoding=this._readableState.decoder.encoding;for(var r=this._readableState.buffer.head,a=\"\";null!==r;)a+=n.write(r.data),r=r.next;return this._readableState.buffer.clear(),\"\"!==a&&this._readableState.buffer.push(a),this._readableState.length=a.length,this};s.prototype.read=function(e){x(\"read\",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0===t.highWaterMark?0<t.length:t.length>=t.highWaterMark)||t.ended))return x(\"read: emitReadable\",t.length,t.ended),0===t.length&&t.ended?v(this):_(this),null;if(e=f(e,t),0===e&&t.ended)return 0===t.length&&v(this),null;var a=t.needReadable;x(\"need readable\",a),(0===t.length||t.length-e<t.highWaterMark)&&(a=!0,x(\"length less than watermark\",a)),t.ended||t.reading?(a=!1,x(\"reading or ended\",a)):a&&(x(\"do read\"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,!t.reading&&(e=f(r,t)));var o;return o=0<e?T(e,t):null,null===o?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(!t.ended&&(t.needReadable=!0),r!==e&&t.ended&&v(this)),null!==o&&this.emit(\"data\",o),o},s.prototype._read=function(){X(this,new G(\"_read()\"))},s.prototype.pipe=function(e,t){function r(e,t){x(\"onunpipe\"),e===p&&t&&!1===t.hasUnpiped&&(t.hasUnpiped=!0,o())}function a(){x(\"onend\"),e.end()}function o(){x(\"cleanup\"),e.removeListener(\"close\",l),e.removeListener(\"finish\",c),e.removeListener(\"drain\",h),e.removeListener(\"error\",s),e.removeListener(\"unpipe\",r),p.removeListener(\"end\",a),p.removeListener(\"end\",u),p.removeListener(\"data\",d),m=!0,f.awaitDrain&&(!e._writableState||e._writableState.needDrain)&&h()}function d(t){x(\"ondata\");var n=e.write(t);x(\"dest.write\",n),!1===n&&((1===f.pipesCount&&f.pipes===e||1<f.pipesCount&&-1!==L(f.pipes,e))&&!m&&(x(\"false write response, pause\",f.awaitDrain),f.awaitDrain++),p.pause())}function s(t){x(\"onerror\",t),u(),e.removeListener(\"error\",s),0===D(e,\"error\")&&X(e,t)}function l(){e.removeListener(\"finish\",c),u()}function c(){x(\"onfinish\"),e.removeListener(\"close\",l),u()}function u(){x(\"unpipe\"),p.unpipe(e)}var p=this,f=this._readableState;switch(f.pipesCount){case 0:f.pipes=e;break;case 1:f.pipes=[f.pipes,e];break;default:f.pipes.push(e);}f.pipesCount+=1,x(\"pipe count=%d opts=%j\",f.pipesCount,t);var g=(!t||!1!==t.end)&&e!==n.stdout&&e!==n.stderr,_=g?a:u;f.endEmitted?n.nextTick(_):p.once(\"end\",_),e.on(\"unpipe\",r);var h=y(p);e.on(\"drain\",h);var m=!1;return p.on(\"data\",d),i(e,\"error\",s),e.once(\"close\",l),e.once(\"finish\",c),e.emit(\"pipe\",p),f.flowing||(x(\"pipe resume\"),p.resume()),e},s.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes?this:(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit(\"unpipe\",this,n),this);if(!e){var r=t.pipes,a=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<a;o++)r[o].emit(\"unpipe\",this,{hasUnpiped:!1});return this}var d=L(t.pipes,e);return-1===d?this:(t.pipes.splice(d,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit(\"unpipe\",this,n),this)},s.prototype.on=function(e,t){var r=I.prototype.on.call(this,e,t),a=this._readableState;return\"data\"===e?(a.readableListening=0<this.listenerCount(\"readable\"),!1!==a.flowing&&this.resume()):\"readable\"==e&&!a.endEmitted&&!a.readableListening&&(a.readableListening=a.needReadable=!0,a.flowing=!1,a.emittedReadable=!1,x(\"on readable\",a.length,a.reading),a.length?_(this):!a.reading&&n.nextTick(R,this)),r},s.prototype.addListener=s.prototype.on,s.prototype.removeListener=function(e,t){var r=I.prototype.removeListener.call(this,e,t);return\"readable\"===e&&n.nextTick(C,this),r},s.prototype.removeAllListeners=function(e){var t=I.prototype.removeAllListeners.apply(this,arguments);return(\"readable\"===e||void 0===e)&&n.nextTick(C,this),t},s.prototype.resume=function(){var e=this._readableState;return e.flowing||(x(\"resume\"),e.flowing=!e.readableListening,E(this,e)),e.paused=!1,this},s.prototype.pause=function(){return x(\"call pause flowing=%j\",this._readableState.flowing),!1!==this._readableState.flowing&&(x(\"pause\"),this._readableState.flowing=!1,this.emit(\"pause\")),this._readableState.paused=!0,this},s.prototype.wrap=function(e){var t=this,r=this._readableState,a=!1;for(var o in e.on(\"end\",function(){if(x(\"wrapped end\"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)}),e.on(\"data\",function(n){if((x(\"wrapped data\"),r.decoder&&(n=r.decoder.write(n)),!(r.objectMode&&(null===n||void 0===n)))&&(r.objectMode||n&&n.length)){var o=t.push(n);o||(a=!0,e.pause())}}),e)void 0===this[o]&&\"function\"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));for(var i=0;i<$.length;i++)e.on($[i],this.emit.bind(this,$[i]));return this._read=function(t){x(\"wrapped _read\",t),a&&(a=!1,e.resume())},this},\"function\"==typeof Symbol&&(s.prototype[Symbol.asyncIterator]=function(){return void 0===B&&(B=e(\"./internal/streams/async_iterator\")),B(this)}),Object.defineProperty(s.prototype,\"readableHighWaterMark\",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(s.prototype,\"readableBuffer\",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(s.prototype,\"readableFlowing\",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),s._fromList=T,Object.defineProperty(s.prototype,\"readableLength\",{enumerable:!1,get:function(){return this._readableState.length}}),\"function\"==typeof Symbol&&(s.from=function(t,n){return void 0===U&&(U=e(\"./internal/streams/from\")),U(s,t,n)})}).call(this)}).call(this,e(\"_process\"),\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{\"../errors\":15,\"./_stream_duplex\":16,\"./internal/streams/async_iterator\":21,\"./internal/streams/buffer_list\":22,\"./internal/streams/destroy\":23,\"./internal/streams/from\":25,\"./internal/streams/state\":27,\"./internal/streams/stream\":28,_process:12,buffer:3,events:7,inherits:10,\"string_decoder/\":31,util:2}],19:[function(e,t){'use strict';function n(e,t){var n=this._transformState;n.transforming=!1;var r=n.writecb;if(null===r)return this.emit(\"error\",new s);n.writechunk=null,n.writecb=null,null!=t&&this.push(t),r(e);var a=this._readableState;a.reading=!1,(a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}function r(e){return this instanceof r?void(u.call(this,e),this._transformState={afterTransform:n.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&(\"function\"==typeof e.transform&&(this._transform=e.transform),\"function\"==typeof e.flush&&(this._flush=e.flush)),this.on(\"prefinish\",a)):new r(e)}function a(){var e=this;\"function\"!=typeof this._flush||this._readableState.destroyed?o(this,null,null):this._flush(function(t,n){o(e,t,n)})}function o(e,t,n){if(t)return e.emit(\"error\",t);if(null!=n&&e.push(n),e._writableState.length)throw new c;if(e._transformState.transforming)throw new l;return e.push(null)}t.exports=r;var i=e(\"../errors\").codes,d=i.ERR_METHOD_NOT_IMPLEMENTED,s=i.ERR_MULTIPLE_CALLBACK,l=i.ERR_TRANSFORM_ALREADY_TRANSFORMING,c=i.ERR_TRANSFORM_WITH_LENGTH_0,u=e(\"./_stream_duplex\");e(\"inherits\")(r,u),r.prototype.push=function(e,t){return this._transformState.needTransform=!1,u.prototype.push.call(this,e,t)},r.prototype._transform=function(e,t,n){n(new d(\"_transform()\"))},r.prototype._write=function(e,t,n){var r=this._transformState;if(r.writecb=n,r.writechunk=e,r.writeencoding=t,!r.transforming){var a=this._readableState;(r.needTransform||a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}},r.prototype._read=function(){var e=this._transformState;null===e.writechunk||e.transforming?e.needTransform=!0:(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform))},r.prototype._destroy=function(e,t){u.prototype._destroy.call(this,e,function(e){t(e)})}},{\"../errors\":15,\"./_stream_duplex\":16,inherits:10}],20:[function(e,t){(function(n,r){(function(){'use strict';function a(e){var t=this;this.next=null,this.entry=null,this.finish=function(){v(t,e)}}function o(e){return x.from(e)}function i(e){return x.isBuffer(e)||e instanceof N}function d(){}function s(t,n,r){k=k||e(\"./_stream_duplex\"),t=t||{},\"boolean\"!=typeof r&&(r=n instanceof k),this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=P(this,t,\"writableHighWaterMark\",r),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var o=!1===t.decodeStrings;this.decodeStrings=!o,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){m(n,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new a(this)}function l(t){k=k||e(\"./_stream_duplex\");var n=this instanceof k;return n||V.call(l,this)?void(this._writableState=new s(t,this,n),this.writable=!0,t&&(\"function\"==typeof t.write&&(this._write=t.write),\"function\"==typeof t.writev&&(this._writev=t.writev),\"function\"==typeof t.destroy&&(this._destroy=t.destroy),\"function\"==typeof t.final&&(this._final=t.final)),A.call(this)):new l(t)}function c(e,t){var r=new W;Y(e,r),n.nextTick(t,r)}function u(e,t,r,a){var o;return null===r?o=new q:\"string\"!=typeof r&&!t.objectMode&&(o=new O(\"chunk\",[\"string\",\"Buffer\"],r)),!o||(Y(e,o),n.nextTick(a,o),!1)}function p(e,t,n){return e.objectMode||!1===e.decodeStrings||\"string\"!=typeof t||(t=x.from(t,n)),t}function f(e,t,n,r,a,o){if(!n){var i=p(t,r,a);r!==i&&(n=!0,a=\"buffer\",r=i)}var d=t.objectMode?1:r.length;t.length+=d;var s=t.length<t.highWaterMark;if(s||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:r,encoding:a,isBuf:n,callback:o,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else g(e,t,!1,d,r,a,o);return s}function g(e,t,n,r,a,o,i){t.writelen=r,t.writecb=i,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new j(\"write\")):n?e._writev(a,t.onwrite):e._write(a,o,t.onwrite),t.sync=!1}function _(e,t,r,a,o){--t.pendingcb,r?(n.nextTick(o,a),n.nextTick(S,e,t),e._writableState.errorEmitted=!0,Y(e,a)):(o(a),e._writableState.errorEmitted=!0,Y(e,a),S(e,t))}function h(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}function m(e,t){var r=e._writableState,a=r.sync,o=r.writecb;if(\"function\"!=typeof o)throw new B;if(h(r),t)_(e,r,a,t,o);else{var i=R(r)||e.destroyed;i||r.corked||r.bufferProcessing||!r.bufferedRequest||C(e,r),a?n.nextTick(b,e,r,i,o):b(e,r,i,o)}}function b(e,t,n,r){n||y(e,t),t.pendingcb--,r(),S(e,t)}function y(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit(\"drain\"))}function C(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var r=t.bufferedRequestCount,o=Array(r),i=t.corkedRequestsFree;i.entry=n;for(var d=0,s=!0;n;)o[d]=n,n.isBuf||(s=!1),n=n.next,d+=1;o.allBuffers=s,g(e,t,!0,t.length,o,\"\",i.finish),t.pendingcb++,t.lastBufferedRequest=null,i.next?(t.corkedRequestsFree=i.next,i.next=null):t.corkedRequestsFree=new a(t),t.bufferedRequestCount=0}else{for(;n;){var l=n.chunk,c=n.encoding,u=n.callback,p=t.objectMode?1:l.length;if(g(e,t,!1,p,l,c,u),n=n.next,t.bufferedRequestCount--,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequest=n,t.bufferProcessing=!1}function R(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function E(e,t){e._final(function(n){t.pendingcb--,n&&Y(e,n),t.prefinished=!0,e.emit(\"prefinish\"),S(e,t)})}function w(e,t){t.prefinished||t.finalCalled||(\"function\"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit(\"prefinish\")):(t.pendingcb++,t.finalCalled=!0,n.nextTick(E,e,t)))}function S(e,t){var n=R(t);if(n&&(w(e,t),0===t.pendingcb&&(t.finished=!0,e.emit(\"finish\"),t.autoDestroy))){var r=e._readableState;(!r||r.autoDestroy&&r.endEmitted)&&e.destroy()}return n}function T(e,t,r){t.ending=!0,S(e,t),r&&(t.finished?n.nextTick(r):e.once(\"finish\",r)),t.ended=!0,e.writable=!1}function v(e,t,n){var r=e.entry;for(e.entry=null;r;){var a=r.callback;t.pendingcb--,a(n),r=r.next}t.corkedRequestsFree.next=e}t.exports=l;var k;l.WritableState=s;var L={deprecate:e(\"util-deprecate\")},A=e(\"./internal/streams/stream\"),x=e(\"buffer\").Buffer,N=r.Uint8Array||function(){},D=e(\"./internal/streams/destroy\"),I=e(\"./internal/streams/state\"),P=I.getHighWaterMark,M=e(\"../errors\").codes,O=M.ERR_INVALID_ARG_TYPE,F=M.ERR_METHOD_NOT_IMPLEMENTED,B=M.ERR_MULTIPLE_CALLBACK,U=M.ERR_STREAM_CANNOT_PIPE,j=M.ERR_STREAM_DESTROYED,q=M.ERR_STREAM_NULL_VALUES,W=M.ERR_STREAM_WRITE_AFTER_END,H=M.ERR_UNKNOWN_ENCODING,Y=D.errorOrDestroy;e(\"inherits\")(l,A),s.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(s.prototype,\"buffer\",{get:L.deprecate(function(){return this.getBuffer()},\"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\",\"DEP0003\")})}catch(e){}}();var V;\"function\"==typeof Symbol&&Symbol.hasInstance&&\"function\"==typeof Function.prototype[Symbol.hasInstance]?(V=Function.prototype[Symbol.hasInstance],Object.defineProperty(l,Symbol.hasInstance,{value:function(e){return!!V.call(this,e)||!(this!==l)&&e&&e._writableState instanceof s}})):V=function(e){return e instanceof this},l.prototype.pipe=function(){Y(this,new U)},l.prototype.write=function(e,t,n){var r=this._writableState,a=!1,s=!r.objectMode&&i(e);return s&&!x.isBuffer(e)&&(e=o(e)),\"function\"==typeof t&&(n=t,t=null),s?t=\"buffer\":!t&&(t=r.defaultEncoding),\"function\"!=typeof n&&(n=d),r.ending?c(this,n):(s||u(this,r,e,n))&&(r.pendingcb++,a=f(this,r,s,e,t,n)),a},l.prototype.cork=function(){this._writableState.corked++},l.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,!e.writing&&!e.corked&&!e.bufferProcessing&&e.bufferedRequest&&C(this,e))},l.prototype.setDefaultEncoding=function(e){if(\"string\"==typeof e&&(e=e.toLowerCase()),!(-1<[\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())))throw new H(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(l.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(l.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),l.prototype._write=function(e,t,n){n(new F(\"_write()\"))},l.prototype._writev=null,l.prototype.end=function(e,t,n){var r=this._writableState;return\"function\"==typeof e?(n=e,e=null,t=null):\"function\"==typeof t&&(n=t,t=null),null!==e&&void 0!==e&&this.write(e,t),r.corked&&(r.corked=1,this.uncork()),r.ending||T(this,r,n),this},Object.defineProperty(l.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(l.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),l.prototype.destroy=D.destroy,l.prototype._undestroy=D.undestroy,l.prototype._destroy=function(e,t){t(e)}}).call(this)}).call(this,e(\"_process\"),\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{\"../errors\":15,\"./_stream_duplex\":16,\"./internal/streams/destroy\":23,\"./internal/streams/state\":27,\"./internal/streams/stream\":28,_process:12,buffer:3,inherits:10,\"util-deprecate\":32}],21:[function(e,t){(function(n){(function(){'use strict';function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return{value:e,done:t}}function o(e){var t=e[c];if(null!==t){var n=e[h].read();null!==n&&(e[g]=null,e[c]=null,e[u]=null,t(a(n,!1)))}}function i(e){n.nextTick(o,e)}function d(e,t){return function(n,r){e.then(function(){return t[f]?void n(a(void 0,!0)):void t[_](n,r)},r)}}var s,l=e(\"./end-of-stream\"),c=Symbol(\"lastResolve\"),u=Symbol(\"lastReject\"),p=Symbol(\"error\"),f=Symbol(\"ended\"),g=Symbol(\"lastPromise\"),_=Symbol(\"handlePromise\"),h=Symbol(\"stream\"),m=Object.getPrototypeOf(function(){}),b=Object.setPrototypeOf((s={get stream(){return this[h]},next:function(){var e=this,t=this[p];if(null!==t)return Promise.reject(t);if(this[f])return Promise.resolve(a(void 0,!0));if(this[h].destroyed)return new Promise(function(t,r){n.nextTick(function(){e[p]?r(e[p]):t(a(void 0,!0))})});var r,o=this[g];if(o)r=new Promise(d(o,this));else{var i=this[h].read();if(null!==i)return Promise.resolve(a(i,!1));r=new Promise(this[_])}return this[g]=r,r}},r(s,Symbol.asyncIterator,function(){return this}),r(s,\"return\",function(){var e=this;return new Promise(function(t,n){e[h].destroy(null,function(e){return e?void n(e):void t(a(void 0,!0))})})}),s),m);t.exports=function(e){var t,n=Object.create(b,(t={},r(t,h,{value:e,writable:!0}),r(t,c,{value:null,writable:!0}),r(t,u,{value:null,writable:!0}),r(t,p,{value:null,writable:!0}),r(t,f,{value:e._readableState.endEmitted,writable:!0}),r(t,_,{value:function(e,t){var r=n[h].read();r?(n[g]=null,n[c]=null,n[u]=null,e(a(r,!1))):(n[c]=e,n[u]=t)},writable:!0}),t));return n[g]=null,l(e,function(e){if(e&&\"ERR_STREAM_PREMATURE_CLOSE\"!==e.code){var t=n[u];return null!==t&&(n[g]=null,n[c]=null,n[u]=null,t(e)),void(n[p]=e)}var r=n[c];null!==r&&(n[g]=null,n[c]=null,n[u]=null,r(a(void 0,!0))),n[f]=!0}),e.on(\"readable\",i.bind(null,n)),n}}).call(this)}).call(this,e(\"_process\"))},{\"./end-of-stream\":24,_process:12}],22:[function(e,t){'use strict';function n(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function r(e){for(var t,r=1;r<arguments.length;r++)t=null==arguments[r]?{}:arguments[r],r%2?n(Object(t),!0).forEach(function(n){a(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))});return e}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(e,t){for(var n,r=0;r<t.length;r++)n=t[r],n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}function d(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}function s(e,t,n){u.prototype.copy.call(e,t,n)}var l=e(\"buffer\"),u=l.Buffer,p=e(\"util\"),f=p.inspect,g=f&&f.custom||\"inspect\";t.exports=function(){function e(){o(this,e),this.head=null,this.tail=null,this.length=0}return d(e,[{key:\"push\",value:function(e){var t={data:e,next:null};0<this.length?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:\"unshift\",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:\"shift\",value:function(){if(0!==this.length){var e=this.head.data;return this.head=1===this.length?this.tail=null:this.head.next,--this.length,e}}},{key:\"clear\",value:function(){this.head=this.tail=null,this.length=0}},{key:\"join\",value:function(e){if(0===this.length)return\"\";for(var t=this.head,n=\"\"+t.data;t=t.next;)n+=e+t.data;return n}},{key:\"concat\",value:function(e){if(0===this.length)return u.alloc(0);for(var t=u.allocUnsafe(e>>>0),n=this.head,r=0;n;)s(n.data,t,r),r+=n.data.length,n=n.next;return t}},{key:\"consume\",value:function(e,t){var n;return e<this.head.data.length?(n=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):e===this.head.data.length?n=this.shift():n=t?this._getString(e):this._getBuffer(e),n}},{key:\"first\",value:function(){return this.head.data}},{key:\"_getString\",value:function(e){var t=this.head,r=1,a=t.data;for(e-=a.length;t=t.next;){var o=t.data,i=e>o.length?o.length:e;if(a+=i===o.length?o:o.slice(0,e),e-=i,0===e){i===o.length?(++r,this.head=t.next?t.next:this.tail=null):(this.head=t,t.data=o.slice(i));break}++r}return this.length-=r,a}},{key:\"_getBuffer\",value:function(e){var t=u.allocUnsafe(e),r=this.head,a=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var o=r.data,i=e>o.length?o.length:e;if(o.copy(t,t.length-e,0,i),e-=i,0===e){i===o.length?(++a,this.head=r.next?r.next:this.tail=null):(this.head=r,r.data=o.slice(i));break}++a}return this.length-=a,t}},{key:g,value:function(e,t){return f(this,r({},t,{depth:0,customInspect:!1}))}}]),e}()},{buffer:3,util:2}],23:[function(e,t){(function(e){(function(){'use strict';function n(e,t){a(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit(\"close\")}function a(e,t){e.emit(\"error\",t)}t.exports={destroy:function(t,o){var i=this,d=this._readableState&&this._readableState.destroyed,s=this._writableState&&this._writableState.destroyed;return d||s?(o?o(t):t&&(this._writableState?!this._writableState.errorEmitted&&(this._writableState.errorEmitted=!0,e.nextTick(a,this,t)):e.nextTick(a,this,t)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,function(t){!o&&t?i._writableState?i._writableState.errorEmitted?e.nextTick(r,i):(i._writableState.errorEmitted=!0,e.nextTick(n,i,t)):e.nextTick(n,i,t):o?(e.nextTick(r,i),o(t)):e.nextTick(r,i)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var n=e._readableState,r=e._writableState;n&&n.autoDestroy||r&&r.autoDestroy?e.destroy(t):e.emit(\"error\",t)}}}).call(this)}).call(this,e(\"_process\"))},{_process:12}],24:[function(e,t){'use strict';function n(e){var t=!1;return function(){if(!t){t=!0;for(var n=arguments.length,r=Array(n),a=0;a<n;a++)r[a]=arguments[a];e.apply(this,r)}}}function r(){}function a(e){return e.setHeader&&\"function\"==typeof e.abort}function o(e,t,d){if(\"function\"==typeof t)return o(e,null,t);t||(t={}),d=n(d||r);var s=t.readable||!1!==t.readable&&e.readable,l=t.writable||!1!==t.writable&&e.writable,c=function(){e.writable||p()},u=e._writableState&&e._writableState.finished,p=function(){l=!1,u=!0,s||d.call(e)},f=e._readableState&&e._readableState.endEmitted,g=function(){s=!1,f=!0,l||d.call(e)},_=function(t){d.call(e,t)},h=function(){var t;return s&&!f?(e._readableState&&e._readableState.ended||(t=new i),d.call(e,t)):l&&!u?(e._writableState&&e._writableState.ended||(t=new i),d.call(e,t)):void 0},m=function(){e.req.on(\"finish\",p)};return a(e)?(e.on(\"complete\",p),e.on(\"abort\",h),e.req?m():e.on(\"request\",m)):l&&!e._writableState&&(e.on(\"end\",c),e.on(\"close\",c)),e.on(\"end\",g),e.on(\"finish\",p),!1!==t.error&&e.on(\"error\",_),e.on(\"close\",h),function(){e.removeListener(\"complete\",p),e.removeListener(\"abort\",h),e.removeListener(\"request\",m),e.req&&e.req.removeListener(\"finish\",p),e.removeListener(\"end\",c),e.removeListener(\"close\",c),e.removeListener(\"finish\",p),e.removeListener(\"end\",g),e.removeListener(\"error\",_),e.removeListener(\"close\",h)}}var i=e(\"../../../errors\").codes.ERR_STREAM_PREMATURE_CLOSE;t.exports=o},{\"../../../errors\":15}],25:[function(e,t){t.exports=function(){throw new Error(\"Readable.from is not available in the browser\")}},{}],26:[function(e,t){'use strict';function n(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}function r(e){if(e)throw e}function a(e){return e.setHeader&&\"function\"==typeof e.abort}function o(t,r,o,i){i=n(i);var d=!1;t.on(\"close\",function(){d=!0}),l===void 0&&(l=e(\"./end-of-stream\")),l(t,{readable:r,writable:o},function(e){return e?i(e):void(d=!0,i())});var s=!1;return function(e){if(!d)return s?void 0:(s=!0,a(t)?t.abort():\"function\"==typeof t.destroy?t.destroy():void i(e||new p(\"pipe\")))}}function i(e){e()}function d(e,t){return e.pipe(t)}function s(e){return e.length?\"function\"==typeof e[e.length-1]?e.pop():r:r}var l,c=e(\"../../../errors\").codes,u=c.ERR_MISSING_ARGS,p=c.ERR_STREAM_DESTROYED;t.exports=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=s(t);if(Array.isArray(t[0])&&(t=t[0]),2>t.length)throw new u(\"streams\");var a,l=t.map(function(e,n){var d=n<t.length-1;return o(e,d,0<n,function(e){a||(a=e),e&&l.forEach(i),d||(l.forEach(i),r(a))})});return t.reduce(d)}},{\"../../../errors\":15,\"./end-of-stream\":24}],27:[function(e,n){'use strict';function r(e,t,n){return null==e.highWaterMark?t?e[n]:null:e.highWaterMark}var a=e(\"../../../errors\").codes.ERR_INVALID_OPT_VALUE;n.exports={getHighWaterMark:function(e,n,o,i){var d=r(n,i,o);if(null!=d){if(!(isFinite(d)&&t(d)===d)||0>d){var s=i?o:\"highWaterMark\";throw new a(s,d)}return t(d)}return e.objectMode?16:16384}}},{\"../../../errors\":15}],28:[function(e,t){t.exports=e(\"events\").EventEmitter},{events:7}],29:[function(e,t,n){n=t.exports=e(\"./lib/_stream_readable.js\"),n.Stream=n,n.Readable=n,n.Writable=e(\"./lib/_stream_writable.js\"),n.Duplex=e(\"./lib/_stream_duplex.js\"),n.Transform=e(\"./lib/_stream_transform.js\"),n.PassThrough=e(\"./lib/_stream_passthrough.js\"),n.finished=e(\"./lib/internal/streams/end-of-stream.js\"),n.pipeline=e(\"./lib/internal/streams/pipeline.js\")},{\"./lib/_stream_duplex.js\":16,\"./lib/_stream_passthrough.js\":17,\"./lib/_stream_readable.js\":18,\"./lib/_stream_transform.js\":19,\"./lib/_stream_writable.js\":20,\"./lib/internal/streams/end-of-stream.js\":24,\"./lib/internal/streams/pipeline.js\":26}],30:[function(e,t,n){function r(e,t){for(var n in e)t[n]=e[n]}function a(e,t,n){return i(e,t,n)}/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */var o=e(\"buffer\"),i=o.Buffer;i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=o:(r(o,n),n.Buffer=a),a.prototype=Object.create(i.prototype),r(i,a),a.from=function(e,t,n){if(\"number\"==typeof e)throw new TypeError(\"Argument must not be a number\");return i(e,t,n)},a.alloc=function(e,t,n){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");var r=i(e);return void 0===t?r.fill(0):\"string\"==typeof n?r.fill(t,n):r.fill(t),r},a.allocUnsafe=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return i(e)},a.allocUnsafeSlow=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return o.SlowBuffer(e)}},{buffer:3}],31:[function(e,t,n){'use strict';function r(e){if(!e)return\"utf8\";for(var t;;)switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase(),t=!0;}}function a(e){var t=r(e);if(\"string\"!=typeof t&&(m.isEncoding===b||!b(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}function o(e){this.encoding=a(e);var t;switch(this.encoding){case\"utf16le\":this.text=u,this.end=p,t=4;break;case\"utf8\":this.fillLast=c,t=4;break;case\"base64\":this.text=f,this.end=g,t=3;break;default:return this.write=_,void(this.end=h);}this.lastNeed=0,this.lastTotal=0,this.lastChar=m.allocUnsafe(t)}function d(e){if(127>=e)return 0;return 6==e>>5?2:14==e>>4?3:30==e>>3?4:2==e>>6?-1:-2}function s(e,t,n){var r=t.length-1;if(r<n)return 0;var a=d(t[r]);return 0<=a?(0<a&&(e.lastNeed=a-1),a):--r<n||-2===a?0:(a=d(t[r]),0<=a)?(0<a&&(e.lastNeed=a-2),a):--r<n||-2===a?0:(a=d(t[r]),0<=a?(0<a&&(2===a?a=0:e.lastNeed=a-3),a):0)}function l(e,t){if(128!=(192&t[0]))return e.lastNeed=0,\"\\uFFFD\";if(1<e.lastNeed&&1<t.length){if(128!=(192&t[1]))return e.lastNeed=1,\"\\uFFFD\";if(2<e.lastNeed&&2<t.length&&128!=(192&t[2]))return e.lastNeed=2,\"\\uFFFD\"}}function c(e){var t=this.lastTotal-this.lastNeed,n=l(this,e,t);return void 0===n?this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):void(e.copy(this.lastChar,t,0,e.length),this.lastNeed-=e.length):n}function u(e,t){if(0==(e.length-t)%2){var n=e.toString(\"utf16le\",t);if(n){var r=n.charCodeAt(n.length-1);if(55296<=r&&56319>=r)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString(\"utf16le\",t,e.length-1)}function p(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,n)}return t}function f(e,t){var r=(e.length-t)%3;return 0==r?e.toString(\"base64\",t):(this.lastNeed=3-r,this.lastTotal=3,1==r?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString(\"base64\",t,e.length-r))}function g(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+this.lastChar.toString(\"base64\",0,3-this.lastNeed):t}function _(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):\"\"}var m=e(\"safe-buffer\").Buffer,b=m.isEncoding||function(e){switch(e=\"\"+e,e&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return!0;default:return!1;}};n.StringDecoder=o,o.prototype.write=function(e){if(0===e.length)return\"\";var t,n;if(this.lastNeed){if(t=this.fillLast(e),void 0===t)return\"\";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||\"\"},o.prototype.end=function(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+\"\\uFFFD\":t},o.prototype.text=function(e,t){var n=s(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=n;var r=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,r),e.toString(\"utf8\",t,r)},o.prototype.fillLast=function(e){return this.lastNeed<=e.length?(e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):void(e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length)}},{\"safe-buffer\":30}],32:[function(e,t){(function(e){(function(){function n(t){try{if(!e.localStorage)return!1}catch(e){return!1}var n=e.localStorage[t];return null!=n&&\"true\"===(n+\"\").toLowerCase()}t.exports=function(e,t){function r(){if(!a){if(n(\"throwDeprecation\"))throw new Error(t);else n(\"traceDeprecation\")?console.trace(t):console.warn(t);a=!0}return e.apply(this,arguments)}if(n(\"noDeprecation\"))return e;var a=!1;return r}}).call(this)}).call(this,\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{}],\"/\":[function(e,t){function n(e){return e.replace(/a=ice-options:trickle\\s\\n/g,\"\")}function r(e){console.warn(e)}/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */const a=e(\"debug\")(\"simple-peer\"),o=e(\"get-browser-rtc\"),i=e(\"randombytes\"),d=e(\"readable-stream\"),s=e(\"queue-microtask\"),l=e(\"err-code\"),{Buffer:c}=e(\"buffer\"),u=65536;class p extends d.Duplex{constructor(e){if(e=Object.assign({allowHalfOpen:!1},e),super(e),this._id=i(4).toString(\"hex\").slice(0,7),this._debug(\"new peer %o\",e),this.channelName=e.initiator?e.channelName||i(20).toString(\"hex\"):null,this.initiator=e.initiator||!1,this.channelConfig=e.channelConfig||p.channelConfig,this.channelNegotiated=this.channelConfig.negotiated,this.config=Object.assign({},p.config,e.config),this.offerOptions=e.offerOptions||{},this.answerOptions=e.answerOptions||{},this.sdpTransform=e.sdpTransform||(e=>e),this.streams=e.streams||(e.stream?[e.stream]:[]),this.trickle=void 0===e.trickle||e.trickle,this.allowHalfTrickle=void 0!==e.allowHalfTrickle&&e.allowHalfTrickle,this.iceCompleteTimeout=e.iceCompleteTimeout||5000,this.destroyed=!1,this.destroying=!1,this._connected=!1,this.remoteAddress=void 0,this.remoteFamily=void 0,this.remotePort=void 0,this.localAddress=void 0,this.localFamily=void 0,this.localPort=void 0,this._wrtc=e.wrtc&&\"object\"==typeof e.wrtc?e.wrtc:o(),!this._wrtc)if(\"undefined\"==typeof window)throw l(new Error(\"No WebRTC support: Specify `opts.wrtc` option in this environment\"),\"ERR_WEBRTC_SUPPORT\");else throw l(new Error(\"No WebRTC support: Not a supported browser\"),\"ERR_WEBRTC_SUPPORT\");this._pcReady=!1,this._channelReady=!1,this._iceComplete=!1,this._iceCompleteTimer=null,this._channel=null,this._pendingCandidates=[],this._isNegotiating=!1,this._firstNegotiation=!0,this._batchedNegotiation=!1,this._queuedNegotiation=!1,this._sendersAwaitingStable=[],this._senderMap=new Map,this._closingInterval=null,this._remoteTracks=[],this._remoteStreams=[],this._chunk=null,this._cb=null,this._interval=null;try{this._pc=new this._wrtc.RTCPeerConnection(this.config)}catch(e){return void this.destroy(l(e,\"ERR_PC_CONSTRUCTOR\"))}this._isReactNativeWebrtc=\"number\"==typeof this._pc._peerConnectionId,this._pc.oniceconnectionstatechange=()=>{this._onIceStateChange()},this._pc.onicegatheringstatechange=()=>{this._onIceStateChange()},this._pc.onconnectionstatechange=()=>{this._onConnectionStateChange()},this._pc.onsignalingstatechange=()=>{this._onSignalingStateChange()},this._pc.onicecandidate=e=>{this._onIceCandidate(e)},\"object\"==typeof this._pc.peerIdentity&&this._pc.peerIdentity.catch(e=>{this.destroy(l(e,\"ERR_PC_PEER_IDENTITY\"))}),this.initiator||this.channelNegotiated?this._setupData({channel:this._pc.createDataChannel(this.channelName,this.channelConfig)}):this._pc.ondatachannel=e=>{this._setupData(e)},this.streams&&this.streams.forEach(e=>{this.addStream(e)}),this._pc.ontrack=e=>{this._onTrack(e)},this._debug(\"initial negotiation\"),this._needsNegotiation(),this._onFinishBound=()=>{this._onFinish()},this.once(\"finish\",this._onFinishBound)}get bufferSize(){return this._channel&&this._channel.bufferedAmount||0}get connected(){return this._connected&&\"open\"===this._channel.readyState}address(){return{port:this.localPort,family:this.localFamily,address:this.localAddress}}signal(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot signal after peer is destroyed\"),\"ERR_DESTROYED\");if(\"string\"==typeof e)try{e=JSON.parse(e)}catch(t){e={}}this._debug(\"signal()\"),e.renegotiate&&this.initiator&&(this._debug(\"got request to renegotiate\"),this._needsNegotiation()),e.transceiverRequest&&this.initiator&&(this._debug(\"got request for transceiver\"),this.addTransceiver(e.transceiverRequest.kind,e.transceiverRequest.init)),e.candidate&&(this._pc.remoteDescription&&this._pc.remoteDescription.type?this._addIceCandidate(e.candidate):this._pendingCandidates.push(e.candidate)),e.sdp&&this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(e)).then(()=>{this.destroyed||(this._pendingCandidates.forEach(e=>{this._addIceCandidate(e)}),this._pendingCandidates=[],\"offer\"===this._pc.remoteDescription.type&&this._createAnswer())}).catch(e=>{this.destroy(l(e,\"ERR_SET_REMOTE_DESCRIPTION\"))}),e.sdp||e.candidate||e.renegotiate||e.transceiverRequest||this.destroy(l(new Error(\"signal() called with invalid signal data\"),\"ERR_SIGNALING\"))}}_addIceCandidate(e){const t=new this._wrtc.RTCIceCandidate(e);this._pc.addIceCandidate(t).catch(e=>{!t.address||t.address.endsWith(\".local\")?r(\"Ignoring unsupported ICE candidate.\"):this.destroy(l(e,\"ERR_ADD_ICE_CANDIDATE\"))})}send(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot send after peer is destroyed\"),\"ERR_DESTROYED\");this._channel.send(e)}}addTransceiver(e,t){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot addTransceiver after peer is destroyed\"),\"ERR_DESTROYED\");if(this._debug(\"addTransceiver()\"),this.initiator)try{this._pc.addTransceiver(e,t),this._needsNegotiation()}catch(e){this.destroy(l(e,\"ERR_ADD_TRANSCEIVER\"))}else this.emit(\"signal\",{type:\"transceiverRequest\",transceiverRequest:{kind:e,init:t}})}}addStream(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot addStream after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"addStream()\"),e.getTracks().forEach(t=>{this.addTrack(t,e)})}}addTrack(e,t){if(this.destroying)return;if(this.destroyed)throw l(new Error(\"cannot addTrack after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"addTrack()\");const n=this._senderMap.get(e)||new Map;let r=n.get(t);if(!r)r=this._pc.addTrack(e,t),n.set(t,r),this._senderMap.set(e,n),this._needsNegotiation();else if(r.removed)throw l(new Error(\"Track has been removed. You should enable/disable tracks that you want to re-add.\"),\"ERR_SENDER_REMOVED\");else throw l(new Error(\"Track has already been added to that stream.\"),\"ERR_SENDER_ALREADY_ADDED\")}replaceTrack(e,t,n){if(this.destroying)return;if(this.destroyed)throw l(new Error(\"cannot replaceTrack after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"replaceTrack()\");const r=this._senderMap.get(e),a=r?r.get(n):null;if(!a)throw l(new Error(\"Cannot replace track that was never added.\"),\"ERR_TRACK_NOT_ADDED\");t&&this._senderMap.set(t,r),null==a.replaceTrack?this.destroy(l(new Error(\"replaceTrack is not supported in this browser\"),\"ERR_UNSUPPORTED_REPLACETRACK\")):a.replaceTrack(t)}removeTrack(e,t){if(this.destroying)return;if(this.destroyed)throw l(new Error(\"cannot removeTrack after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"removeSender()\");const n=this._senderMap.get(e),r=n?n.get(t):null;if(!r)throw l(new Error(\"Cannot remove track that was never added.\"),\"ERR_TRACK_NOT_ADDED\");try{r.removed=!0,this._pc.removeTrack(r)}catch(e){\"NS_ERROR_UNEXPECTED\"===e.name?this._sendersAwaitingStable.push(r):this.destroy(l(e,\"ERR_REMOVE_TRACK\"))}this._needsNegotiation()}removeStream(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot removeStream after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"removeSenders()\"),e.getTracks().forEach(t=>{this.removeTrack(t,e)})}}_needsNegotiation(){this._debug(\"_needsNegotiation\"),this._batchedNegotiation||(this._batchedNegotiation=!0,s(()=>{this._batchedNegotiation=!1,this.initiator||!this._firstNegotiation?(this._debug(\"starting batched negotiation\"),this.negotiate()):this._debug(\"non-initiator initial negotiation request discarded\"),this._firstNegotiation=!1}))}negotiate(){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot negotiate after peer is destroyed\"),\"ERR_DESTROYED\");this.initiator?this._isNegotiating?(this._queuedNegotiation=!0,this._debug(\"already negotiating, queueing\")):(this._debug(\"start negotiation\"),setTimeout(()=>{this._createOffer()},0)):this._isNegotiating?(this._queuedNegotiation=!0,this._debug(\"already negotiating, queueing\")):(this._debug(\"requesting negotiation from initiator\"),this.emit(\"signal\",{type:\"renegotiate\",renegotiate:!0})),this._isNegotiating=!0}}destroy(e){this._destroy(e,()=>{})}_destroy(e,t){this.destroyed||this.destroying||(this.destroying=!0,this._debug(\"destroying (error: %s)\",e&&(e.message||e)),s(()=>{if(this.destroyed=!0,this.destroying=!1,this._debug(\"destroy (error: %s)\",e&&(e.message||e)),this.readable=this.writable=!1,this._readableState.ended||this.push(null),this._writableState.finished||this.end(),this._connected=!1,this._pcReady=!1,this._channelReady=!1,this._remoteTracks=null,this._remoteStreams=null,this._senderMap=null,clearInterval(this._closingInterval),this._closingInterval=null,clearInterval(this._interval),this._interval=null,this._chunk=null,this._cb=null,this._onFinishBound&&this.removeListener(\"finish\",this._onFinishBound),this._onFinishBound=null,this._channel){try{this._channel.close()}catch(e){}this._channel.onmessage=null,this._channel.onopen=null,this._channel.onclose=null,this._channel.onerror=null}if(this._pc){try{this._pc.close()}catch(e){}this._pc.oniceconnectionstatechange=null,this._pc.onicegatheringstatechange=null,this._pc.onsignalingstatechange=null,this._pc.onicecandidate=null,this._pc.ontrack=null,this._pc.ondatachannel=null}this._pc=null,this._channel=null,e&&this.emit(\"error\",e),this.emit(\"close\"),t()}))}_setupData(e){if(!e.channel)return this.destroy(l(new Error(\"Data channel event is missing `channel` property\"),\"ERR_DATA_CHANNEL\"));this._channel=e.channel,this._channel.binaryType=\"arraybuffer\",\"number\"==typeof this._channel.bufferedAmountLowThreshold&&(this._channel.bufferedAmountLowThreshold=u),this.channelName=this._channel.label,this._channel.onmessage=e=>{this._onChannelMessage(e)},this._channel.onbufferedamountlow=()=>{this._onChannelBufferedAmountLow()},this._channel.onopen=()=>{this._onChannelOpen()},this._channel.onclose=()=>{this._onChannelClose()},this._channel.onerror=e=>{const t=e.error instanceof Error?e.error:new Error(`Datachannel error: ${e.message} ${e.filename}:${e.lineno}:${e.colno}`);this.destroy(l(t,\"ERR_DATA_CHANNEL\"))};let t=!1;this._closingInterval=setInterval(()=>{this._channel&&\"closing\"===this._channel.readyState?(t&&this._onChannelClose(),t=!0):t=!1},5000)}_read(){}_write(e,t,n){if(this.destroyed)return n(l(new Error(\"cannot write after peer is destroyed\"),\"ERR_DATA_CHANNEL\"));if(this._connected){try{this.send(e)}catch(e){return this.destroy(l(e,\"ERR_DATA_CHANNEL\"))}this._channel.bufferedAmount>u?(this._debug(\"start backpressure: bufferedAmount %d\",this._channel.bufferedAmount),this._cb=n):n(null)}else this._debug(\"write before connect\"),this._chunk=e,this._cb=n}_onFinish(){if(!this.destroyed){const e=()=>{setTimeout(()=>this.destroy(),1e3)};this._connected?e():this.once(\"connect\",e)}}_startIceCompleteTimeout(){this.destroyed||this._iceCompleteTimer||(this._debug(\"started iceComplete timeout\"),this._iceCompleteTimer=setTimeout(()=>{this._iceComplete||(this._iceComplete=!0,this._debug(\"iceComplete timeout completed\"),this.emit(\"iceTimeout\"),this.emit(\"_iceComplete\"))},this.iceCompleteTimeout))}_createOffer(){this.destroyed||this._pc.createOffer(this.offerOptions).then(e=>{if(this.destroyed)return;this.trickle||this.allowHalfTrickle||(e.sdp=n(e.sdp)),e.sdp=this.sdpTransform(e.sdp);const t=()=>{if(!this.destroyed){const t=this._pc.localDescription||e;this._debug(\"signal\"),this.emit(\"signal\",{type:t.type,sdp:t.sdp})}};this._pc.setLocalDescription(e).then(()=>{this._debug(\"createOffer success\"),this.destroyed||(this.trickle||this._iceComplete?t():this.once(\"_iceComplete\",t))}).catch(e=>{this.destroy(l(e,\"ERR_SET_LOCAL_DESCRIPTION\"))})}).catch(e=>{this.destroy(l(e,\"ERR_CREATE_OFFER\"))})}_requestMissingTransceivers(){this._pc.getTransceivers&&this._pc.getTransceivers().forEach(e=>{e.mid||!e.sender.track||e.requested||(e.requested=!0,this.addTransceiver(e.sender.track.kind))})}_createAnswer(){this.destroyed||this._pc.createAnswer(this.answerOptions).then(e=>{if(this.destroyed)return;this.trickle||this.allowHalfTrickle||(e.sdp=n(e.sdp)),e.sdp=this.sdpTransform(e.sdp);const t=()=>{if(!this.destroyed){const t=this._pc.localDescription||e;this._debug(\"signal\"),this.emit(\"signal\",{type:t.type,sdp:t.sdp}),this.initiator||this._requestMissingTransceivers()}};this._pc.setLocalDescription(e).then(()=>{this.destroyed||(this.trickle||this._iceComplete?t():this.once(\"_iceComplete\",t))}).catch(e=>{this.destroy(l(e,\"ERR_SET_LOCAL_DESCRIPTION\"))})}).catch(e=>{this.destroy(l(e,\"ERR_CREATE_ANSWER\"))})}_onConnectionStateChange(){this.destroyed||\"failed\"===this._pc.connectionState&&this.destroy(l(new Error(\"Connection failed.\"),\"ERR_CONNECTION_FAILURE\"))}_onIceStateChange(){if(this.destroyed)return;const e=this._pc.iceConnectionState,t=this._pc.iceGatheringState;this._debug(\"iceStateChange (connection: %s) (gathering: %s)\",e,t),this.emit(\"iceStateChange\",e,t),(\"connected\"===e||\"completed\"===e)&&(this._pcReady=!0,this._maybeReady()),\"failed\"===e&&this.destroy(l(new Error(\"Ice connection failed.\"),\"ERR_ICE_CONNECTION_FAILURE\")),\"closed\"===e&&this.destroy(l(new Error(\"Ice connection closed.\"),\"ERR_ICE_CONNECTION_CLOSED\"))}getStats(e){const t=e=>(\"[object Array]\"===Object.prototype.toString.call(e.values)&&e.values.forEach(t=>{Object.assign(e,t)}),e);0===this._pc.getStats.length||this._isReactNativeWebrtc?this._pc.getStats().then(n=>{const r=[];n.forEach(e=>{r.push(t(e))}),e(null,r)},t=>e(t)):0<this._pc.getStats.length?this._pc.getStats(n=>{if(this.destroyed)return;const r=[];n.result().forEach(e=>{const n={};e.names().forEach(t=>{n[t]=e.stat(t)}),n.id=e.id,n.type=e.type,n.timestamp=e.timestamp,r.push(t(n))}),e(null,r)},t=>e(t)):e(null,[])}_maybeReady(){if(this._debug(\"maybeReady pc %s channel %s\",this._pcReady,this._channelReady),this._connected||this._connecting||!this._pcReady||!this._channelReady)return;this._connecting=!0;const e=()=>{this.destroyed||this.getStats((t,n)=>{if(this.destroyed)return;t&&(n=[]);const r={},a={},o={};let i=!1;n.forEach(e=>{(\"remotecandidate\"===e.type||\"remote-candidate\"===e.type)&&(r[e.id]=e),(\"localcandidate\"===e.type||\"local-candidate\"===e.type)&&(a[e.id]=e),(\"candidatepair\"===e.type||\"candidate-pair\"===e.type)&&(o[e.id]=e)});const d=e=>{i=!0;let t=a[e.localCandidateId];t&&(t.ip||t.address)?(this.localAddress=t.ip||t.address,this.localPort=+t.port):t&&t.ipAddress?(this.localAddress=t.ipAddress,this.localPort=+t.portNumber):\"string\"==typeof e.googLocalAddress&&(t=e.googLocalAddress.split(\":\"),this.localAddress=t[0],this.localPort=+t[1]),this.localAddress&&(this.localFamily=this.localAddress.includes(\":\")?\"IPv6\":\"IPv4\");let n=r[e.remoteCandidateId];n&&(n.ip||n.address)?(this.remoteAddress=n.ip||n.address,this.remotePort=+n.port):n&&n.ipAddress?(this.remoteAddress=n.ipAddress,this.remotePort=+n.portNumber):\"string\"==typeof e.googRemoteAddress&&(n=e.googRemoteAddress.split(\":\"),this.remoteAddress=n[0],this.remotePort=+n[1]),this.remoteAddress&&(this.remoteFamily=this.remoteAddress.includes(\":\")?\"IPv6\":\"IPv4\"),this._debug(\"connect local: %s:%s remote: %s:%s\",this.localAddress,this.localPort,this.remoteAddress,this.remotePort)};if(n.forEach(e=>{\"transport\"===e.type&&e.selectedCandidatePairId&&d(o[e.selectedCandidatePairId]),(\"googCandidatePair\"===e.type&&\"true\"===e.googActiveConnection||(\"candidatepair\"===e.type||\"candidate-pair\"===e.type)&&e.selected)&&d(e)}),!i&&(!Object.keys(o).length||Object.keys(a).length))return void setTimeout(e,100);if(this._connecting=!1,this._connected=!0,this._chunk){try{this.send(this._chunk)}catch(e){return this.destroy(l(e,\"ERR_DATA_CHANNEL\"))}this._chunk=null,this._debug(\"sent chunk from \\\"write before connect\\\"\");const e=this._cb;this._cb=null,e(null)}\"number\"!=typeof this._channel.bufferedAmountLowThreshold&&(this._interval=setInterval(()=>this._onInterval(),150),this._interval.unref&&this._interval.unref()),this._debug(\"connect\"),this.emit(\"connect\")})};e()}_onInterval(){this._cb&&this._channel&&!(this._channel.bufferedAmount>u)&&this._onChannelBufferedAmountLow()}_onSignalingStateChange(){this.destroyed||(\"stable\"===this._pc.signalingState&&(this._isNegotiating=!1,this._debug(\"flushing sender queue\",this._sendersAwaitingStable),this._sendersAwaitingStable.forEach(e=>{this._pc.removeTrack(e),this._queuedNegotiation=!0}),this._sendersAwaitingStable=[],this._queuedNegotiation?(this._debug(\"flushing negotiation queue\"),this._queuedNegotiation=!1,this._needsNegotiation()):(this._debug(\"negotiated\"),this.emit(\"negotiated\"))),this._debug(\"signalingStateChange %s\",this._pc.signalingState),this.emit(\"signalingStateChange\",this._pc.signalingState))}_onIceCandidate(e){this.destroyed||(e.candidate&&this.trickle?this.emit(\"signal\",{type:\"candidate\",candidate:{candidate:e.candidate.candidate,sdpMLineIndex:e.candidate.sdpMLineIndex,sdpMid:e.candidate.sdpMid}}):!e.candidate&&!this._iceComplete&&(this._iceComplete=!0,this.emit(\"_iceComplete\")),e.candidate&&this._startIceCompleteTimeout())}_onChannelMessage(e){if(this.destroyed)return;let t=e.data;t instanceof ArrayBuffer&&(t=c.from(t)),this.push(t)}_onChannelBufferedAmountLow(){if(!this.destroyed&&this._cb){this._debug(\"ending backpressure: bufferedAmount %d\",this._channel.bufferedAmount);const e=this._cb;this._cb=null,e(null)}}_onChannelOpen(){this._connected||this.destroyed||(this._debug(\"on channel open\"),this._channelReady=!0,this._maybeReady())}_onChannelClose(){this.destroyed||(this._debug(\"on channel close\"),this.destroy())}_onTrack(e){this.destroyed||e.streams.forEach(t=>{this._debug(\"on track\"),this.emit(\"track\",e.track,t),this._remoteTracks.push({track:e.track,stream:t}),this._remoteStreams.some(e=>e.id===t.id)||(this._remoteStreams.push(t),s(()=>{this._debug(\"on stream\"),this.emit(\"stream\",t)}))})}_debug(){const e=[].slice.call(arguments);e[0]=\"[\"+this._id+\"] \"+e[0],a.apply(null,e)}}p.WEBRTC_SUPPORT=!!o(),p.config={iceServers:[{urls:[\"stun:stun.l.google.com:19302\",\"stun:global.stun.twilio.com:3478\"]}],sdpSemantics:\"unified-plan\"},p.channelConfig={},t.exports=p},{buffer:3,debug:4,\"err-code\":6,\"get-browser-rtc\":8,\"queue-microtask\":13,randombytes:14,\"readable-stream\":29}]},{},[])(\"/\")});","module.exports = fallback\n\nfunction _add (a, b) {\n  var rl = a.l + b.l\n  var a2 = {\n    h: a.h + b.h + (rl / 2 >>> 31) >>> 0,\n    l: rl >>> 0\n  }\n  a.h = a2.h\n  a.l = a2.l\n}\n\nfunction _xor (a, b) {\n  a.h ^= b.h\n  a.h >>>= 0\n  a.l ^= b.l\n  a.l >>>= 0\n}\n\nfunction _rotl (a, n) {\n  var a2 = {\n    h: a.h << n | a.l >>> (32 - n),\n    l: a.l << n | a.h >>> (32 - n)\n  }\n  a.h = a2.h\n  a.l = a2.l\n}\n\nfunction _rotl32 (a) {\n  var al = a.l\n  a.l = a.h\n  a.h = al\n}\n\nfunction _compress (v0, v1, v2, v3) {\n  _add(v0, v1)\n  _add(v2, v3)\n  _rotl(v1, 13)\n  _rotl(v3, 16)\n  _xor(v1, v0)\n  _xor(v3, v2)\n  _rotl32(v0)\n  _add(v2, v1)\n  _add(v0, v3)\n  _rotl(v1, 17)\n  _rotl(v3, 21)\n  _xor(v1, v2)\n  _xor(v3, v0)\n  _rotl32(v2)\n}\n\nfunction _get_int (a, offset) {\n  return (a[offset + 3] << 24) | (a[offset + 2] << 16) | (a[offset + 1] << 8) | a[offset]\n}\n\nfunction fallback (out, m, key) { // modified from https://github.com/jedisct1/siphash-js to use uint8arrays\n  var k0 = {h: _get_int(key, 4), l: _get_int(key, 0)}\n  var k1 = {h: _get_int(key, 12), l: _get_int(key, 8)}\n  var v0 = {h: k0.h, l: k0.l}\n  var v2 = k0\n  var v1 = {h: k1.h, l: k1.l}\n  var v3 = k1\n  var mi\n  var mp = 0\n  var ml = m.length\n  var ml7 = ml - 7\n  var buf = new Uint8Array(new ArrayBuffer(8))\n\n  _xor(v0, {h: 0x736f6d65, l: 0x70736575})\n  _xor(v1, {h: 0x646f7261, l: 0x6e646f6d})\n  _xor(v2, {h: 0x6c796765, l: 0x6e657261})\n  _xor(v3, {h: 0x74656462, l: 0x79746573})\n\n  while (mp < ml7) {\n    mi = {h: _get_int(m, mp + 4), l: _get_int(m, mp)}\n    _xor(v3, mi)\n    _compress(v0, v1, v2, v3)\n    _compress(v0, v1, v2, v3)\n    _xor(v0, mi)\n    mp += 8\n  }\n\n  buf[7] = ml\n  var ic = 0\n  while (mp < ml) {\n    buf[ic++] = m[mp++]\n  }\n  while (ic < 7) {\n    buf[ic++] = 0\n  }\n\n  mi = {\n    h: buf[7] << 24 | buf[6] << 16 | buf[5] << 8 | buf[4],\n    l: buf[3] << 24 | buf[2] << 16 | buf[1] << 8 | buf[0]\n  }\n\n  _xor(v3, mi)\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n  _xor(v0, mi)\n  _xor(v2, { h: 0, l: 0xff })\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n\n  var h = v0\n  _xor(h, v1)\n  _xor(h, v2)\n  _xor(h, v3)\n\n  out[0] = h.l & 0xff\n  out[1] = (h.l >> 8) & 0xff\n  out[2] = (h.l >> 16) & 0xff\n  out[3] = (h.l >> 24) & 0xff\n  out[4] = h.h & 0xff\n  out[5] = (h.h >> 8) & 0xff\n  out[6] = (h.h >> 16) & 0xff\n  out[7] = (h.h >> 24) & 0xff\n}\n","var assert = require('nanoassert')\nvar wasm = typeof WebAssembly !== 'undefined' && require('./siphash24')()\nvar fallback = require('./fallback')\n\nmodule.exports = siphash24\n\nvar BYTES = siphash24.BYTES = 8\nvar KEYBYTES = siphash24.KEYBYTES = 16\n\nsiphash24.WASM_SUPPORTED = !!wasm\nsiphash24.WASM_LOADED = !!wasm\n\nvar memory = new Uint8Array(wasm ? wasm.memory.buffer : 0)\n\nfunction siphash24 (data, key, out, noAssert) {\n  if (!out) out = new Uint8Array(8)\n\n  if (noAssert !== true) {\n    assert(out.length >= BYTES, 'output must be at least ' + BYTES)\n    assert(key.length >= KEYBYTES, 'key must be at least ' + KEYBYTES)\n  }\n\n  if (wasm) {\n    if (data.length + 24 > memory.length) realloc(data.length + 24)\n    memory.set(key, 8)\n    memory.set(data, 24)\n    wasm.siphash(24, data.length)\n    out.set(memory.subarray(0, 8))\n  } else {\n    fallback(out, data, key)\n  }\n\n  return out\n}\n\nfunction realloc (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - memory.length) / 65536)))\n  memory = new Uint8Array(wasm.memory.buffer)\n}\n","var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./siphash24.wat\nvar require_siphash24 = __commonJS({\n  \"wasm-binary:./siphash24.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"AGFzbQEAAAABBgFgAn9/AAMCAQAFBQEBCpBOBxQCBm1lbW9yeQIAB3NpcGhhc2gAAArdCAHaCAIIfgJ/QvXKzYPXrNu38wAhAkLt3pHzlszct+QAIQNC4eSV89bs2bzsACEEQvPK0cunjNmy9AAhBUEIKQMAIQdBECkDACEIIAGtQjiGIQYgAUEHcSELIAAgAWogC2shCiAFIAiFIQUgBCAHhSEEIAMgCIUhAyACIAeFIQICQANAIAAgCkYNASAAKQMAIQkgBSAJhSEFIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAmFIQIgAEEIaiEADAALCwJAAkACQAJAAkACQAJAAkAgCw4HBwYFBAMCAQALIAYgADEABkIwhoQhBgsgBiAAMQAFQiiGhCEGCyAGIAAxAARCIIaEIQYLIAYgADEAA0IYhoQhBgsgBiAAMQACQhCGhCEGCyAGIAAxAAFCCIaEIQYLIAYgADEAAIQhBgsgBSAGhSEFIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAaFIQIgBEL/AYUhBCACIAN8IQIgA0INiSEDIAMgAoUhAyACQiCJIQIgBCAFfCEEIAVCEIkhBSAFIASFIQUgAiAFfCECIAVCFYkhBSAFIAKFIQUgBCADfCEEIANCEYkhAyADIASFIQMgBEIgiSEEIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAN8IQIgA0INiSEDIAMgAoUhAyACQiCJIQIgBCAFfCEEIAVCEIkhBSAFIASFIQUgAiAFfCECIAVCFYkhBSAFIAKFIQUgBCADfCEEIANCEYkhAyADIASFIQMgBEIgiSEEQQAgAiADIAQgBYWFhTcDAAs=\");\n  }\n});\n\n// wasm-module:./siphash24.wat\nvar bytes = require_siphash24();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n","/* eslint-disable camelcase */\nconst { crypto_stream_chacha20_ietf, crypto_stream_chacha20_ietf_xor_ic } = require('./crypto_stream_chacha20')\nconst { crypto_verify_16 } = require('./crypto_verify')\nconst Poly1305 = require('./internal/poly1305')\nconst assert = require('nanoassert')\n\nconst crypto_aead_chacha20poly1305_ietf_KEYBYTES = 32\nconst crypto_aead_chacha20poly1305_ietf_NSECBYTES = 0\nconst crypto_aead_chacha20poly1305_ietf_NPUBBYTES = 12\nconst crypto_aead_chacha20poly1305_ietf_ABYTES = 16\nconst crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\n\nconst _pad0 = new Uint8Array(16)\n\nfunction crypto_aead_chacha20poly1305_ietf_encrypt (c, m, ad, nsec, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_encrypt(c, m, new Uint8Array(0), nsec, npub, k)\n\n  assert(c.byteLength === m.byteLength + crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"ciphertext should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' longer than message\")\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n\n  const ret = crypto_aead_chacha20poly1305_ietf_encrypt_detached(c.subarray(0, m.byteLength),\n    c.subarray(m.byteLength), m, ad, nsec, npub, k)\n\n  return m.byteLength + ret\n}\n\nfunction crypto_aead_chacha20poly1305_ietf_encrypt_detached (c, mac, m, ad, nsec, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_encrypt_detached(c, mac, m, new Uint8Array(0), nsec, npub, k)\n\n  assert(c.byteLength === m.byteLength, 'ciphertext should be same length than message')\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n  assert(mac.byteLength <= crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"mac should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' long\")\n\n  const block0 = new Uint8Array(64)\n  var slen = new Uint8Array(8)\n\n  crypto_stream_chacha20_ietf(block0, npub, k)\n  const poly = new Poly1305(block0)\n  block0.fill(0)\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  crypto_stream_chacha20_ietf_xor_ic(c, m, npub, 1, k)\n\n  poly.update(c, 0, m.byteLength)\n  poly.update(_pad0, 0, (0x10 - m.byteLength) & 0xf)\n\n  write64LE(slen, 0, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  write64LE(slen, 0, m.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  poly.finish(mac, 0)\n  slen.fill(0)\n\n  return crypto_aead_chacha20poly1305_ietf_ABYTES\n}\n\nfunction crypto_aead_chacha20poly1305_ietf_decrypt (m, nsec, c, ad, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_decrypt(m, nsec, c, new Uint8Array(0), npub, k)\n\n  assert(m.byteLength === c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"message should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' shorter than ciphertext\")\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n\n  if (c.byteLength < crypto_aead_chacha20poly1305_ietf_ABYTES) throw new Error('could not verify data')\n\n  crypto_aead_chacha20poly1305_ietf_decrypt_detached(\n    m, nsec,\n    c.subarray(0, c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES),\n    c.subarray(c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES),\n    ad, npub, k)\n\n  return c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES\n}\n\nfunction crypto_aead_chacha20poly1305_ietf_decrypt_detached (m, nsec, c, mac, ad, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_decrypt_detached(m, nsec, c, mac, new Uint8Array(0), npub, k)\n\n  assert(c.byteLength === m.byteLength, 'message should be same length than ciphertext')\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n  assert(mac.byteLength <= crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"mac should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' long\")\n\n  const block0 = new Uint8Array(64)\n  const slen = new Uint8Array(8)\n  const computed_mac = new Uint8Array(crypto_aead_chacha20poly1305_ietf_ABYTES)\n\n  crypto_stream_chacha20_ietf(block0, npub, k)\n  const poly = new Poly1305(block0)\n  block0.fill(0)\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  const mlen = c.byteLength\n  poly.update(c, 0, mlen)\n  poly.update(_pad0, 0, (0x10 - mlen) & 0xf)\n\n  write64LE(slen, 0, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  write64LE(slen, 0, mlen)\n  poly.update(slen, 0, slen.byteLength)\n\n  poly.finish(computed_mac, 0)\n\n  assert(computed_mac.byteLength === 16)\n  const ret = crypto_verify_16(computed_mac, 0, mac, 0)\n\n  computed_mac.fill(0)\n  slen.fill(0)\n\n  if (!ret) {\n    m.fill(0)\n    throw new Error('could not verify data')\n  }\n\n  crypto_stream_chacha20_ietf_xor_ic(m, c, npub, 1, k)\n}\n\nfunction write64LE (buf, offset, int) {\n  buf.fill(0, 0, 8)\n\n  const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n  view.setUint32(offset, int & 0xffffffff, true)\n  view.setUint32(offset + 4, (int / 2 ** 32) & 0xffffffff, true)\n}\n\nmodule.exports = {\n  crypto_aead_chacha20poly1305_ietf_encrypt,\n  crypto_aead_chacha20poly1305_ietf_encrypt_detached,\n  crypto_aead_chacha20poly1305_ietf_decrypt,\n  crypto_aead_chacha20poly1305_ietf_decrypt_detached,\n  crypto_aead_chacha20poly1305_ietf_ABYTES,\n  crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n  crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n  crypto_aead_chacha20poly1305_ietf_NSECBYTES,\n  crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX\n}\n","/* eslint-disable camelcase */\nconst { crypto_verify_32 } = require('./crypto_verify')\nconst Sha512 = require('sha512-universal')\nconst assert = require('nanoassert')\n\nconst crypto_auth_BYTES = 32\nconst crypto_auth_KEYBYTES = 32\n\nfunction crypto_auth (out, input, k) {\n  assert(out.byteLength === crypto_auth_BYTES, \"out should be 'crypto_auth_BYTES' in length\")\n  assert(k.byteLength === crypto_auth_KEYBYTES, \"key should be 'crypto_auth_KEYBYTES' in length\")\n\n  const out0 = new Uint8Array(64)\n  const hmac = Sha512.HMAC(k)\n  hmac.update(input)\n  hmac.digest(out0)\n\n  out.set(out0.subarray(0, 32))\n}\n\nfunction crypto_auth_verify (h, input, k) {\n  assert(h.byteLength === crypto_auth_BYTES, \"h should be 'crypto_auth_BYTES' in length\")\n  assert(k.byteLength === crypto_auth_KEYBYTES, \"key should be 'crypto_auth_KEYBYTES' in length\")\n\n  const correct = Sha512.HMAC(k).update(input).digest()\n\n  return crypto_verify_32(h, 0, correct, 0)\n}\n\nmodule.exports = {\n  crypto_auth_BYTES,\n  crypto_auth_KEYBYTES,\n  crypto_auth,\n  crypto_auth_verify\n}\n","/* eslint-disable camelcase */\nconst { crypto_hash_sha512 } = require('./crypto_hash')\nconst { crypto_scalarmult, crypto_scalarmult_base } = require('./crypto_scalarmult')\nconst { randombytes } = require('./randombytes')\nconst { crypto_generichash_batch } = require('./crypto_generichash')\nconst { crypto_stream_xsalsa20_MESSAGEBYTES_MAX } = require('./crypto_stream')\nconst {\n  crypto_secretbox_open_easy,\n  crypto_secretbox_easy,\n  crypto_secretbox_detached,\n  crypto_secretbox_open_detached\n} = require('./crypto_secretbox')\nconst xsalsa20 = require('xsalsa20')\nconst assert = require('nanoassert')\n\nconst crypto_box_PUBLICKEYBYTES = 32\nconst crypto_box_SECRETKEYBYTES = 32\nconst crypto_box_NONCEBYTES = 24\nconst crypto_box_ZEROBYTES = 32\nconst crypto_box_BOXZEROBYTES = 16\nconst crypto_box_SEALBYTES = 48\nconst crypto_box_SEEDBYTES = 32\nconst crypto_box_BEFORENMBYTES = 32\nconst crypto_box_MACBYTES = 16\n\nconst crypto_box_curve25519xsalsa20poly1305_MACBYTES = 16\n\nconst crypto_box_MESSAGEBYTES_MAX =\n  crypto_stream_xsalsa20_MESSAGEBYTES_MAX -\n  crypto_box_curve25519xsalsa20poly1305_MACBYTES\n\nmodule.exports = {\n  crypto_box_easy,\n  crypto_box_open_easy,\n  crypto_box_keypair,\n  crypto_box_seed_keypair,\n  crypto_box_seal,\n  crypto_box_seal_open,\n  crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES,\n  crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES,\n  crypto_box_SEALBYTES,\n  crypto_box_SEEDBYTES,\n  crypto_box_BEFORENMBYTES,\n  crypto_box_MACBYTES\n}\n\nfunction crypto_box_keypair (pk, sk) {\n  check(pk, crypto_box_PUBLICKEYBYTES)\n  check(sk, crypto_box_SECRETKEYBYTES)\n  randombytes(sk, 32)\n  return crypto_scalarmult_base(pk, sk)\n}\nfunction crypto_box_seed_keypair (pk, sk, seed) {\n  assert(pk.byteLength === crypto_box_PUBLICKEYBYTES, \"pk should be 'crypto_box_PUBLICKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_box_SECRETKEYBYTES, \"sk should be 'crypto_box_SECRETKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_box_SEEDBYTES, \"sk should be 'crypto_box_SEEDBYTES' bytes\")\n\n  const hash = new Uint8Array(64)\n  crypto_hash_sha512(hash, seed, 32)\n  sk.set(hash.subarray(0, 32))\n  hash.fill(0)\n\n  return crypto_scalarmult_base(pk, sk)\n}\n\nfunction crypto_box_seal (c, m, pk) {\n  check(c, crypto_box_SEALBYTES + m.length)\n  check(pk, crypto_box_PUBLICKEYBYTES)\n\n  var epk = c.subarray(0, crypto_box_PUBLICKEYBYTES)\n  var esk = new Uint8Array(crypto_box_SECRETKEYBYTES)\n  crypto_box_keypair(epk, esk)\n\n  var n = new Uint8Array(crypto_box_NONCEBYTES)\n  crypto_generichash_batch(n, [epk, pk])\n\n  var s = new Uint8Array(crypto_box_PUBLICKEYBYTES)\n  crypto_scalarmult(s, esk, pk)\n\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES)\n  var zero = new Uint8Array(16)\n  xsalsa20.core_hsalsa20(k, zero, s, xsalsa20.SIGMA)\n\n  crypto_secretbox_easy(c.subarray(epk.length), m, n, k)\n\n  cleanup(esk)\n}\n\nfunction crypto_box_seal_open (m, c, pk, sk) {\n  check(c, crypto_box_SEALBYTES)\n  check(m, c.length - crypto_box_SEALBYTES)\n  check(pk, crypto_box_PUBLICKEYBYTES)\n  check(sk, crypto_box_SECRETKEYBYTES)\n\n  var epk = c.subarray(0, crypto_box_PUBLICKEYBYTES)\n\n  var n = new Uint8Array(crypto_box_NONCEBYTES)\n  crypto_generichash_batch(n, [epk, pk])\n\n  var s = new Uint8Array(crypto_box_PUBLICKEYBYTES)\n  crypto_scalarmult(s, sk, epk)\n\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES)\n  var zero = new Uint8Array(16)\n  xsalsa20.core_hsalsa20(k, zero, s, xsalsa20.SIGMA)\n\n  return crypto_secretbox_open_easy(m, c.subarray(epk.length), n, k)\n}\n\nfunction crypto_box_beforenm (k, pk, sk) {\n  const zero = new Uint8Array(16)\n  const s = new Uint8Array(32)\n\n  assert(crypto_scalarmult(s, sk, pk) === 0)\n\n  xsalsa20.core_hsalsa20(k, zero, s, xsalsa20.SIGMA)\n\n  return true\n}\n\nfunction crypto_box_detached_afternm (c, mac, m, n, k) {\n  return crypto_secretbox_detached(c, mac, m, n, k)\n}\n\nfunction crypto_box_detached (c, mac, m, n, pk, sk) {\n  check(mac, crypto_box_MACBYTES)\n  check(n, crypto_box_NONCEBYTES)\n  check(pk, crypto_box_PUBLICKEYBYTES)\n  check(sk, crypto_box_SECRETKEYBYTES)\n\n  const k = new Uint8Array(crypto_box_BEFORENMBYTES)\n\n  assert(crypto_box_beforenm(k, pk, sk))\n\n  const ret = crypto_box_detached_afternm(c, mac, m, n, k)\n  cleanup(k)\n\n  return ret\n}\n\nfunction crypto_box_easy (c, m, n, pk, sk) {\n  assert(\n    c.length >= m.length + crypto_box_MACBYTES,\n    \"c should be at least 'm.length + crypto_box_MACBYTES' bytes\"\n  )\n  assert(\n    m.length <= crypto_box_MESSAGEBYTES_MAX,\n    \"m should be at most 'crypto_box_MESSAGEBYTES_MAX' bytes\"\n  )\n\n  return crypto_box_detached(\n    c.subarray(crypto_box_MACBYTES, m.length + crypto_box_MACBYTES),\n    c.subarray(0, crypto_box_MACBYTES),\n    m,\n    n,\n    pk,\n    sk\n  )\n}\n\nfunction crypto_box_open_detached_afternm (m, c, mac, n, k) {\n  return crypto_secretbox_open_detached(m, c, mac, n, k)\n}\n\nfunction crypto_box_open_detached (m, c, mac, n, pk, sk) {\n  const k = new Uint8Array(crypto_box_BEFORENMBYTES)\n  assert(crypto_box_beforenm(k, pk, sk))\n\n  const ret = crypto_box_open_detached_afternm(m, c, mac, n, k)\n  cleanup(k)\n\n  return ret\n}\n\nfunction crypto_box_open_easy (m, c, n, pk, sk) {\n  assert(\n    c.length >= m.length + crypto_box_MACBYTES,\n    \"c should be at least 'm.length + crypto_box_MACBYTES' bytes\"\n  )\n\n  return crypto_box_open_detached(\n    m,\n    c.subarray(crypto_box_MACBYTES, m.length + crypto_box_MACBYTES),\n    c.subarray(0, crypto_box_MACBYTES),\n    n,\n    pk,\n    sk\n  )\n}\n\nfunction check (buf, len) {\n  if (!buf || (len && buf.length < len)) throw new Error('Argument must be a buffer' + (len ? ' of length ' + len : ''))\n}\n\nfunction cleanup (arr) {\n  for (let i = 0; i < arr.length; i++) arr[i] = 0\n}\n","var blake2b = require('blake2b')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nmodule.exports.crypto_generichash_PRIMITIVE = 'blake2b'\nmodule.exports.crypto_generichash_BYTES_MIN = blake2b.BYTES_MIN\nmodule.exports.crypto_generichash_BYTES_MAX = blake2b.BYTES_MAX\nmodule.exports.crypto_generichash_BYTES = blake2b.BYTES\nmodule.exports.crypto_generichash_KEYBYTES_MIN = blake2b.KEYBYTES_MIN\nmodule.exports.crypto_generichash_KEYBYTES_MAX = blake2b.KEYBYTES_MAX\nmodule.exports.crypto_generichash_KEYBYTES = blake2b.KEYBYTES\nmodule.exports.crypto_generichash_WASM_SUPPORTED = blake2b.WASM_SUPPORTED\nmodule.exports.crypto_generichash_WASM_LOADED = false\n\nmodule.exports.crypto_generichash = function (output, input, key) {\n  blake2b(output.length, key).update(input).final(output)\n}\n\nmodule.exports.crypto_generichash_ready = blake2b.ready\n\nmodule.exports.crypto_generichash_batch = function (output, inputArray, key) {\n  var ctx = blake2b(output.length, key)\n  for (var i = 0; i < inputArray.length; i++) {\n    ctx.update(inputArray[i])\n  }\n  ctx.final(output)\n}\n\nmodule.exports.crypto_generichash_instance = function (key, outlen) {\n  if (outlen == null) outlen = module.exports.crypto_generichash_BYTES\n  return blake2b(outlen, key)\n}\n\nblake2b.ready(function (_) {\n  module.exports.crypto_generichash_WASM_LOADED = blake2b.WASM_LOADED\n})\n","/* eslint-disable camelcase */\nconst sha512 = require('sha512-universal')\nconst assert = require('nanoassert')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nconst crypto_hash_sha512_BYTES = 64\nconst crypto_hash_BYTES = crypto_hash_sha512_BYTES\n\nfunction crypto_hash_sha512 (out, m, n) {\n  assert(out.byteLength === crypto_hash_sha512_BYTES, \"out must be 'crypto_hash_sha512_BYTES' bytes long\")\n\n  sha512().update(m.subarray(0, n)).digest(out)\n  return 0\n}\n\nfunction crypto_hash (out, m, n) {\n  return crypto_hash_sha512(out, m, n)\n}\n\nmodule.exports = {\n  crypto_hash,\n  crypto_hash_sha512,\n  crypto_hash_sha512_BYTES,\n  crypto_hash_BYTES\n}\n","/* eslint-disable camelcase */\nconst sha256 = require('sha256-universal')\nconst assert = require('nanoassert')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nconst crypto_hash_sha256_BYTES = 32\n\nfunction crypto_hash_sha256 (out, m, n) {\n  assert(out.byteLength === crypto_hash_sha256_BYTES, \"out must be 'crypto_hash_sha256_BYTES' bytes long\")\n\n  sha256().update(m.subarray(0, n)).digest(out)\n  return 0\n}\n\nmodule.exports = {\n  crypto_hash_sha256,\n  crypto_hash_sha256_BYTES\n}\n","/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst randombytes_buf = require('./randombytes').randombytes_buf\nconst blake2b = require('blake2b')\n\nmodule.exports.crypto_kdf_PRIMITIVE = 'blake2b'\nmodule.exports.crypto_kdf_BYTES_MIN = 16\nmodule.exports.crypto_kdf_BYTES_MAX = 64\nmodule.exports.crypto_kdf_CONTEXTBYTES = 8\nmodule.exports.crypto_kdf_KEYBYTES = 32\n\nfunction STORE64_LE (dest, int) {\n  var mul = 1\n  var i = 0\n  dest[0] = int & 0xFF\n  while (++i < 8 && (mul *= 0x100)) {\n    dest[i] = (int / mul) & 0xFF\n  }\n}\n\nmodule.exports.crypto_kdf_derive_from_key = function crypto_kdf_derive_from_key (subkey, subkey_id, ctx, key) {\n  assert(subkey.length >= module.exports.crypto_kdf_BYTES_MIN, 'subkey must be at least crypto_kdf_BYTES_MIN')\n  assert(subkey_id >= 0 && subkey_id <= 0x1fffffffffffff, 'subkey_id must be safe integer')\n  assert(ctx.length >= module.exports.crypto_kdf_CONTEXTBYTES, 'context must be at least crypto_kdf_CONTEXTBYTES')\n\n  var ctx_padded = new Uint8Array(blake2b.PERSONALBYTES)\n  var salt = new Uint8Array(blake2b.SALTBYTES)\n\n  ctx_padded.set(ctx, 0, module.exports.crypto_kdf_CONTEXTBYTES)\n  STORE64_LE(salt, subkey_id)\n\n  var outlen = Math.min(subkey.length, module.exports.crypto_kdf_BYTES_MAX)\n  blake2b(outlen, key.subarray(0, module.exports.crypto_kdf_KEYBYTES), salt, ctx_padded, true)\n    .final(subkey)\n}\n\nmodule.exports.crypto_kdf_keygen = function crypto_kdf_keygen (out) {\n  assert(out.length >= module.exports.crypto_kdf_KEYBYTES, 'out.length must be crypto_kdf_KEYBYTES')\n  randombytes_buf(out.subarray(0, module.exports.crypto_kdf_KEYBYTES))\n}\n","/* eslint-disable camelcase */\nconst { crypto_scalarmult_base } = require('./crypto_scalarmult')\nconst { crypto_generichash } = require('./crypto_generichash')\nconst { randombytes_buf } = require('./randombytes')\nconst assert = require('nanoassert')\n\nconst crypto_kx_SEEDBYTES = 32\nconst crypto_kx_PUBLICKEYBYTES = 32\nconst crypto_kx_SECRETKEYBYTES = 32\n\nfunction crypto_kx_keypair (pk, sk) {\n  assert(pk.byteLength === crypto_kx_PUBLICKEYBYTES, \"pk must be 'crypto_kx_PUBLICKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_kx_SECRETKEYBYTES, \"sk must be 'crypto_kx_SECRETKEYBYTES' bytes\")\n\n  randombytes_buf(sk, crypto_kx_SECRETKEYBYTES)\n  return crypto_scalarmult_base(pk, sk)\n}\n\nfunction crypto_kx_seed_keypair (pk, sk, seed) {\n  assert(pk.byteLength === crypto_kx_PUBLICKEYBYTES, \"pk must be 'crypto_kx_PUBLICKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_kx_SECRETKEYBYTES, \"sk must be 'crypto_kx_SECRETKEYBYTES' bytes\")\n  assert(seed.byteLength === crypto_kx_SEEDBYTES, \"seed must be 'crypto_kx_SEEDBYTES' bytes\")\n\n  crypto_generichash(sk, seed)\n  return crypto_scalarmult_base(pk, sk)\n}\n\nmodule.exports = {\n  crypto_kx_keypair,\n  crypto_kx_seed_keypair,\n  crypto_kx_SEEDBYTES,\n  crypto_kx_SECRETKEYBYTES,\n  crypto_kx_PUBLICKEYBYTES\n}\n","/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst Poly1305 = require('./internal/poly1305')\nconst { crypto_verify_16 } = require('./crypto_verify')\n\nconst crypto_onetimeauth_BYTES = 16\nconst crypto_onetimeauth_KEYBYTES = 32\nconst crypto_onetimeauth_PRIMITIVE = 'poly1305'\n\nmodule.exports = {\n  crypto_onetimeauth,\n  crypto_onetimeauth_verify,\n  crypto_onetimeauth_BYTES,\n  crypto_onetimeauth_KEYBYTES,\n  crypto_onetimeauth_PRIMITIVE\n}\n\nfunction crypto_onetimeauth (mac, msg, key) {\n  assert(mac.byteLength === crypto_onetimeauth_BYTES, \"mac must be 'crypto_onetimeauth_BYTES' bytes\")\n  assert(msg.byteLength != null, 'msg must be buffer')\n  assert(key.byteLength === crypto_onetimeauth_KEYBYTES, \"key must be 'crypto_onetimeauth_KEYBYTES' bytes\")\n\n  var s = new Poly1305(key)\n  s.update(msg, 0, msg.byteLength)\n  s.finish(mac, 0)\n}\n\nfunction crypto_onetimeauth_verify (mac, msg, key) {\n  assert(mac.byteLength === crypto_onetimeauth_BYTES, \"mac must be 'crypto_onetimeauth_BYTES' bytes\")\n  assert(msg.byteLength != null, 'msg must be buffer')\n  assert(key.byteLength === crypto_onetimeauth_KEYBYTES, \"key must be 'crypto_onetimeauth_KEYBYTES' bytes\")\n\n  var tmp = new Uint8Array(16)\n  crypto_onetimeauth(tmp, msg, key)\n  return crypto_verify_16(mac, 0, tmp, 0)\n}\n","/* eslint-disable camelcase, one-var */\nconst { _9, _121665, gf, inv25519, pack25519, unpack25519, sel25519, A, M, Z, S } = require('./internal/ed25519')\n\nconst crypto_scalarmult_BYTES = 32\nconst crypto_scalarmult_SCALARBYTES = 32\n\nmodule.exports = {\n  crypto_scalarmult,\n  crypto_scalarmult_base,\n  crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES\n}\n\nfunction crypto_scalarmult (q, n, p) {\n  check(q, crypto_scalarmult_BYTES)\n  check(n, crypto_scalarmult_SCALARBYTES)\n  check(p, crypto_scalarmult_BYTES)\n  var z = new Uint8Array(32)\n  var x = new Float64Array(80), r, i\n  var a = gf(), b = gf(), c = gf(),\n    d = gf(), e = gf(), f = gf()\n  for (i = 0; i < 31; i++) z[i] = n[i]\n  z[31] = (n[31] & 127) | 64\n  z[0] &= 248\n  unpack25519(x, p)\n  for (i = 0; i < 16; i++) {\n    b[i] = x[i]\n    d[i] = a[i] = c[i] = 0\n  }\n  a[0] = d[0] = 1\n  for (i = 254; i >= 0; --i) {\n    r = (z[i >>> 3] >>> (i & 7)) & 1\n    sel25519(a, b, r)\n    sel25519(c, d, r)\n    A(e, a, c)\n    Z(a, a, c)\n    A(c, b, d)\n    Z(b, b, d)\n    S(d, e)\n    S(f, a)\n    M(a, c, a)\n    M(c, b, e)\n    A(e, a, c)\n    Z(a, a, c)\n    S(b, a)\n    Z(c, d, f)\n    M(a, c, _121665)\n    A(a, a, d)\n    M(c, c, a)\n    M(a, d, f)\n    M(d, b, x)\n    S(b, e)\n    sel25519(a, b, r)\n    sel25519(c, d, r)\n  }\n  for (i = 0; i < 16; i++) {\n    x[i + 16] = a[i]\n    x[i + 32] = c[i]\n    x[i + 48] = b[i]\n    x[i + 64] = d[i]\n  }\n  var x32 = x.subarray(32)\n  var x16 = x.subarray(16)\n  inv25519(x32, x32)\n  M(x16, x16, x32)\n  pack25519(q, x16)\n  return 0\n}\n\nfunction crypto_scalarmult_base (q, n) {\n  return crypto_scalarmult(q, n, _9)\n}\n\nfunction check (buf, len) {\n  if (!buf || (len && buf.length < len)) throw new Error('Argument must be a buffer' + (len ? ' of length ' + len : ''))\n}\n","/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst { crypto_stream, crypto_stream_xor } = require('./crypto_stream')\nconst { crypto_onetimeauth, crypto_onetimeauth_verify, crypto_onetimeauth_BYTES, crypto_onetimeauth_KEYBYTES } = require('./crypto_onetimeauth')\n\nconst crypto_secretbox_KEYBYTES = 32\nconst crypto_secretbox_NONCEBYTES = 24\nconst crypto_secretbox_ZEROBYTES = 32\nconst crypto_secretbox_BOXZEROBYTES = 16\nconst crypto_secretbox_MACBYTES = 16\n\nmodule.exports = {\n  crypto_secretbox,\n  crypto_secretbox_open,\n  crypto_secretbox_detached,\n  crypto_secretbox_open_detached,\n  crypto_secretbox_easy,\n  crypto_secretbox_open_easy,\n  crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES,\n  crypto_secretbox_MACBYTES\n}\n\nfunction crypto_secretbox (c, m, n, k) {\n  assert(c.byteLength === m.byteLength, \"c must be 'm.byteLength' bytes\")\n  const mlen = m.byteLength\n  assert(mlen >= crypto_secretbox_ZEROBYTES, \"mlen must be at least 'crypto_secretbox_ZEROBYTES'\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  crypto_stream_xor(c, m, n, k)\n  crypto_onetimeauth(\n    c.subarray(crypto_secretbox_BOXZEROBYTES, crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES),\n    c.subarray(crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES, c.byteLength),\n    c.subarray(0, crypto_onetimeauth_KEYBYTES)\n  )\n  c.fill(0, 0, crypto_secretbox_BOXZEROBYTES)\n}\n\nfunction crypto_secretbox_open (m, c, n, k) {\n  assert(c.byteLength === m.byteLength, \"c must be 'm.byteLength' bytes\")\n  const mlen = m.byteLength\n  assert(mlen >= crypto_secretbox_ZEROBYTES, \"mlen must be at least 'crypto_secretbox_ZEROBYTES'\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const x = new Uint8Array(crypto_onetimeauth_KEYBYTES)\n  crypto_stream(x, n, k)\n  const validMac = crypto_onetimeauth_verify(\n    c.subarray(crypto_secretbox_BOXZEROBYTES, crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES),\n    c.subarray(crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES, c.byteLength),\n    x\n  )\n\n  if (validMac === false) return false\n  crypto_stream_xor(m, c, n, k)\n  m.fill(0, 0, 32)\n  return true\n}\n\nfunction crypto_secretbox_detached (o, mac, msg, n, k) {\n  assert(o.byteLength === msg.byteLength, \"o must be 'msg.byteLength' bytes\")\n  assert(mac.byteLength === crypto_secretbox_MACBYTES, \"mac must be 'crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const tmp = new Uint8Array(msg.byteLength + mac.byteLength)\n  crypto_secretbox_easy(tmp, msg, n, k)\n  mac.set(tmp.subarray(0, mac.byteLength))\n  o.set(tmp.subarray(mac.byteLength))\n  return true\n}\n\nfunction crypto_secretbox_open_detached (msg, o, mac, n, k) {\n  assert(o.byteLength === msg.byteLength, \"o must be 'msg.byteLength' bytes\")\n  assert(mac.byteLength === crypto_secretbox_MACBYTES, \"mac must be 'crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const tmp = new Uint8Array(o.byteLength + mac.byteLength)\n  tmp.set(mac)\n  tmp.set(o, mac.byteLength)\n  return crypto_secretbox_open_easy(msg, tmp, n, k)\n}\n\nfunction crypto_secretbox_easy (o, msg, n, k) {\n  assert(o.byteLength === msg.byteLength + crypto_secretbox_MACBYTES, \"o must be 'msg.byteLength + crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.byteLength)\n  const c = new Uint8Array(m.byteLength)\n  m.set(msg, crypto_secretbox_ZEROBYTES)\n  crypto_secretbox(c, m, n, k)\n  o.set(c.subarray(crypto_secretbox_BOXZEROBYTES))\n}\n\nfunction crypto_secretbox_open_easy (msg, box, n, k) {\n  assert(box.byteLength === msg.byteLength + crypto_secretbox_MACBYTES, \"box must be 'msg.byteLength + crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.byteLength)\n  const m = new Uint8Array(c.byteLength)\n  c.set(box, crypto_secretbox_BOXZEROBYTES)\n  if (crypto_secretbox_open(m, c, n, k) === false) return false\n  msg.set(m.subarray(crypto_secretbox_ZEROBYTES))\n  return true\n}\n","/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst { randombytes_buf } = require('./randombytes')\nconst {\n  crypto_stream_chacha20_ietf,\n  crypto_stream_chacha20_ietf_xor,\n  crypto_stream_chacha20_ietf_xor_ic,\n  crypto_stream_chacha20_ietf_KEYBYTES\n} = require('./crypto_stream_chacha20')\nconst { crypto_core_hchacha20, crypto_core_hchacha20_INPUTBYTES } = require('./internal/hchacha20')\nconst Poly1305 = require('./internal/poly1305')\nconst { sodium_increment, sodium_is_zero, sodium_memcmp } = require('./helpers')\n\nconst crypto_onetimeauth_poly1305_BYTES = 16\nconst crypto_secretstream_xchacha20poly1305_COUNTERBYTES = 4\nconst crypto_secretstream_xchacha20poly1305_INONCEBYTES = 8\nconst crypto_aead_xchacha20poly1305_ietf_KEYBYTES = 32\nconst crypto_secretstream_xchacha20poly1305_KEYBYTES = crypto_aead_xchacha20poly1305_ietf_KEYBYTES\nconst crypto_aead_xchacha20poly1305_ietf_NPUBBYTES = 24\nconst crypto_secretstream_xchacha20poly1305_HEADERBYTES = crypto_aead_xchacha20poly1305_ietf_NPUBBYTES\nconst crypto_aead_xchacha20poly1305_ietf_ABYTES = 16\nconst crypto_secretstream_xchacha20poly1305_ABYTES = 1 + crypto_aead_xchacha20poly1305_ietf_ABYTES\nconst crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\nconst crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\nconst crypto_secretstream_xchacha20poly1305_TAGBYTES = 1\nconst crypto_secretstream_xchacha20poly1305_TAG_MESSAGE = new Uint8Array([0])\nconst crypto_secretstream_xchacha20poly1305_TAG_PUSH = new Uint8Array([1])\nconst crypto_secretstream_xchacha20poly1305_TAG_REKEY = new Uint8Array([2])\nconst crypto_secretstream_xchacha20poly1305_TAG_FINAL = new Uint8Array([crypto_secretstream_xchacha20poly1305_TAG_PUSH | crypto_secretstream_xchacha20poly1305_TAG_REKEY])\nconst crypto_secretstream_xchacha20poly1305_STATEBYTES = crypto_secretstream_xchacha20poly1305_KEYBYTES +\n  crypto_secretstream_xchacha20poly1305_INONCEBYTES + crypto_secretstream_xchacha20poly1305_COUNTERBYTES + 8\n\nconst KEY_OFFSET = 0\nconst NONCE_OFFSET = crypto_secretstream_xchacha20poly1305_KEYBYTES\nconst PAD_OFFSET = NONCE_OFFSET + crypto_secretstream_xchacha20poly1305_INONCEBYTES + crypto_secretstream_xchacha20poly1305_COUNTERBYTES\n\nconst _pad0 = new Uint8Array(16)\n\nfunction STORE64_LE (dest, int) {\n  let mul = 1\n  let i = 0\n  dest[0] = int & 0xFF\n  while (++i < 8 && (mul *= 0x100)) {\n    dest[i] = (int / mul) & 0xFF\n  }\n}\n\nfunction crypto_secretstream_xchacha20poly1305_counter_reset (state) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n  for (let i = 0; i < crypto_secretstream_xchacha20poly1305_COUNTERBYTES; i++) {\n    nonce[i] = 0\n  }\n  nonce[0] = 1\n}\n\nfunction crypto_secretstream_xchacha20poly1305_keygen (k) {\n  assert(k.length === crypto_secretstream_xchacha20poly1305_KEYBYTES)\n  randombytes_buf(k)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_init_push (state, out, key) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  assert(out instanceof Uint8Array && out.length === crypto_secretstream_xchacha20poly1305_HEADERBYTES, 'out not byte array of length crypto_secretstream_xchacha20poly1305_HEADERBYTES')\n  assert(key instanceof Uint8Array && key.length === crypto_secretstream_xchacha20poly1305_KEYBYTES, 'key not byte array of length crypto_secretstream_xchacha20poly1305_KEYBYTES')\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n  const pad = state.subarray(PAD_OFFSET)\n\n  randombytes_buf(out, crypto_secretstream_xchacha20poly1305_HEADERBYTES)\n  crypto_core_hchacha20(k, out, key, null)\n  crypto_secretstream_xchacha20poly1305_counter_reset(state)\n  for (let i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    nonce[i + crypto_secretstream_xchacha20poly1305_COUNTERBYTES] = out[i + crypto_core_hchacha20_INPUTBYTES]\n  }\n  pad.fill(0)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_init_pull (state, _in, key) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  assert(_in instanceof Uint8Array && _in.length === crypto_secretstream_xchacha20poly1305_HEADERBYTES,\n    '_in not byte array of length crypto_secretstream_xchacha20poly1305_HEADERBYTES')\n  assert(key instanceof Uint8Array && key.length === crypto_secretstream_xchacha20poly1305_KEYBYTES,\n    'key not byte array of length crypto_secretstream_xchacha20poly1305_KEYBYTES')\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n  const pad = state.subarray(PAD_OFFSET)\n\n  crypto_core_hchacha20(k, _in, key, null)\n  crypto_secretstream_xchacha20poly1305_counter_reset(state)\n\n  for (let i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    nonce[i + crypto_secretstream_xchacha20poly1305_COUNTERBYTES] = _in[i + crypto_core_hchacha20_INPUTBYTES]\n  }\n  pad.fill(0)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_rekey (state) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n\n  const new_key_and_inonce = new Uint8Array(\n    crypto_stream_chacha20_ietf_KEYBYTES + crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  let i\n  for (i = 0; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n    new_key_and_inonce[i] = k[i]\n  }\n  for (i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i] =\n      nonce[crypto_secretstream_xchacha20poly1305_COUNTERBYTES + i]\n  }\n  crypto_stream_chacha20_ietf_xor(new_key_and_inonce, new_key_and_inonce, nonce, k)\n  for (i = 0; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n    k[i] = new_key_and_inonce[i]\n  }\n  for (i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    nonce[crypto_secretstream_xchacha20poly1305_COUNTERBYTES + i] =\n      new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i]\n  }\n  crypto_secretstream_xchacha20poly1305_counter_reset(state)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_push (state, out, m, ad, tag) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  if (!ad) ad = new Uint8Array(0)\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n\n  const block = new Uint8Array(64)\n  const slen = new Uint8Array(8)\n\n  assert(crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX <=\n    crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX)\n\n  crypto_stream_chacha20_ietf(block, nonce, k)\n  const poly = new Poly1305(block)\n  block.fill(0)\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  block[0] = tag[0]\n  crypto_stream_chacha20_ietf_xor_ic(block, block, nonce, 1, k)\n\n  poly.update(block, 0, block.byteLength)\n  out[0] = block[0]\n\n  const c = out.subarray(1, out.byteLength)\n  crypto_stream_chacha20_ietf_xor_ic(c, m, nonce, 2, k)\n  poly.update(c, 0, m.byteLength)\n  poly.update(_pad0, 0, (0x10 - block.byteLength + m.byteLength) & 0xf)\n\n  STORE64_LE(slen, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n  STORE64_LE(slen, block.byteLength + m.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  const mac = out.subarray(1 + m.byteLength, out.byteLength)\n  poly.finish(mac, 0)\n\n  assert(crypto_onetimeauth_poly1305_BYTES >=\n    crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  xor_buf(nonce.subarray(crypto_secretstream_xchacha20poly1305_COUNTERBYTES, nonce.length),\n    mac, crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  sodium_increment(nonce)\n\n  if ((tag[0] & crypto_secretstream_xchacha20poly1305_TAG_REKEY) !== 0 ||\n    sodium_is_zero(nonce.subarray(0, crypto_secretstream_xchacha20poly1305_COUNTERBYTES))) {\n    crypto_secretstream_xchacha20poly1305_rekey(state)\n  }\n\n  return crypto_secretstream_xchacha20poly1305_ABYTES + m.byteLength\n}\n\nfunction crypto_secretstream_xchacha20poly1305_pull (state, m, tag, _in, ad) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  if (!ad) ad = new Uint8Array(0)\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n\n  const block = new Uint8Array(64)\n  const slen = new Uint8Array(8)\n  const mac = new Uint8Array(crypto_onetimeauth_poly1305_BYTES)\n\n  assert(_in.byteLength >= crypto_secretstream_xchacha20poly1305_ABYTES,\n    'ciphertext is too short.')\n\n  const mlen = _in.byteLength - crypto_secretstream_xchacha20poly1305_ABYTES\n  crypto_stream_chacha20_ietf(block, nonce, k)\n  const poly = new Poly1305(block)\n  block.fill(0) // sodium_memzero(block, sizeof block);\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  block.fill(0) // memset(block, 0, sizeof block);\n  block[0] = _in[0]\n  crypto_stream_chacha20_ietf_xor_ic(block, block, nonce, 1, k)\n\n  tag[0] = block[0]\n  block[0] = _in[0]\n  poly.update(block, 0, block.byteLength)\n\n  const c = _in.subarray(1, _in.length)\n  poly.update(c, 0, mlen)\n\n  poly.update(_pad0, 0, (0x10 - block.byteLength + mlen) & 0xf)\n\n  STORE64_LE(slen, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n  STORE64_LE(slen, block.byteLength + m.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  poly.finish(mac, 0)\n  const stored_mac = _in.subarray(1 + mlen, _in.length)\n\n  if (!sodium_memcmp(mac, stored_mac)) {\n    mac.fill(0)\n    throw new Error('MAC could not be verified.')\n  }\n\n  crypto_stream_chacha20_ietf_xor_ic(m, c.subarray(0, m.length), nonce, 2, k)\n  xor_buf(nonce.subarray(crypto_secretstream_xchacha20poly1305_COUNTERBYTES, nonce.length),\n    mac, crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  sodium_increment(nonce)\n\n  if ((tag & crypto_secretstream_xchacha20poly1305_TAG_REKEY) !== 0 ||\n    sodium_is_zero(nonce.subarray(0, crypto_secretstream_xchacha20poly1305_COUNTERBYTES))) {\n    crypto_secretstream_xchacha20poly1305_rekey(state)\n  }\n\n  return mlen\n}\n\nfunction xor_buf (out, _in, n) {\n  for (let i = 0; i < n; i++) {\n    out[i] ^= _in[i]\n  }\n}\n\nmodule.exports = {\n  crypto_secretstream_xchacha20poly1305_keygen,\n  crypto_secretstream_xchacha20poly1305_init_push,\n  crypto_secretstream_xchacha20poly1305_init_pull,\n  crypto_secretstream_xchacha20poly1305_rekey,\n  crypto_secretstream_xchacha20poly1305_push,\n  crypto_secretstream_xchacha20poly1305_pull,\n  crypto_secretstream_xchacha20poly1305_STATEBYTES,\n  crypto_secretstream_xchacha20poly1305_ABYTES,\n  crypto_secretstream_xchacha20poly1305_HEADERBYTES,\n  crypto_secretstream_xchacha20poly1305_KEYBYTES,\n  crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX,\n  crypto_secretstream_xchacha20poly1305_TAGBYTES,\n  crypto_secretstream_xchacha20poly1305_TAG_MESSAGE,\n  crypto_secretstream_xchacha20poly1305_TAG_PUSH,\n  crypto_secretstream_xchacha20poly1305_TAG_REKEY,\n  crypto_secretstream_xchacha20poly1305_TAG_FINAL\n}\n","var siphash = require('siphash24')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_shorthash_PRIMITIVE = 'siphash24'\nexports.crypto_shorthash_BYTES = siphash.BYTES\nexports.crypto_shorthash_KEYBYTES = siphash.KEYBYTES\nexports.crypto_shorthash_WASM_SUPPORTED = siphash.WASM_SUPPORTED\nexports.crypto_shorthash_WASM_LOADED = siphash.WASM_LOADED\nexports.crypto_shorthash = shorthash\n\nfunction shorthash (out, data, key, noAssert) {\n  siphash(data, key, out, noAssert)\n}\n","/* eslint-disable camelcase, one-var */\nconst { crypto_verify_32 } = require('./crypto_verify')\nconst { crypto_hash } = require('./crypto_hash')\nconst {\n  gf, gf0, gf1, D, D2,\n  X, Y, I, A, Z, M, S,\n  sel25519, pack25519,\n  inv25519, unpack25519\n} = require('./internal/ed25519')\nconst { randombytes } = require('./randombytes')\nconst { crypto_scalarmult_BYTES } = require('./crypto_scalarmult.js')\nconst { crypto_hash_sha512_BYTES } = require('./crypto_hash.js')\nconst assert = require('nanoassert')\n\nconst crypto_sign_ed25519_PUBLICKEYBYTES = 32\nconst crypto_sign_ed25519_SECRETKEYBYTES = 64\nconst crypto_sign_ed25519_SEEDBYTES = 32\nconst crypto_sign_ed25519_BYTES = 64\n\nconst crypto_sign_BYTES = crypto_sign_ed25519_BYTES\nconst crypto_sign_PUBLICKEYBYTES = crypto_sign_ed25519_PUBLICKEYBYTES\nconst crypto_sign_SECRETKEYBYTES = crypto_sign_ed25519_SECRETKEYBYTES\nconst crypto_sign_SEEDBYTES = crypto_sign_ed25519_SEEDBYTES\n\nmodule.exports = {\n  crypto_sign_keypair,\n  crypto_sign_seed_keypair,\n  crypto_sign,\n  crypto_sign_detached,\n  crypto_sign_open,\n  crypto_sign_verify_detached,\n  crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES,\n  crypto_sign_ed25519_PUBLICKEYBYTES,\n  crypto_sign_ed25519_SECRETKEYBYTES,\n  crypto_sign_ed25519_SEEDBYTES,\n  crypto_sign_ed25519_BYTES,\n  crypto_sign_ed25519_pk_to_curve25519,\n  crypto_sign_ed25519_sk_to_curve25519,\n  crypto_sign_ed25519_sk_to_pk,\n  unpackneg,\n  pack\n}\n\nfunction set25519 (r, a) {\n  for (let i = 0; i < 16; i++) r[i] = a[i] | 0\n}\n\nfunction pow2523 (o, i) {\n  var c = gf()\n  var a\n  for (a = 0; a < 16; a++) c[a] = i[a]\n  for (a = 250; a >= 0; a--) {\n    S(c, c)\n    if (a !== 1) M(c, c, i)\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a]\n}\n\nfunction add (p, q) {\n  var a = gf(), b = gf(), c = gf(),\n    d = gf(), e = gf(), f = gf(),\n    g = gf(), h = gf(), t = gf()\n\n  Z(a, p[1], p[0])\n  Z(t, q[1], q[0])\n  M(a, a, t)\n  A(b, p[0], p[1])\n  A(t, q[0], q[1])\n  M(b, b, t)\n  M(c, p[3], q[3])\n  M(c, c, D2)\n  M(d, p[2], q[2])\n  A(d, d, d)\n  Z(e, b, a)\n  Z(f, d, c)\n  A(g, d, c)\n  A(h, b, a)\n\n  M(p[0], e, f)\n  M(p[1], h, g)\n  M(p[2], g, f)\n  M(p[3], e, h)\n}\n\nfunction cswap (p, q, b) {\n  var i\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b)\n  }\n}\n\nfunction pack (r, p) {\n  var tx = gf(), ty = gf(), zi = gf()\n  inv25519(zi, p[2])\n  M(tx, p[0], zi)\n  M(ty, p[1], zi)\n  pack25519(r, ty)\n  r[31] ^= par25519(tx) << 7\n}\n\nfunction scalarmult (p, q, s) {\n  // don't mutate q\n  var h = [gf(q[0]), gf(q[1]), gf(q[2]), gf(q[3])]\n  var b, i\n  set25519(p[0], gf0)\n  set25519(p[1], gf1)\n  set25519(p[2], gf1)\n  set25519(p[3], gf0)\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i / 8) | 0] >> (i & 7)) & 1\n    cswap(p, h, b)\n    add(h, p)\n    add(p, p)\n    cswap(p, h, b)\n  }\n}\n\nfunction scalarbase (p, s) {\n  var q = [gf(), gf(), gf(), gf()]\n  set25519(q[0], X)\n  set25519(q[1], Y)\n  set25519(q[2], gf1)\n  M(q[3], X, Y)\n  scalarmult(p, q, s)\n}\n\nfunction crypto_sign_keypair (pk, sk, seeded) {\n  check(pk, crypto_sign_PUBLICKEYBYTES)\n  check(sk, crypto_sign_SECRETKEYBYTES)\n\n  var d = new Uint8Array(64)\n  var p = [gf(), gf(), gf(), gf()]\n  var i\n\n  if (!seeded) randombytes(sk, 32)\n  crypto_hash(d, sk, 32)\n  d[0] &= 248\n  d[31] &= 127\n  d[31] |= 64\n\n  scalarbase(p, d)\n  pack(pk, p)\n\n  for (i = 0; i < 32; i++) sk[i + 32] = pk[i]\n}\n\nfunction crypto_sign_seed_keypair (pk, sk, seed) {\n  check(seed, crypto_sign_SEEDBYTES)\n  sk.set(seed)\n  return crypto_sign_keypair(pk, sk, true)\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10])\n\nfunction modL (r, x) {\n  var carry, i, j, k\n  for (i = 63; i >= 32; --i) {\n    carry = 0\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)]\n      carry = (x[j] + 128) >> 8\n      x[j] -= carry * 256\n    }\n    x[j] += carry\n    x[i] = 0\n  }\n  carry = 0\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j]\n    carry = x[j] >> 8\n    x[j] &= 255\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j]\n  for (i = 0; i < 32; i++) {\n    x[i + 1] += x[i] >> 8\n    r[i] = x[i] & 255\n  }\n}\n\nfunction reduce (r) {\n  var x = new Float64Array(64)\n  for (let i = 0; i < 64; i++) x[i] = r[i]\n  for (let i = 0; i < 64; i++) r[i] = 0\n  modL(r, x)\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign (sm, m, sk) {\n  check(sm, crypto_sign_BYTES + m.length)\n  check(m, 0)\n  check(sk, crypto_sign_SECRETKEYBYTES)\n  var n = m.length\n\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64)\n  var i, j, x = new Float64Array(64)\n  var p = [gf(), gf(), gf(), gf()]\n\n  crypto_hash(d, sk, 32)\n  d[0] &= 248\n  d[31] &= 127\n  d[31] |= 64\n\n  var smlen = n + 64\n  for (i = 0; i < n; i++) sm[64 + i] = m[i]\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i]\n\n  crypto_hash(r, sm.subarray(32), n + 32)\n  reduce(r)\n  scalarbase(p, r)\n  pack(sm, p)\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i]\n  crypto_hash(h, sm, n + 64)\n  reduce(h)\n\n  for (i = 0; i < 64; i++) x[i] = 0\n  for (i = 0; i < 32; i++) x[i] = r[i]\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j]\n    }\n  }\n\n  modL(sm.subarray(32), x)\n  return smlen\n}\n\nfunction crypto_sign_detached (sig, m, sk) {\n  var sm = new Uint8Array(m.length + crypto_sign_BYTES)\n  crypto_sign(sm, m, sk)\n  for (let i = 0; i < crypto_sign_BYTES; i++) sig[i] = sm[i]\n}\n\nfunction unpackneg (r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n    den = gf(), den2 = gf(), den4 = gf(),\n    den6 = gf()\n\n  set25519(r[2], gf1)\n  unpack25519(r[1], p)\n  S(num, r[1])\n  M(den, num, D)\n  Z(num, num, r[2])\n  A(den, r[2], den)\n\n  S(den2, den)\n  S(den4, den2)\n  M(den6, den4, den2)\n  M(t, den6, num)\n  M(t, t, den)\n\n  pow2523(t, t)\n  M(t, t, num)\n  M(t, t, den)\n  M(t, t, den)\n  M(r[0], t, den)\n\n  S(chk, r[0])\n  M(chk, chk, den)\n  if (!neq25519(chk, num)) M(r[0], r[0], I)\n\n  S(chk, r[0])\n  M(chk, chk, den)\n  if (!neq25519(chk, num)) return false\n\n  if (par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf(), r[0])\n  }\n\n  M(r[3], r[0], r[1])\n  return true\n}\n\n/* eslint-disable no-unused-vars */\nfunction crypto_sign_open (msg, sm, pk) {\n  check(msg, sm.length - crypto_sign_BYTES)\n  check(sm, crypto_sign_BYTES)\n  check(pk, crypto_sign_PUBLICKEYBYTES)\n  var n = sm.length\n  var m = new Uint8Array(sm.length)\n\n  var i, mlen\n  var t = new Uint8Array(32), h = new Uint8Array(64)\n  var p = [gf(), gf(), gf(), gf()],\n    q = [gf(), gf(), gf(), gf()]\n\n  mlen = -1\n  if (n < 64) return false\n\n  if (!unpackneg(q, pk)) return false\n\n  for (i = 0; i < n; i++) m[i] = sm[i]\n  for (i = 0; i < 32; i++) m[i + 32] = pk[i]\n  crypto_hash(h, m, n)\n  reduce(h)\n  scalarmult(p, q, h)\n\n  scalarbase(q, sm.subarray(32))\n  add(p, q)\n  pack(t, p)\n\n  n -= 64\n  if (!crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0\n    return false\n    // throw new Error('crypto_sign_open failed')\n  }\n\n  for (i = 0; i < n; i++) msg[i] = sm[i + 64]\n  mlen = n\n  return true\n}\n/* eslint-enable no-unused-vars */\n\nfunction crypto_sign_verify_detached (sig, m, pk) {\n  check(sig, crypto_sign_BYTES)\n  var sm = new Uint8Array(m.length + crypto_sign_BYTES)\n  var i = 0\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i]\n  for (i = 0; i < m.length; i++) sm[i + crypto_sign_BYTES] = m[i]\n  return crypto_sign_open(m, sm, pk)\n}\n\nfunction par25519 (a) {\n  var d = new Uint8Array(32)\n  pack25519(d, a)\n  return d[0] & 1\n}\n\nfunction neq25519 (a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32)\n  pack25519(c, a)\n  pack25519(d, b)\n  return crypto_verify_32(c, 0, d, 0)\n}\n\nfunction ed25519_mul_l (p, q) {\n  scalarmult(p, q, L)\n}\n\nfunction ed25519_is_on_main_subgroup (p) {\n  var pl = [gf(), gf(), gf(), gf()]\n\n  ed25519_mul_l(pl, p)\n\n  var zero = 0\n  for (let i = 0; i < 16; i++) {\n    zero |= (pl[0][i] & 0xffff)\n  }\n\n  return zero === 0\n}\n\nfunction crypto_sign_ed25519_pk_to_curve25519 (x25519_pk, ed25519_pk) {\n  check(x25519_pk, crypto_sign_PUBLICKEYBYTES)\n  check(ed25519_pk, crypto_sign_ed25519_PUBLICKEYBYTES)\n\n  var a = [gf(), gf(), gf(), gf()]\n  var x = gf([1])\n  var one_minus_y = gf([1])\n\n  assert(\n    isSmallOrder(ed25519_pk) &&\n    unpackneg(a, ed25519_pk) &&\n    ed25519_is_on_main_subgroup(a), 'Cannot convert key: bad point')\n\n  for (let i = 0; i < a.length; i++) {\n    pack25519(x25519_pk, a[i])\n  }\n\n  Z(one_minus_y, one_minus_y, a[1])\n  A(x, x, a[1])\n  inv25519(one_minus_y, one_minus_y)\n  M(x, x, one_minus_y)\n  pack25519(x25519_pk, x)\n\n  return 0\n}\n\nfunction isSmallOrder (s) {\n  Uint8Array.from([])\n\n  var bad_points = [\n    // 0 (order 4)\n    Uint8Array.from([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),\n\n    // 1 (order 1)\n    Uint8Array.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),\n\n    // 2707385501144840649318225287225658788936804267575313519463743609750303402022(order 8)\n    Uint8Array.from([0x26, 0xe8, 0x95, 0x8f, 0xc2, 0xb2, 0x27, 0xb0, 0x45, 0xc3,\n      0xf4, 0x89, 0xf2, 0xef, 0x98, 0xf0, 0xd5, 0xdf, 0xac, 0x05, 0xd3,\n      0xc6, 0x33, 0x39, 0xb1, 0x38, 0x02, 0x88, 0x6d, 0x53, 0xfc, 0x05]),\n\n    // 55188659117513257062467267217118295137698188065244968500265048394206261417927 (order 8)\n    Uint8Array.from([0xc7, 0x17, 0x6a, 0x70, 0x3d, 0x4d, 0xd8, 0x4f, 0xba, 0x3c,\n      0x0b, 0x76, 0x0d, 0x10, 0x67, 0x0f, 0x2a, 0x20, 0x53, 0xfa, 0x2c,\n      0x39, 0xcc, 0xc6, 0x4e, 0xc7, 0xfd, 0x77, 0x92, 0xac, 0x03, 0x7a]),\n\n    // p-1 (order 2)\n    Uint8Array.from([0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f]),\n\n    //  p (=0 order 4)\n    Uint8Array.from([0xed, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f]),\n\n    // p + 1 (=1 order 1)\n    Uint8Array.from([0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f])\n  ]\n\n  var c = new Uint8Array(7)\n  var j\n\n  check(bad_points, 7)\n  for (let i = 0; i < bad_points.length; i++) {\n    for (j = 0; j < 31; j++) {\n      c[i] |= s[j] ^ bad_points[i][j]\n    }\n  }\n\n  for (let i = 0; i < bad_points.length; i++) {\n    c[i] |= (s[j] & 0x7f) ^ bad_points[i][j]\n  }\n\n  var k = 0\n  for (let i = 0; i < bad_points.length; i++) {\n    k |= (c[i] - 1)\n  }\n\n  return ((k >> 8) & 1) === 0\n}\n\nfunction crypto_sign_ed25519_sk_to_pk (pk, sk) {\n  check(pk, crypto_sign_ed25519_PUBLICKEYBYTES)\n  pk.set(sk.subarray(crypto_sign_ed25519_SEEDBYTES))\n  return pk\n}\n\nfunction crypto_sign_ed25519_sk_to_curve25519 (curveSk, edSk) {\n  assert(curveSk && curveSk.byteLength === crypto_scalarmult_BYTES, \"curveSk must be 'crypto_sign_SECRETKEYBYTES' long\")\n  assert(edSk && edSk.byteLength === crypto_sign_ed25519_SECRETKEYBYTES, \"edSk must be 'crypto_sign_ed25519_SECRETKEYBYTES' long\")\n\n  var h = new Uint8Array(crypto_hash_sha512_BYTES)\n  crypto_hash(h, edSk, 32)\n\n  h[0] &= 248\n  h[31] &= 127\n  h[31] |= 64\n\n  curveSk.set(h.subarray(0, crypto_scalarmult_BYTES))\n  h.fill(0)\n  return curveSk\n}\n\nfunction check (buf, len, arg = 'Argument') {\n  if (!buf || (len && buf.length < len)) throw new Error(arg + ' must be a buffer' + (len ? ' of length ' + len : ''))\n}\n","/* eslint-disable camelcase */\nconst xsalsa20 = require('xsalsa20')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_stream_KEYBYTES = 32\nexports.crypto_stream_NONCEBYTES = 24\nexports.crypto_stream_PRIMITIVE = 'xsalsa20'\nexports.crypto_stream_xsalsa20_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\n\nexports.crypto_stream = function (c, nonce, key) {\n  c.fill(0)\n  exports.crypto_stream_xor(c, c, nonce, key)\n}\n\nexports.crypto_stream_xor = function (c, m, nonce, key) {\n  const xor = xsalsa20(nonce, key)\n\n  xor.update(m, c)\n  xor.final()\n}\n\nexports.crypto_stream_xor_instance = function (nonce, key) {\n  return new XOR(nonce, key)\n}\n\nfunction XOR (nonce, key) {\n  this._instance = xsalsa20(nonce, key)\n}\n\nXOR.prototype.update = function (out, inp) {\n  this._instance.update(inp, out)\n}\n\nXOR.prototype.final = function () {\n  this._instance.finalize()\n  this._instance = null\n}\n","const assert = require('nanoassert')\nconst Chacha20 = require('chacha20-universal')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_stream_chacha20_KEYBYTES = 32\nexports.crypto_stream_chacha20_NONCEBYTES = 8\nexports.crypto_stream_chacha20_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\n\nexports.crypto_stream_chacha20_ietf_KEYBYTES = 32\nexports.crypto_stream_chacha20_ietf_NONCEBYTES = 12\nexports.crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX = 2 ** 32\n\nexports.crypto_stream_chacha20 = function (c, n, k) {\n  c.fill(0)\n  exports.crypto_stream_chacha20_xor(c, c, n, k)\n}\n\nexports.crypto_stream_chacha20_xor = function (c, m, n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_NONCEBYTES,\n    'n should be crypto_stream_chacha20_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_KEYBYTES,\n    'k should be crypto_stream_chacha20_KEYBYTES')\n\n  const xor = new Chacha20(n, k)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_xor_ic = function (c, m, n, ic, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_NONCEBYTES,\n    'n should be crypto_stream_chacha20_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_KEYBYTES,\n    'k should be crypto_stream_chacha20_KEYBYTES')\n\n  const xor = new Chacha20(n, k, ic)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_xor_instance = function (n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_NONCEBYTES,\n    'n should be crypto_stream_chacha20_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_KEYBYTES,\n    'k should be crypto_stream_chacha20_KEYBYTES')\n\n  return new Chacha20(n, k)\n}\n\nexports.crypto_stream_chacha20_ietf = function (c, n, k) {\n  c.fill(0)\n  exports.crypto_stream_chacha20_ietf_xor(c, c, n, k)\n}\n\nexports.crypto_stream_chacha20_ietf_xor = function (c, m, n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_ietf_NONCEBYTES,\n    'n should be crypto_stream_chacha20_ietf_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_ietf_KEYBYTES,\n    'k should be crypto_stream_chacha20_ietf_KEYBYTES')\n\n  const xor = new Chacha20(n, k)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_ietf_xor_ic = function (c, m, n, ic, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_ietf_NONCEBYTES,\n    'n should be crypto_stream_chacha20_ietf_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_ietf_KEYBYTES,\n    'k should be crypto_stream_chacha20_ietf_KEYBYTES')\n\n  const xor = new Chacha20(n, k, ic)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_ietf_xor_instance = function (n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_ietf_NONCEBYTES,\n    'n should be crypto_stream_chacha20_ietf_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_ietf_KEYBYTES,\n    'k should be crypto_stream_chacha20_ietf_KEYBYTES')\n\n  return new Chacha20(n, k)\n}\n","/* eslint-disable camelcase */\nmodule.exports = {\n  crypto_verify_16,\n  crypto_verify_32,\n  crypto_verify_64\n}\n\nfunction vn (x, xi, y, yi, n) {\n  var d = 0\n  for (let i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i]\n  return (1 & ((d - 1) >>> 8)) - 1\n}\n\n// Make non enumerable as this is an internal function\nObject.defineProperty(module.exports, 'vn', {\n  value: vn\n})\n\nfunction crypto_verify_16 (x, xi, y, yi) {\n  return vn(x, xi, y, yi, 16) === 0\n}\n\nfunction crypto_verify_32 (x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32) === 0\n}\n\nfunction crypto_verify_64 (x, xi, y, yi) {\n  return vn(x, xi, y, yi, 64) === 0\n}\n","/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst { vn } = require('./crypto_verify')\n\nfunction sodium_increment (n) {\n  const nlen = n.byteLength\n  var c = 1\n  for (var i = 0; i < nlen; i++) {\n    c += n[i]\n    n[i] = c\n    c >>= 8\n  }\n}\n\nfunction sodium_memcmp (a, b) {\n  assert(a.byteLength === b.byteLength, 'buffers must be the same size')\n\n  return vn(a, 0, b, 0, a.byteLength) === 0\n}\n\nfunction sodium_is_zero (arr) {\n  var d = 0\n  for (let i = 0; i < arr.length; i++) d |= arr[i]\n  return d === 0\n}\n\nmodule.exports = {\n  sodium_increment,\n  sodium_memcmp,\n  sodium_is_zero\n}\n","'use strict'\n\n// Based on https://github.com/dchest/tweetnacl-js/blob/6dcbcaf5f5cbfd313f2dcfe763db35c828c8ff5b/nacl-fast.js.\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nforward(require('./randombytes'))\nforward(require('./memory'))\nforward(require('./helpers'))\nforward(require('./crypto_verify'))\nforward(require('./crypto_auth'))\nforward(require('./crypto_box'))\nforward(require('./crypto_generichash'))\nforward(require('./crypto_hash'))\nforward(require('./crypto_hash_sha256'))\nforward(require('./crypto_kdf'))\nforward(require('./crypto_kx'))\nforward(require('./crypto_aead'))\nforward(require('./crypto_onetimeauth'))\nforward(require('./crypto_scalarmult'))\nforward(require('./crypto_secretbox'))\nforward(require('./crypto_secretstream'))\nforward(require('./crypto_shorthash'))\nforward(require('./crypto_sign'))\nforward(require('./crypto_stream'))\nforward(require('./crypto_stream_chacha20'))\n\nfunction forward (submodule) {\n  Object.keys(submodule).forEach(function (prop) {\n    module.exports[prop] = submodule[prop]\n  })\n}\n","if (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n}\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n    t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n    t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nmodule.exports = {\n  gf,\n  A,\n  Z,\n  M,\n  S,\n  sel25519,\n  pack25519,\n  unpack25519,\n  inv25519,\n  gf0,\n  gf1,\n  _9,\n  _121665,\n  D,\n  D2,\n  X,\n  Y,\n  I\n}\n","/* eslint-disable camelcase */\nconst { sodium_malloc } = require('../memory')\nconst assert = require('nanoassert')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nconst crypto_core_hchacha20_OUTPUTBYTES = 32\nconst crypto_core_hchacha20_INPUTBYTES = 16\nconst crypto_core_hchacha20_KEYBYTES = 32\nconst crypto_core_hchacha20_CONSTBYTES = 16\n\nfunction ROTL32 (x, b) {\n  x &= 0xFFFFFFFF\n  b &= 0xFFFFFFFF\n  return (x << b) | (x >>> (32 - b))\n}\n\nfunction LOAD32_LE (src, offset) {\n  assert(src instanceof Uint8Array, 'src not byte array')\n  let w = src[offset]\n  w |= src[offset + 1] << 8\n  w |= src[offset + 2] << 16\n  w |= src[offset + 3] << 24\n  return w\n}\n\nfunction STORE32_LE (dest, int, offset) {\n  assert(dest instanceof Uint8Array, 'dest not byte array')\n  var mul = 1\n  var i = 0\n  dest[offset] = int & 0xFF // grab bottom byte\n  while (++i < 4 && (mul *= 0x100)) {\n    dest[offset + i] = (int / mul) & 0xFF\n  }\n}\n\nfunction QUARTERROUND (l, A, B, C, D) {\n  l[A] += l[B]\n  l[D] = ROTL32(l[D] ^ l[A], 16)\n  l[C] += l[D]\n  l[B] = ROTL32(l[B] ^ l[C], 12)\n  l[A] += l[B]\n  l[D] = ROTL32(l[D] ^ l[A], 8)\n  l[C] += l[D]\n  l[B] = ROTL32(l[B] ^ l[C], 7)\n}\n\nfunction crypto_core_hchacha20 (out, _in, k, c) {\n  assert(out instanceof Uint8Array && out.length === 32, 'out is not an array of 32 bytes')\n  assert(k instanceof Uint8Array && k.length === 32, 'k is not an array of 32 bytes')\n  assert(c === null || (c instanceof Uint8Array && c.length === 16), 'c is not null or an array of 16 bytes')\n\n  let i = 0\n  const x = new Uint32Array(16)\n  if (!c) {\n    x[0] = 0x61707865\n    x[1] = 0x3320646E\n    x[2] = 0x79622D32\n    x[3] = 0x6B206574\n  } else {\n    x[0] = LOAD32_LE(c, 0)\n    x[1] = LOAD32_LE(c, 4)\n    x[2] = LOAD32_LE(c, 8)\n    x[3] = LOAD32_LE(c, 12)\n  }\n  x[4] = LOAD32_LE(k, 0)\n  x[5] = LOAD32_LE(k, 4)\n  x[6] = LOAD32_LE(k, 8)\n  x[7] = LOAD32_LE(k, 12)\n  x[8] = LOAD32_LE(k, 16)\n  x[9] = LOAD32_LE(k, 20)\n  x[10] = LOAD32_LE(k, 24)\n  x[11] = LOAD32_LE(k, 28)\n  x[12] = LOAD32_LE(_in, 0)\n  x[13] = LOAD32_LE(_in, 4)\n  x[14] = LOAD32_LE(_in, 8)\n  x[15] = LOAD32_LE(_in, 12)\n\n  for (i = 0; i < 10; i++) {\n    QUARTERROUND(x, 0, 4, 8, 12)\n    QUARTERROUND(x, 1, 5, 9, 13)\n    QUARTERROUND(x, 2, 6, 10, 14)\n    QUARTERROUND(x, 3, 7, 11, 15)\n    QUARTERROUND(x, 0, 5, 10, 15)\n    QUARTERROUND(x, 1, 6, 11, 12)\n    QUARTERROUND(x, 2, 7, 8, 13)\n    QUARTERROUND(x, 3, 4, 9, 14)\n  }\n\n  STORE32_LE(out, x[0], 0)\n  STORE32_LE(out, x[1], 4)\n  STORE32_LE(out, x[2], 8)\n  STORE32_LE(out, x[3], 12)\n  STORE32_LE(out, x[12], 16)\n  STORE32_LE(out, x[13], 20)\n  STORE32_LE(out, x[14], 24)\n  STORE32_LE(out, x[15], 28)\n\n  return 0\n}\n\nfunction crypto_core_hchacha20_outputbytes () {\n  return crypto_core_hchacha20_OUTPUTBYTES\n}\n\nfunction crypto_core_hchacha20_inputbytes () {\n  return crypto_core_hchacha20_INPUTBYTES\n}\n\nfunction crypto_core_hchacha20_keybytes () {\n  return crypto_core_hchacha20_KEYBYTES\n}\n\nfunction crypto_core_hchacha20_constbytes () {\n  return crypto_core_hchacha20_CONSTBYTES\n}\n\nmodule.exports = {\n  crypto_core_hchacha20_INPUTBYTES,\n  LOAD32_LE,\n  STORE32_LE,\n  QUARTERROUND,\n  crypto_core_hchacha20,\n  crypto_core_hchacha20_outputbytes,\n  crypto_core_hchacha20_inputbytes,\n  crypto_core_hchacha20_keybytes,\n  crypto_core_hchacha20_constbytes\n}\n","/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nmodule.exports = poly1305\n","/* eslint-disable camelcase */\n\nfunction sodium_malloc (n) {\n  return new Uint8Array(n)\n}\n\nfunction sodium_free (n) {\n  sodium_memzero(n)\n  loadSink().port1.postMessage(n.buffer, [n.buffer])\n}\n\nfunction sodium_memzero (arr) {\n  arr.fill(0)\n}\n\nvar sink\n\nfunction loadSink () {\n  if (sink) return sink\n  var MessageChannel = globalThis.MessageChannel\n  if (MessageChannel == null) ({ MessageChannel } = require('worker' + '_threads'))\n  sink = new MessageChannel()\n  return sink\n}\n\nmodule.exports = {\n  sodium_malloc,\n  sodium_free,\n  sodium_memzero\n}\n","var assert = require('nanoassert')\n\nvar randombytes = (function () {\n  var QUOTA = 65536 // limit for QuotaExceededException\n  var crypto = globalThis.crypto || globalThis.msCrypto\n\n  function browserBytes (out, n) {\n    for (let i = 0; i < n; i += QUOTA) {\n      crypto.getRandomValues(new Uint8Array(out.buffer, i + out.byteOffset, Math.min(n - i, QUOTA)))\n    }\n  }\n\n  function nodeBytes (out, n) {\n    new Uint8Array(out.buffer, out.byteOffset, n).set(crypto.randomBytes(n))\n  }\n\n  function noImpl () {\n    throw new Error('No secure random number generator available')\n  }\n\n  if (crypto && crypto.getRandomValues) return browserBytes\n\n  if (require != null) {\n    // Node.js. Bust Browserify\n    crypto = require('cry' + 'pto')\n    if (crypto && crypto.randomBytes) return nodeBytes\n  }\n\n  return noImpl\n})()\n\n// Make non enumerable as this is an internal function\nObject.defineProperty(module.exports, 'randombytes', {\n  value: randombytes\n})\n\nmodule.exports.randombytes_buf = function (out) {\n  assert(out, 'out must be given')\n  randombytes(out, out.byteLength)\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/sodium-javascript sync recursive\";\nmodule.exports = webpackEmptyContext;","const sodium = require('sodium-universal')\nconst b4a = require('b4a')\n\nconst ABYTES = sodium.crypto_secretstream_xchacha20poly1305_ABYTES\nconst TAG_MESSAGE = sodium.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE\nconst TAG_FINAL = sodium.crypto_secretstream_xchacha20poly1305_TAG_FINAL\nconst STATEBYTES = sodium.crypto_secretstream_xchacha20poly1305_STATEBYTES\nconst HEADERBYTES = sodium.crypto_secretstream_xchacha20poly1305_HEADERBYTES\nconst KEYBYTES = sodium.crypto_secretstream_xchacha20poly1305_KEYBYTES\nconst TAG_FINAL_BYTE = b4a.isBuffer(TAG_FINAL) ? TAG_FINAL[0] : TAG_FINAL\n\nconst EMPTY = b4a.alloc(0)\nconst TAG = b4a.alloc(1)\n\nclass Push {\n  constructor (key, state = b4a.allocUnsafe(STATEBYTES), header = b4a.allocUnsafe(HEADERBYTES)) {\n    if (!TAG_FINAL) throw new Error('JavaScript sodium version needs to support crypto_secretstream_xchacha20poly')\n\n    this.key = key\n    this.state = state\n    this.header = header\n\n    sodium.crypto_secretstream_xchacha20poly1305_init_push(this.state, this.header, this.key)\n  }\n\n  next (message, cipher = b4a.allocUnsafe(message.byteLength + ABYTES)) {\n    sodium.crypto_secretstream_xchacha20poly1305_push(this.state, cipher, message, null, TAG_MESSAGE)\n    return cipher\n  }\n\n  final (message = EMPTY, cipher = b4a.allocUnsafe(ABYTES)) {\n    sodium.crypto_secretstream_xchacha20poly1305_push(this.state, cipher, message, null, TAG_FINAL)\n    return cipher\n  }\n}\n\nclass Pull {\n  constructor (key, state = b4a.allocUnsafe(STATEBYTES)) {\n    if (!TAG_FINAL) throw new Error('JavaScript sodium version needs to support crypto_secretstream_xchacha20poly')\n\n    this.key = key\n    this.state = state\n    this.final = false\n  }\n\n  init (header) {\n    sodium.crypto_secretstream_xchacha20poly1305_init_pull(this.state, header, this.key)\n  }\n\n  next (cipher, message = b4a.allocUnsafe(cipher.byteLength - ABYTES)) {\n    sodium.crypto_secretstream_xchacha20poly1305_pull(this.state, message, TAG, cipher, null)\n    this.final = TAG[0] === TAG_FINAL_BYTE\n    return message\n  }\n}\n\nfunction keygen (buf = b4a.alloc(KEYBYTES)) {\n  sodium.crypto_secretstream_xchacha20poly1305_keygen(buf)\n  return buf\n}\n\nmodule.exports = {\n  keygen,\n  KEYBYTES,\n  ABYTES,\n  STATEBYTES,\n  HEADERBYTES,\n  Push,\n  Pull\n}\n","module.exports = require('sodium-native')\n","module.exports = require('sodium-native')\n","module.exports = require('sodium-native')\n","module.exports = require('sodium-native')\n","module.exports = require('sodium-native')\n","const { EventEmitter } = require('events')\nconst STREAM_DESTROYED = new Error('Stream was destroyed')\nconst PREMATURE_CLOSE = new Error('Premature close')\n\nconst queueTick = require('queue-tick')\nconst FIFO = require('fast-fifo')\n\n/* eslint-disable no-multi-spaces */\n\n// 26 bits used total (4 from shared, 13 from read, and 9 from write)\nconst MAX = ((1 << 26) - 1)\n\n// Shared state\nconst OPENING       = 0b0001\nconst PREDESTROYING = 0b0010\nconst DESTROYING    = 0b0100\nconst DESTROYED     = 0b1000\n\nconst NOT_OPENING = MAX ^ OPENING\nconst NOT_PREDESTROYING = MAX ^ PREDESTROYING\n\n// Read state (4 bit offset from shared state)\nconst READ_ACTIVE           = 0b0000000000001 << 4\nconst READ_PRIMARY          = 0b0000000000010 << 4\nconst READ_SYNC             = 0b0000000000100 << 4\nconst READ_QUEUED           = 0b0000000001000 << 4\nconst READ_RESUMED          = 0b0000000010000 << 4\nconst READ_PIPE_DRAINED     = 0b0000000100000 << 4\nconst READ_ENDING           = 0b0000001000000 << 4\nconst READ_EMIT_DATA        = 0b0000010000000 << 4\nconst READ_EMIT_READABLE    = 0b0000100000000 << 4\nconst READ_EMITTED_READABLE = 0b0001000000000 << 4\nconst READ_DONE             = 0b0010000000000 << 4\nconst READ_NEXT_TICK        = 0b0100000000001 << 4 // also active\nconst READ_NEEDS_PUSH       = 0b1000000000000 << 4\n\n// Combined read state\nconst READ_FLOWING = READ_RESUMED | READ_PIPE_DRAINED\nconst READ_ACTIVE_AND_SYNC = READ_ACTIVE | READ_SYNC\nconst READ_ACTIVE_AND_SYNC_AND_NEEDS_PUSH = READ_ACTIVE | READ_SYNC | READ_NEEDS_PUSH\nconst READ_PRIMARY_AND_ACTIVE = READ_PRIMARY | READ_ACTIVE\nconst READ_EMIT_READABLE_AND_QUEUED = READ_EMIT_READABLE | READ_QUEUED\n\nconst READ_NOT_ACTIVE             = MAX ^ READ_ACTIVE\nconst READ_NON_PRIMARY            = MAX ^ READ_PRIMARY\nconst READ_NON_PRIMARY_AND_PUSHED = MAX ^ (READ_PRIMARY | READ_NEEDS_PUSH)\nconst READ_NOT_SYNC               = MAX ^ READ_SYNC\nconst READ_PUSHED                 = MAX ^ READ_NEEDS_PUSH\nconst READ_PAUSED                 = MAX ^ READ_RESUMED\nconst READ_NOT_QUEUED             = MAX ^ (READ_QUEUED | READ_EMITTED_READABLE)\nconst READ_NOT_ENDING             = MAX ^ READ_ENDING\nconst READ_PIPE_NOT_DRAINED       = MAX ^ READ_FLOWING\nconst READ_NOT_NEXT_TICK          = MAX ^ READ_NEXT_TICK\n\n// Write state (17 bit offset, 4 bit offset from shared state and 13 from read state)\nconst WRITE_ACTIVE     = 0b000000001 << 17\nconst WRITE_PRIMARY    = 0b000000010 << 17\nconst WRITE_SYNC       = 0b000000100 << 17\nconst WRITE_QUEUED     = 0b000001000 << 17\nconst WRITE_UNDRAINED  = 0b000010000 << 17\nconst WRITE_DONE       = 0b000100000 << 17\nconst WRITE_EMIT_DRAIN = 0b001000000 << 17\nconst WRITE_NEXT_TICK  = 0b010000001 << 17 // also active\nconst WRITE_FINISHING  = 0b100000000 << 17\n\nconst WRITE_NOT_ACTIVE    = MAX ^ WRITE_ACTIVE\nconst WRITE_NOT_SYNC      = MAX ^ WRITE_SYNC\nconst WRITE_NON_PRIMARY   = MAX ^ WRITE_PRIMARY\nconst WRITE_NOT_FINISHING = MAX ^ WRITE_FINISHING\nconst WRITE_DRAINED       = MAX ^ WRITE_UNDRAINED\nconst WRITE_NOT_QUEUED    = MAX ^ WRITE_QUEUED\nconst WRITE_NOT_NEXT_TICK = MAX ^ WRITE_NEXT_TICK\n\n// Combined shared state\nconst ACTIVE = READ_ACTIVE | WRITE_ACTIVE\nconst NOT_ACTIVE = MAX ^ ACTIVE\nconst DONE = READ_DONE | WRITE_DONE\nconst DESTROY_STATUS = DESTROYING | DESTROYED | PREDESTROYING\nconst OPEN_STATUS = DESTROY_STATUS | OPENING\nconst AUTO_DESTROY = DESTROY_STATUS | DONE\nconst NON_PRIMARY = WRITE_NON_PRIMARY & READ_NON_PRIMARY\nconst ACTIVE_OR_TICKING = WRITE_NEXT_TICK | READ_NEXT_TICK\nconst TICKING = ACTIVE_OR_TICKING & NOT_ACTIVE\nconst IS_OPENING = OPEN_STATUS | TICKING\n\n// Combined shared state and read state\nconst READ_PRIMARY_STATUS = OPEN_STATUS | READ_ENDING | READ_DONE\nconst READ_STATUS = OPEN_STATUS | READ_DONE | READ_QUEUED\nconst READ_ENDING_STATUS = OPEN_STATUS | READ_ENDING | READ_QUEUED\nconst READ_READABLE_STATUS = OPEN_STATUS | READ_EMIT_READABLE | READ_QUEUED | READ_EMITTED_READABLE\nconst SHOULD_NOT_READ = OPEN_STATUS | READ_ACTIVE | READ_ENDING | READ_DONE | READ_NEEDS_PUSH\nconst READ_BACKPRESSURE_STATUS = DESTROY_STATUS | READ_ENDING | READ_DONE\n\n// Combined write state\nconst WRITE_PRIMARY_STATUS = OPEN_STATUS | WRITE_FINISHING | WRITE_DONE\nconst WRITE_QUEUED_AND_UNDRAINED = WRITE_QUEUED | WRITE_UNDRAINED\nconst WRITE_QUEUED_AND_ACTIVE = WRITE_QUEUED | WRITE_ACTIVE\nconst WRITE_DRAIN_STATUS = WRITE_QUEUED | WRITE_UNDRAINED | OPEN_STATUS | WRITE_ACTIVE\nconst WRITE_STATUS = OPEN_STATUS | WRITE_ACTIVE | WRITE_QUEUED\nconst WRITE_PRIMARY_AND_ACTIVE = WRITE_PRIMARY | WRITE_ACTIVE\nconst WRITE_ACTIVE_AND_SYNC = WRITE_ACTIVE | WRITE_SYNC\nconst WRITE_FINISHING_STATUS = OPEN_STATUS | WRITE_FINISHING | WRITE_QUEUED_AND_ACTIVE | WRITE_DONE\nconst WRITE_BACKPRESSURE_STATUS = WRITE_UNDRAINED | DESTROY_STATUS | WRITE_FINISHING | WRITE_DONE\n\nconst asyncIterator = Symbol.asyncIterator || Symbol('asyncIterator')\n\nclass WritableState {\n  constructor (stream, { highWaterMark = 16384, map = null, mapWritable, byteLength, byteLengthWritable } = {}) {\n    this.stream = stream\n    this.queue = new FIFO()\n    this.highWaterMark = highWaterMark\n    this.buffered = 0\n    this.error = null\n    this.pipeline = null\n    this.byteLength = byteLengthWritable || byteLength || defaultByteLength\n    this.map = mapWritable || map\n    this.afterWrite = afterWrite.bind(this)\n    this.afterUpdateNextTick = updateWriteNT.bind(this)\n  }\n\n  get ended () {\n    return (this.stream._duplexState & WRITE_DONE) !== 0\n  }\n\n  push (data) {\n    if (this.map !== null) data = this.map(data)\n\n    this.buffered += this.byteLength(data)\n    this.queue.push(data)\n\n    if (this.buffered < this.highWaterMark) {\n      this.stream._duplexState |= WRITE_QUEUED\n      return true\n    }\n\n    this.stream._duplexState |= WRITE_QUEUED_AND_UNDRAINED\n    return false\n  }\n\n  shift () {\n    const data = this.queue.shift()\n    const stream = this.stream\n\n    this.buffered -= this.byteLength(data)\n    if (this.buffered === 0) stream._duplexState &= WRITE_NOT_QUEUED\n\n    return data\n  }\n\n  end (data) {\n    if (typeof data === 'function') this.stream.once('finish', data)\n    else if (data !== undefined && data !== null) this.push(data)\n    this.stream._duplexState = (this.stream._duplexState | WRITE_FINISHING) & WRITE_NON_PRIMARY\n  }\n\n  autoBatch (data, cb) {\n    const buffer = []\n    const stream = this.stream\n\n    buffer.push(data)\n    while ((stream._duplexState & WRITE_STATUS) === WRITE_QUEUED_AND_ACTIVE) {\n      buffer.push(stream._writableState.shift())\n    }\n\n    if ((stream._duplexState & OPEN_STATUS) !== 0) return cb(null)\n    stream._writev(buffer, cb)\n  }\n\n  update () {\n    const stream = this.stream\n\n    while ((stream._duplexState & WRITE_STATUS) === WRITE_QUEUED) {\n      const data = this.shift()\n      stream._duplexState |= WRITE_ACTIVE_AND_SYNC\n      stream._write(data, this.afterWrite)\n      stream._duplexState &= WRITE_NOT_SYNC\n    }\n\n    if ((stream._duplexState & WRITE_PRIMARY_AND_ACTIVE) === 0) this.updateNonPrimary()\n  }\n\n  updateNonPrimary () {\n    const stream = this.stream\n\n    if ((stream._duplexState & WRITE_FINISHING_STATUS) === WRITE_FINISHING) {\n      stream._duplexState = (stream._duplexState | WRITE_ACTIVE) & WRITE_NOT_FINISHING\n      stream._final(afterFinal.bind(this))\n      return\n    }\n\n    if ((stream._duplexState & DESTROY_STATUS) === DESTROYING) {\n      if ((stream._duplexState & ACTIVE_OR_TICKING) === 0) {\n        stream._duplexState |= ACTIVE\n        stream._destroy(afterDestroy.bind(this))\n      }\n      return\n    }\n\n    if ((stream._duplexState & IS_OPENING) === OPENING) {\n      stream._duplexState = (stream._duplexState | ACTIVE) & NOT_OPENING\n      stream._open(afterOpen.bind(this))\n    }\n  }\n\n  updateNextTick () {\n    if ((this.stream._duplexState & WRITE_NEXT_TICK) !== 0) return\n    this.stream._duplexState |= WRITE_NEXT_TICK\n    queueTick(this.afterUpdateNextTick)\n  }\n}\n\nclass ReadableState {\n  constructor (stream, { highWaterMark = 16384, map = null, mapReadable, byteLength, byteLengthReadable } = {}) {\n    this.stream = stream\n    this.queue = new FIFO()\n    this.highWaterMark = highWaterMark\n    this.buffered = 0\n    this.error = null\n    this.pipeline = null\n    this.byteLength = byteLengthReadable || byteLength || defaultByteLength\n    this.map = mapReadable || map\n    this.pipeTo = null\n    this.afterRead = afterRead.bind(this)\n    this.afterUpdateNextTick = updateReadNT.bind(this)\n  }\n\n  get ended () {\n    return (this.stream._duplexState & READ_DONE) !== 0\n  }\n\n  pipe (pipeTo, cb) {\n    if (this.pipeTo !== null) throw new Error('Can only pipe to one destination')\n    if (typeof cb !== 'function') cb = null\n\n    this.stream._duplexState |= READ_PIPE_DRAINED\n    this.pipeTo = pipeTo\n    this.pipeline = new Pipeline(this.stream, pipeTo, cb)\n\n    if (cb) this.stream.on('error', noop) // We already error handle this so supress crashes\n\n    if (isStreamx(pipeTo)) {\n      pipeTo._writableState.pipeline = this.pipeline\n      if (cb) pipeTo.on('error', noop) // We already error handle this so supress crashes\n      pipeTo.on('finish', this.pipeline.finished.bind(this.pipeline)) // TODO: just call finished from pipeTo itself\n    } else {\n      const onerror = this.pipeline.done.bind(this.pipeline, pipeTo)\n      const onclose = this.pipeline.done.bind(this.pipeline, pipeTo, null) // onclose has a weird bool arg\n      pipeTo.on('error', onerror)\n      pipeTo.on('close', onclose)\n      pipeTo.on('finish', this.pipeline.finished.bind(this.pipeline))\n    }\n\n    pipeTo.on('drain', afterDrain.bind(this))\n    this.stream.emit('piping', pipeTo)\n    pipeTo.emit('pipe', this.stream)\n  }\n\n  push (data) {\n    const stream = this.stream\n\n    if (data === null) {\n      this.highWaterMark = 0\n      stream._duplexState = (stream._duplexState | READ_ENDING) & READ_NON_PRIMARY_AND_PUSHED\n      return false\n    }\n\n    if (this.map !== null) data = this.map(data)\n    this.buffered += this.byteLength(data)\n    this.queue.push(data)\n\n    stream._duplexState = (stream._duplexState | READ_QUEUED) & READ_PUSHED\n\n    return this.buffered < this.highWaterMark\n  }\n\n  shift () {\n    const data = this.queue.shift()\n\n    this.buffered -= this.byteLength(data)\n    if (this.buffered === 0) this.stream._duplexState &= READ_NOT_QUEUED\n    return data\n  }\n\n  unshift (data) {\n    let tail\n    const pending = []\n\n    while ((tail = this.queue.shift()) !== undefined) {\n      pending.push(tail)\n    }\n\n    this.push(data)\n\n    for (let i = 0; i < pending.length; i++) {\n      this.queue.push(pending[i])\n    }\n  }\n\n  read () {\n    const stream = this.stream\n\n    if ((stream._duplexState & READ_STATUS) === READ_QUEUED) {\n      const data = this.shift()\n      if (this.pipeTo !== null && this.pipeTo.write(data) === false) stream._duplexState &= READ_PIPE_NOT_DRAINED\n      if ((stream._duplexState & READ_EMIT_DATA) !== 0) stream.emit('data', data)\n      return data\n    }\n\n    return null\n  }\n\n  drain () {\n    const stream = this.stream\n\n    while ((stream._duplexState & READ_STATUS) === READ_QUEUED && (stream._duplexState & READ_FLOWING) !== 0) {\n      const data = this.shift()\n      if (this.pipeTo !== null && this.pipeTo.write(data) === false) stream._duplexState &= READ_PIPE_NOT_DRAINED\n      if ((stream._duplexState & READ_EMIT_DATA) !== 0) stream.emit('data', data)\n    }\n  }\n\n  update () {\n    const stream = this.stream\n\n    this.drain()\n\n    while (this.buffered < this.highWaterMark && (stream._duplexState & SHOULD_NOT_READ) === 0) {\n      stream._duplexState |= READ_ACTIVE_AND_SYNC_AND_NEEDS_PUSH\n      stream._read(this.afterRead)\n      stream._duplexState &= READ_NOT_SYNC\n      if ((stream._duplexState & READ_ACTIVE) === 0) this.drain()\n    }\n\n    if ((stream._duplexState & READ_READABLE_STATUS) === READ_EMIT_READABLE_AND_QUEUED) {\n      stream._duplexState |= READ_EMITTED_READABLE\n      stream.emit('readable')\n    }\n\n    if ((stream._duplexState & READ_PRIMARY_AND_ACTIVE) === 0) this.updateNonPrimary()\n  }\n\n  updateNonPrimary () {\n    const stream = this.stream\n\n    if ((stream._duplexState & READ_ENDING_STATUS) === READ_ENDING) {\n      stream._duplexState = (stream._duplexState | READ_DONE) & READ_NOT_ENDING\n      stream.emit('end')\n      if ((stream._duplexState & AUTO_DESTROY) === DONE) stream._duplexState |= DESTROYING\n      if (this.pipeTo !== null) this.pipeTo.end()\n    }\n\n    if ((stream._duplexState & DESTROY_STATUS) === DESTROYING) {\n      if ((stream._duplexState & ACTIVE_OR_TICKING) === 0) {\n        stream._duplexState |= ACTIVE\n        stream._destroy(afterDestroy.bind(this))\n      }\n      return\n    }\n\n    if ((stream._duplexState & IS_OPENING) === OPENING) {\n      stream._duplexState = (stream._duplexState | ACTIVE) & NOT_OPENING\n      stream._open(afterOpen.bind(this))\n    }\n  }\n\n  updateNextTick () {\n    if ((this.stream._duplexState & READ_NEXT_TICK) !== 0) return\n    this.stream._duplexState |= READ_NEXT_TICK\n    queueTick(this.afterUpdateNextTick)\n  }\n}\n\nclass TransformState {\n  constructor (stream) {\n    this.data = null\n    this.afterTransform = afterTransform.bind(stream)\n    this.afterFinal = null\n  }\n}\n\nclass Pipeline {\n  constructor (src, dst, cb) {\n    this.from = src\n    this.to = dst\n    this.afterPipe = cb\n    this.error = null\n    this.pipeToFinished = false\n  }\n\n  finished () {\n    this.pipeToFinished = true\n  }\n\n  done (stream, err) {\n    if (err) this.error = err\n\n    if (stream === this.to) {\n      this.to = null\n\n      if (this.from !== null) {\n        if ((this.from._duplexState & READ_DONE) === 0 || !this.pipeToFinished) {\n          this.from.destroy(this.error || new Error('Writable stream closed prematurely'))\n        }\n        return\n      }\n    }\n\n    if (stream === this.from) {\n      this.from = null\n\n      if (this.to !== null) {\n        if ((stream._duplexState & READ_DONE) === 0) {\n          this.to.destroy(this.error || new Error('Readable stream closed before ending'))\n        }\n        return\n      }\n    }\n\n    if (this.afterPipe !== null) this.afterPipe(this.error)\n    this.to = this.from = this.afterPipe = null\n  }\n}\n\nfunction afterDrain () {\n  this.stream._duplexState |= READ_PIPE_DRAINED\n  if ((this.stream._duplexState & READ_ACTIVE_AND_SYNC) === 0) this.updateNextTick()\n  else this.drain()\n}\n\nfunction afterFinal (err) {\n  const stream = this.stream\n  if (err) stream.destroy(err)\n  if ((stream._duplexState & DESTROY_STATUS) === 0) {\n    stream._duplexState |= WRITE_DONE\n    stream.emit('finish')\n  }\n  if ((stream._duplexState & AUTO_DESTROY) === DONE) {\n    stream._duplexState |= DESTROYING\n  }\n\n  stream._duplexState &= WRITE_NOT_ACTIVE\n  this.update()\n}\n\nfunction afterDestroy (err) {\n  const stream = this.stream\n\n  if (!err && this.error !== STREAM_DESTROYED) err = this.error\n  if (err) stream.emit('error', err)\n  stream._duplexState |= DESTROYED\n  stream.emit('close')\n\n  const rs = stream._readableState\n  const ws = stream._writableState\n\n  if (rs !== null && rs.pipeline !== null) rs.pipeline.done(stream, err)\n  if (ws !== null && ws.pipeline !== null) ws.pipeline.done(stream, err)\n}\n\nfunction afterWrite (err) {\n  const stream = this.stream\n\n  if (err) stream.destroy(err)\n  stream._duplexState &= WRITE_NOT_ACTIVE\n\n  if ((stream._duplexState & WRITE_DRAIN_STATUS) === WRITE_UNDRAINED) {\n    stream._duplexState &= WRITE_DRAINED\n    if ((stream._duplexState & WRITE_EMIT_DRAIN) === WRITE_EMIT_DRAIN) {\n      stream.emit('drain')\n    }\n  }\n\n  if ((stream._duplexState & WRITE_SYNC) === 0) this.update()\n}\n\nfunction afterRead (err) {\n  if (err) this.stream.destroy(err)\n  this.stream._duplexState &= READ_NOT_ACTIVE\n  if ((this.stream._duplexState & READ_SYNC) === 0) this.update()\n}\n\nfunction updateReadNT () {\n  this.stream._duplexState &= READ_NOT_NEXT_TICK\n  this.update()\n}\n\nfunction updateWriteNT () {\n  this.stream._duplexState &= WRITE_NOT_NEXT_TICK\n  this.update()\n}\n\nfunction afterOpen (err) {\n  const stream = this.stream\n\n  if (err) stream.destroy(err)\n\n  if ((stream._duplexState & DESTROYING) === 0) {\n    if ((stream._duplexState & READ_PRIMARY_STATUS) === 0) stream._duplexState |= READ_PRIMARY\n    if ((stream._duplexState & WRITE_PRIMARY_STATUS) === 0) stream._duplexState |= WRITE_PRIMARY\n    stream.emit('open')\n  }\n\n  stream._duplexState &= NOT_ACTIVE\n\n  if (stream._writableState !== null) {\n    stream._writableState.update()\n  }\n\n  if (stream._readableState !== null) {\n    stream._readableState.update()\n  }\n}\n\nfunction afterTransform (err, data) {\n  if (data !== undefined && data !== null) this.push(data)\n  this._writableState.afterWrite(err)\n}\n\nclass Stream extends EventEmitter {\n  constructor (opts) {\n    super()\n\n    this._duplexState = 0\n    this._readableState = null\n    this._writableState = null\n\n    if (opts) {\n      if (opts.open) this._open = opts.open\n      if (opts.destroy) this._destroy = opts.destroy\n      if (opts.predestroy) this._predestroy = opts.predestroy\n      if (opts.signal) {\n        opts.signal.addEventListener('abort', abort.bind(this))\n      }\n    }\n  }\n\n  _open (cb) {\n    cb(null)\n  }\n\n  _destroy (cb) {\n    cb(null)\n  }\n\n  _predestroy () {\n    // does nothing\n  }\n\n  get readable () {\n    return this._readableState !== null ? true : undefined\n  }\n\n  get writable () {\n    return this._writableState !== null ? true : undefined\n  }\n\n  get destroyed () {\n    return (this._duplexState & DESTROYED) !== 0\n  }\n\n  get destroying () {\n    return (this._duplexState & DESTROY_STATUS) !== 0\n  }\n\n  destroy (err) {\n    if ((this._duplexState & DESTROY_STATUS) === 0) {\n      if (!err) err = STREAM_DESTROYED\n      this._duplexState = (this._duplexState | DESTROYING) & NON_PRIMARY\n\n      if (this._readableState !== null) this._readableState.error = err\n      if (this._writableState !== null) this._writableState.error = err\n\n      this._duplexState |= PREDESTROYING\n      this._predestroy()\n      this._duplexState &= NOT_PREDESTROYING\n\n      if (this._readableState !== null) this._readableState.updateNextTick()\n      if (this._writableState !== null) this._writableState.updateNextTick()\n    }\n  }\n\n  on (name, fn) {\n    if (this._readableState !== null) {\n      if (name === 'data') {\n        this._duplexState |= (READ_EMIT_DATA | READ_RESUMED)\n        this._readableState.updateNextTick()\n      }\n      if (name === 'readable') {\n        this._duplexState |= READ_EMIT_READABLE\n        this._readableState.updateNextTick()\n      }\n    }\n\n    if (this._writableState !== null) {\n      if (name === 'drain') {\n        this._duplexState |= WRITE_EMIT_DRAIN\n        this._writableState.updateNextTick()\n      }\n    }\n\n    return super.on(name, fn)\n  }\n}\n\nclass Readable extends Stream {\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState |= OPENING | WRITE_DONE\n    this._readableState = new ReadableState(this, opts)\n\n    if (opts) {\n      if (opts.read) this._read = opts.read\n      if (opts.eagerOpen) this.resume().pause()\n    }\n  }\n\n  _read (cb) {\n    cb(null)\n  }\n\n  pipe (dest, cb) {\n    this._readableState.pipe(dest, cb)\n    this._readableState.updateNextTick()\n    return dest\n  }\n\n  read () {\n    this._readableState.updateNextTick()\n    return this._readableState.read()\n  }\n\n  push (data) {\n    this._readableState.updateNextTick()\n    return this._readableState.push(data)\n  }\n\n  unshift (data) {\n    this._readableState.updateNextTick()\n    return this._readableState.unshift(data)\n  }\n\n  resume () {\n    this._duplexState |= READ_RESUMED\n    this._readableState.updateNextTick()\n    return this\n  }\n\n  pause () {\n    this._duplexState &= READ_PAUSED\n    return this\n  }\n\n  static _fromAsyncIterator (ite, opts) {\n    let destroy\n\n    const rs = new Readable({\n      ...opts,\n      read (cb) {\n        ite.next().then(push).then(cb.bind(null, null)).catch(cb)\n      },\n      predestroy () {\n        destroy = ite.return()\n      },\n      destroy (cb) {\n        if (!destroy) return cb(null)\n        destroy.then(cb.bind(null, null)).catch(cb)\n      }\n    })\n\n    return rs\n\n    function push (data) {\n      if (data.done) rs.push(null)\n      else rs.push(data.value)\n    }\n  }\n\n  static from (data, opts) {\n    if (isReadStreamx(data)) return data\n    if (data[asyncIterator]) return this._fromAsyncIterator(data[asyncIterator](), opts)\n    if (!Array.isArray(data)) data = data === undefined ? [] : [data]\n\n    let i = 0\n    return new Readable({\n      ...opts,\n      read (cb) {\n        this.push(i === data.length ? null : data[i++])\n        cb(null)\n      }\n    })\n  }\n\n  static isBackpressured (rs) {\n    return (rs._duplexState & READ_BACKPRESSURE_STATUS) !== 0 || rs._readableState.buffered >= rs._readableState.highWaterMark\n  }\n\n  static isPaused (rs) {\n    return (rs._duplexState & READ_RESUMED) === 0\n  }\n\n  [asyncIterator] () {\n    const stream = this\n\n    let error = null\n    let promiseResolve = null\n    let promiseReject = null\n\n    this.on('error', (err) => { error = err })\n    this.on('readable', onreadable)\n    this.on('close', onclose)\n\n    return {\n      [asyncIterator] () {\n        return this\n      },\n      next () {\n        return new Promise(function (resolve, reject) {\n          promiseResolve = resolve\n          promiseReject = reject\n          const data = stream.read()\n          if (data !== null) ondata(data)\n          else if ((stream._duplexState & DESTROYED) !== 0) ondata(null)\n        })\n      },\n      return () {\n        return destroy(null)\n      },\n      throw (err) {\n        return destroy(err)\n      }\n    }\n\n    function onreadable () {\n      if (promiseResolve !== null) ondata(stream.read())\n    }\n\n    function onclose () {\n      if (promiseResolve !== null) ondata(null)\n    }\n\n    function ondata (data) {\n      if (promiseReject === null) return\n      if (error) promiseReject(error)\n      else if (data === null && (stream._duplexState & READ_DONE) === 0) promiseReject(STREAM_DESTROYED)\n      else promiseResolve({ value: data, done: data === null })\n      promiseReject = promiseResolve = null\n    }\n\n    function destroy (err) {\n      stream.destroy(err)\n      return new Promise((resolve, reject) => {\n        if (stream._duplexState & DESTROYED) return resolve({ value: undefined, done: true })\n        stream.once('close', function () {\n          if (err) reject(err)\n          else resolve({ value: undefined, done: true })\n        })\n      })\n    }\n  }\n}\n\nclass Writable extends Stream {\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState |= OPENING | READ_DONE\n    this._writableState = new WritableState(this, opts)\n\n    if (opts) {\n      if (opts.writev) this._writev = opts.writev\n      if (opts.write) this._write = opts.write\n      if (opts.final) this._final = opts.final\n    }\n  }\n\n  _writev (batch, cb) {\n    cb(null)\n  }\n\n  _write (data, cb) {\n    this._writableState.autoBatch(data, cb)\n  }\n\n  _final (cb) {\n    cb(null)\n  }\n\n  static isBackpressured (ws) {\n    return (ws._duplexState & WRITE_BACKPRESSURE_STATUS) !== 0\n  }\n\n  write (data) {\n    this._writableState.updateNextTick()\n    return this._writableState.push(data)\n  }\n\n  end (data) {\n    this._writableState.updateNextTick()\n    this._writableState.end(data)\n    return this\n  }\n}\n\nclass Duplex extends Readable { // and Writable\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState = OPENING\n    this._writableState = new WritableState(this, opts)\n\n    if (opts) {\n      if (opts.writev) this._writev = opts.writev\n      if (opts.write) this._write = opts.write\n      if (opts.final) this._final = opts.final\n    }\n  }\n\n  _writev (batch, cb) {\n    cb(null)\n  }\n\n  _write (data, cb) {\n    this._writableState.autoBatch(data, cb)\n  }\n\n  _final (cb) {\n    cb(null)\n  }\n\n  write (data) {\n    this._writableState.updateNextTick()\n    return this._writableState.push(data)\n  }\n\n  end (data) {\n    this._writableState.updateNextTick()\n    this._writableState.end(data)\n    return this\n  }\n}\n\nclass Transform extends Duplex {\n  constructor (opts) {\n    super(opts)\n    this._transformState = new TransformState(this)\n\n    if (opts) {\n      if (opts.transform) this._transform = opts.transform\n      if (opts.flush) this._flush = opts.flush\n    }\n  }\n\n  _write (data, cb) {\n    if (this._readableState.buffered >= this._readableState.highWaterMark) {\n      this._transformState.data = data\n    } else {\n      this._transform(data, this._transformState.afterTransform)\n    }\n  }\n\n  _read (cb) {\n    if (this._transformState.data !== null) {\n      const data = this._transformState.data\n      this._transformState.data = null\n      cb(null)\n      this._transform(data, this._transformState.afterTransform)\n    } else {\n      cb(null)\n    }\n  }\n\n  _transform (data, cb) {\n    cb(null, data)\n  }\n\n  _flush (cb) {\n    cb(null)\n  }\n\n  _final (cb) {\n    this._transformState.afterFinal = cb\n    this._flush(transformAfterFlush.bind(this))\n  }\n}\n\nclass PassThrough extends Transform {}\n\nfunction transformAfterFlush (err, data) {\n  const cb = this._transformState.afterFinal\n  if (err) return cb(err)\n  if (data !== null && data !== undefined) this.push(data)\n  this.push(null)\n  cb(null)\n}\n\nfunction pipelinePromise (...streams) {\n  return new Promise((resolve, reject) => {\n    return pipeline(...streams, (err) => {\n      if (err) return reject(err)\n      resolve()\n    })\n  })\n}\n\nfunction pipeline (stream, ...streams) {\n  const all = Array.isArray(stream) ? [...stream, ...streams] : [stream, ...streams]\n  const done = (all.length && typeof all[all.length - 1] === 'function') ? all.pop() : null\n\n  if (all.length < 2) throw new Error('Pipeline requires at least 2 streams')\n\n  let src = all[0]\n  let dest = null\n  let error = null\n\n  for (let i = 1; i < all.length; i++) {\n    dest = all[i]\n\n    if (isStreamx(src)) {\n      src.pipe(dest, onerror)\n    } else {\n      errorHandle(src, true, i > 1, onerror)\n      src.pipe(dest)\n    }\n\n    src = dest\n  }\n\n  if (done) {\n    let fin = false\n\n    dest.on('finish', () => { fin = true })\n    dest.on('error', err => { error = error || err })\n    dest.on('close', () => done(error || (fin ? null : PREMATURE_CLOSE)))\n  }\n\n  return dest\n\n  function errorHandle (s, rd, wr, onerror) {\n    s.on('error', onerror)\n    s.on('close', onclose)\n\n    function onclose () {\n      if (rd && s._readableState && !s._readableState.ended) return onerror(PREMATURE_CLOSE)\n      if (wr && s._writableState && !s._writableState.ended) return onerror(PREMATURE_CLOSE)\n    }\n  }\n\n  function onerror (err) {\n    if (!err || error) return\n    error = err\n\n    for (const s of all) {\n      s.destroy(err)\n    }\n  }\n}\n\nfunction isStream (stream) {\n  return !!stream._readableState || !!stream._writableState\n}\n\nfunction isStreamx (stream) {\n  return typeof stream._duplexState === 'number' && isStream(stream)\n}\n\nfunction getStreamError (stream) {\n  return (stream._readableState && stream._readableState.error) || (stream._writableState && stream._writableState.error)\n}\n\nfunction isReadStreamx (stream) {\n  return isStreamx(stream) && stream.readable\n}\n\nfunction isTypedArray (data) {\n  return typeof data === 'object' && data !== null && typeof data.byteLength === 'number'\n}\n\nfunction defaultByteLength (data) {\n  return isTypedArray(data) ? data.byteLength : 1024\n}\n\nfunction noop () {}\n\nfunction abort () {\n  this.destroy(new Error('Stream aborted.'))\n}\n\nmodule.exports = {\n  pipeline,\n  pipelinePromise,\n  isStream,\n  isStreamx,\n  getStreamError,\n  Stream,\n  Writable,\n  Readable,\n  Duplex,\n  Transform,\n  // Export PassThrough for compatibility with Node.js core's stream module\n  PassThrough\n}\n","module.exports = class TimerBrowser {\n  constructor (ms, fn, ctx = null, interval = false) {\n    this.ms = ms\n    this.ontimeout = fn\n    this.context = ctx || null\n    this.interval = interval\n    this.done = false\n\n    this._timer = interval\n      ? setInterval(callInterval, ms, this)\n      : setTimeout(callTimeout, ms, this)\n  }\n\n  unref () {}\n\n  ref () {}\n\n  refresh () {\n    if (this.done) return\n\n    if (this.interval) {\n      clearInterval(this._timer)\n      this._timer = setInterval(callInterval, this.ms, this)\n    } else {\n      clearTimeout(this._timer)\n      this._timer = setTimeout(callTimeout, this.ms, this)\n    }\n  }\n\n  destroy () {\n    this.done = true\n    this.ontimeout = null\n\n    if (this.interval) clearInterval(this._timer)\n    else clearTimeout(this._timer)\n  }\n\n  static once (ms, fn, ctx) {\n    return new this(ms, fn, ctx, false)\n  }\n\n  static on (ms, fn, ctx) {\n    return new this(ms, fn, ctx, true)\n  }\n}\n\nfunction callTimeout (self) {\n  self.done = true\n  self.ontimeout.call(self.context)\n}\n\nfunction callInterval (self) {\n  self.ontimeout.call(self.context)\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = class MaxCache {\n  constructor ({ maxSize, maxAge, createMap }) {\n    this.maxSize = maxSize\n    this.maxAge = maxAge\n\n    this._createMap = createMap || defaultCreateMap\n    this._latest = this._createMap()\n    this._oldest = this._createMap()\n    this._retained = this._createMap()\n    this._gced = false\n    this._interval = null\n\n    if (this.maxAge > 0 && this.maxAge < Infinity) {\n      const tick = Math.ceil(2 / 3 * this.maxAge)\n      this._interval = setInterval(this._gcAuto.bind(this), tick)\n      if (this._interval.unref) this._interval.unref()\n    }\n  }\n\n  * [Symbol.iterator] () {\n    for (const it of [this._latest, this._oldest, this._retained]) {\n      yield * it\n    }\n  }\n\n  * keys () {\n    for (const it of [this._latest, this._oldest, this._retained]) {\n      yield * it.keys()\n    }\n  }\n\n  * values () {\n    for (const it of [this._latest, this._oldest, this._retained]) {\n      yield * it.values()\n    }\n  }\n\n  destroy () {\n    this.clear()\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  clear () {\n    this._gced = true\n    this._latest.clear()\n    this._oldest.clear()\n    this._retained.clear()\n  }\n\n  set (k, v) {\n    if (this._retained.has(k)) return this\n    this._latest.set(k, v)\n    this._oldest.delete(k) || this._retained.delete(k)\n    if (this._latest.size >= this.maxSize) this._gc()\n    return this\n  }\n\n  retain (k, v) {\n    this._retained.set(k, v)\n    this._latest.delete(k) || this._oldest.delete(k)\n    return this\n  }\n\n  delete (k) {\n    return this._latest.delete(k) || this._oldest.delete(k) || this._retained.delete(k)\n  }\n\n  has (k) {\n    return this._latest.has(k) || this._oldest.has(k) || this._retained.has(k)\n  }\n\n  get (k) {\n    if (this._latest.has(k)) {\n      return this._latest.get(k)\n    }\n\n    if (this._oldest.has(k)) {\n      const v = this._oldest.get(k)\n      this._latest.set(k, v)\n      this._oldest.delete(k)\n      return v\n    }\n\n    if (this._retained.has(k)) {\n      return this._retained.get(k)\n    }\n\n    return null\n  }\n\n  _gcAuto () {\n    if (!this._gced) this._gc()\n    this._gced = false\n  }\n\n  _gc () {\n    this._gced = true\n    this._oldest = this._latest\n    this._latest = this._createMap()\n  }\n}\n\nfunction defaultCreateMap () {\n  return new Map()\n}\n","var xsalsa20 = typeof WebAssembly !== \"undefined\" && require('./xsalsa20')()\n\nvar SIGMA = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107])\nvar head = 144\nvar top = head\nvar free = []\n\nmodule.exports = XSalsa20\n\nXSalsa20.NONCEBYTES = 24\nXSalsa20.KEYBYTES = 32\n\nXSalsa20.core_hsalsa20 = core_hsalsa20\nXSalsa20.SIGMA = SIGMA\n\nfunction XSalsa20 (nonce, key) {\n  if (!(this instanceof XSalsa20)) return new XSalsa20(nonce, key)\n  if (!nonce || nonce.length < 24) throw new Error('nonce must be at least 24 bytes')\n  if (!key || key.length < 32) throw new Error('key must be at least 32 bytes')\n  this._xor = xsalsa20 ? new WASM(nonce, key) : new Fallback(nonce, key)\n}\n\nXSalsa20.prototype.update = function (input, output) {\n  if (!input) throw new Error('input must be Uint8Array or Buffer')\n  if (!output) output = new Uint8Array(input.length)\n  if (input.length) this._xor.update(input, output)\n  return output\n}\n\nXSalsa20.prototype.final =\nXSalsa20.prototype.finalize = function () {\n  this._xor.finalize()\n  this._xor = null\n}\n\nfunction WASM (nonce, key) {\n  if (!free.length) {\n    free.push(head)\n    head += 64\n  }\n\n  this._pointer = free.pop()\n  this._nonce = this._pointer + 8\n  this._key = this._nonce + 24\n  this._overflow = 0\n  this._memory = new Uint8Array(xsalsa20.memory.buffer)\n\n  this._memory.fill(0, this._pointer, this._pointer + 8)\n  this._memory.set(nonce, this._nonce)\n  this._memory.set(key, this._key)\n}\n\nWASM.prototype.realloc = function (size) {\n  xsalsa20.memory.grow(Math.ceil(Math.abs(size - this._memory.length) / 65536))\n  this._memory = new Uint8Array(xsalsa20.memory.buffer)\n}\n\nWASM.prototype.update = function (input, output) {\n  var len = this._overflow + input.length\n  var start = head + this._overflow\n\n  top = head + len\n  if (top >= this._memory.length) this.realloc(top)\n\n  this._memory.set(input, start)\n  xsalsa20.xsalsa20_xor(this._pointer, head, head, len, this._nonce, this._key)\n  output.set(this._memory.subarray(start, head + len))\n\n  this._overflow = len & 63\n}\n\nWASM.prototype.finalize = function () {\n  this._memory.fill(0, this._pointer, this._key + 32)\n  if (top > head) {\n    this._memory.fill(0, head, top)\n    top = 0\n  }\n  free.push(this._pointer)\n}\n\nfunction Fallback (nonce, key) {\n  this._s = new Uint8Array(32)\n  this._z = new Uint8Array(16)\n  this._overflow = 0\n  core_hsalsa20(this._s, nonce, key, SIGMA)\n  for (var i = 0; i < 8; i++) this._z[i] = nonce[i + 16]\n}\n\nFallback.prototype.update = function (input, output) {\n  var x = new Uint8Array(64)\n  var u = 0\n  var i = this._overflow\n  var b = input.length + this._overflow\n  var z = this._z\n  var mpos = -this._overflow\n  var cpos = -this._overflow\n\n  while (b >= 64) {\n    core_salsa20(x, z, this._s, SIGMA)\n    for (; i < 64; i++) output[cpos + i] = input[mpos + i] ^ x[i]\n    u = 1\n    for (i = 8; i < 16; i++) {\n      u += (z[i] & 0xff) | 0\n      z[i] = u & 0xff\n      u >>>= 8\n    }\n    b -= 64\n    cpos += 64\n    mpos += 64\n    i = 0\n  }\n  if (b > 0) {\n    core_salsa20(x, z, this._s, SIGMA)\n    for (; i < b; i++) output[cpos + i] = input[mpos + i] ^ x[i]\n  }\n\n  this._overflow = b & 63\n}\n\nFallback.prototype.finalize = function () {\n  this._s.fill(0)\n  this._z.fill(0)\n}\n\n// below methods are ported from tweet nacl\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff) << 8 | (c[ 2] & 0xff) << 16 | (c[ 3] & 0xff) << 24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff) << 8 | (k[ 2] & 0xff) << 16 | (k[ 3] & 0xff) << 24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff) << 8 | (k[ 6] & 0xff) << 16 | (k[ 7] & 0xff) << 24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,\n      j4  = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff) << 8 | (c[ 6] & 0xff) << 16 | (c[ 7] & 0xff) << 24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff) << 8 | (p[ 2] & 0xff) << 16 | (p[ 3] & 0xff) << 24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff) << 8 | (p[ 6] & 0xff) << 16 | (p[ 7] & 0xff) << 24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,\n      j9  = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,\n      j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,\n      j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,\n      j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,\n      j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,\n      j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0\n    x4 ^= u << 7 | u >>> 25\n    u = x4 + x0 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x4 | 0\n    x12 ^= u << 13 | u >>> 19\n    u = x12 + x8 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x1 | 0\n    x9 ^= u << 7 | u >>> 25\n    u = x9 + x5 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x9 | 0\n    x1 ^= u << 13 | u >>> 19\n    u = x1 + x13 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x6 | 0\n    x14 ^= u << 7 | u >>> 25\n    u = x14 + x10 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x14 | 0\n    x6 ^= u << 13 | u >>> 19\n    u = x6 + x2 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x11 | 0\n    x3 ^= u << 7 | u >>> 25\n    u = x3 + x15 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x3 | 0\n    x11 ^= u << 13 | u >>> 19\n    u = x11 + x7 | 0\n    x15 ^= u << 18 | u >>> 14\n\n    u = x0 + x3 | 0\n    x1 ^= u << 7 | u >>> 25\n    u = x1 + x0 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x1 | 0\n    x3 ^= u << 13 | u >>> 19\n    u = x3 + x2 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x4 | 0\n    x6 ^= u << 7 | u >>> 25\n    u = x6 + x5 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x6 | 0\n    x4 ^= u << 13 | u >>> 19\n    u = x4 + x7 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x9 | 0\n    x11 ^= u << 7 | u >>> 25\n    u = x11 + x10 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x11 | 0\n    x9 ^= u << 13 | u >>> 19\n    u = x9 + x8 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x14 | 0\n    x12 ^= u << 7 | u >>> 25\n    u = x12 + x15 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x12 | 0\n    x14 ^= u << 13 | u >>> 19\n    u = x14 + x13 | 0\n    x15 ^= u << 18 | u >>> 14\n  }\n   x0 =  x0 +  j0 | 0\n   x1 =  x1 +  j1 | 0\n   x2 =  x2 +  j2 | 0\n   x3 =  x3 +  j3 | 0\n   x4 =  x4 +  j4 | 0\n   x5 =  x5 +  j5 | 0\n   x6 =  x6 +  j6 | 0\n   x7 =  x7 +  j7 | 0\n   x8 =  x8 +  j8 | 0\n   x9 =  x9 +  j9 | 0\n  x10 = x10 + j10 | 0\n  x11 = x11 + j11 | 0\n  x12 = x12 + j12 | 0\n  x13 = x13 + j13 | 0\n  x14 = x14 + j14 | 0\n  x15 = x15 + j15 | 0\n\n  o[ 0] = x0 >>>  0 & 0xff\n  o[ 1] = x0 >>>  8 & 0xff\n  o[ 2] = x0 >>> 16 & 0xff\n  o[ 3] = x0 >>> 24 & 0xff\n\n  o[ 4] = x1 >>>  0 & 0xff\n  o[ 5] = x1 >>>  8 & 0xff\n  o[ 6] = x1 >>> 16 & 0xff\n  o[ 7] = x1 >>> 24 & 0xff\n\n  o[ 8] = x2 >>>  0 & 0xff\n  o[ 9] = x2 >>>  8 & 0xff\n  o[10] = x2 >>> 16 & 0xff\n  o[11] = x2 >>> 24 & 0xff\n\n  o[12] = x3 >>>  0 & 0xff\n  o[13] = x3 >>>  8 & 0xff\n  o[14] = x3 >>> 16 & 0xff\n  o[15] = x3 >>> 24 & 0xff\n\n  o[16] = x4 >>>  0 & 0xff\n  o[17] = x4 >>>  8 & 0xff\n  o[18] = x4 >>> 16 & 0xff\n  o[19] = x4 >>> 24 & 0xff\n\n  o[20] = x5 >>>  0 & 0xff\n  o[21] = x5 >>>  8 & 0xff\n  o[22] = x5 >>> 16 & 0xff\n  o[23] = x5 >>> 24 & 0xff\n\n  o[24] = x6 >>>  0 & 0xff\n  o[25] = x6 >>>  8 & 0xff\n  o[26] = x6 >>> 16 & 0xff\n  o[27] = x6 >>> 24 & 0xff\n\n  o[28] = x7 >>>  0 & 0xff\n  o[29] = x7 >>>  8 & 0xff\n  o[30] = x7 >>> 16 & 0xff\n  o[31] = x7 >>> 24 & 0xff\n\n  o[32] = x8 >>>  0 & 0xff\n  o[33] = x8 >>>  8 & 0xff\n  o[34] = x8 >>> 16 & 0xff\n  o[35] = x8 >>> 24 & 0xff\n\n  o[36] = x9 >>>  0 & 0xff\n  o[37] = x9 >>>  8 & 0xff\n  o[38] = x9 >>> 16 & 0xff\n  o[39] = x9 >>> 24 & 0xff\n\n  o[40] = x10 >>>  0 & 0xff\n  o[41] = x10 >>>  8 & 0xff\n  o[42] = x10 >>> 16 & 0xff\n  o[43] = x10 >>> 24 & 0xff\n\n  o[44] = x11 >>>  0 & 0xff\n  o[45] = x11 >>>  8 & 0xff\n  o[46] = x11 >>> 16 & 0xff\n  o[47] = x11 >>> 24 & 0xff\n\n  o[48] = x12 >>>  0 & 0xff\n  o[49] = x12 >>>  8 & 0xff\n  o[50] = x12 >>> 16 & 0xff\n  o[51] = x12 >>> 24 & 0xff\n\n  o[52] = x13 >>>  0 & 0xff\n  o[53] = x13 >>>  8 & 0xff\n  o[54] = x13 >>> 16 & 0xff\n  o[55] = x13 >>> 24 & 0xff\n\n  o[56] = x14 >>>  0 & 0xff\n  o[57] = x14 >>>  8 & 0xff\n  o[58] = x14 >>> 16 & 0xff\n  o[59] = x14 >>> 24 & 0xff\n\n  o[60] = x15 >>>  0 & 0xff\n  o[61] = x15 >>>  8 & 0xff\n  o[62] = x15 >>> 16 & 0xff\n  o[63] = x15 >>> 24 & 0xff\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff) << 8 | (c[ 2] & 0xff) << 16 | (c[ 3] & 0xff) << 24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff) << 8 | (k[ 2] & 0xff) << 16 | (k[ 3] & 0xff) << 24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff) << 8 | (k[ 6] & 0xff) << 16 | (k[ 7] & 0xff) << 24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,\n      j4  = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff) << 8 | (c[ 6] & 0xff) << 16 | (c[ 7] & 0xff) << 24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff) << 8 | (p[ 2] & 0xff) << 16 | (p[ 3] & 0xff) << 24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff) << 8 | (p[ 6] & 0xff) << 16 | (p[ 7] & 0xff) << 24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,\n      j9  = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,\n      j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,\n      j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,\n      j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,\n      j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,\n      j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0\n    x4 ^= u << 7 | u >>> 25\n    u = x4 + x0 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x4 | 0\n    x12 ^= u << 13 | u >>> 19\n    u = x12 + x8 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x1 | 0\n    x9 ^= u << 7 | u >>> 25\n    u = x9 + x5 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x9 | 0\n    x1 ^= u << 13 | u >>> 19\n    u = x1 + x13 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x6 | 0\n    x14 ^= u << 7 | u >>> 25\n    u = x14 + x10 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x14 | 0\n    x6 ^= u << 13 | u >>> 19\n    u = x6 + x2 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x11 | 0\n    x3 ^= u << 7 | u >>> 25\n    u = x3 + x15 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x3 | 0\n    x11 ^= u << 13 | u >>> 19\n    u = x11 + x7 | 0\n    x15 ^= u << 18 | u >>> 14\n\n    u = x0 + x3 | 0\n    x1 ^= u << 7 | u >>> 25\n    u = x1 + x0 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x1 | 0\n    x3 ^= u << 13 | u >>> 19\n    u = x3 + x2 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x4 | 0\n    x6 ^= u << 7 | u >>> 25\n    u = x6 + x5 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x6 | 0\n    x4 ^= u << 13 | u >>> 19\n    u = x4 + x7 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x9 | 0\n    x11 ^= u << 7 | u >>> 25\n    u = x11 + x10 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x11 | 0\n    x9 ^= u << 13 | u >>> 19\n    u = x9 + x8 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x14 | 0\n    x12 ^= u << 7 | u >>> 25\n    u = x12 + x15 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x12 | 0\n    x14 ^= u << 13 | u >>> 19\n    u = x14 + x13 | 0\n    x15 ^= u << 18 | u >>> 14\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff\n  o[ 1] = x0 >>>  8 & 0xff\n  o[ 2] = x0 >>> 16 & 0xff\n  o[ 3] = x0 >>> 24 & 0xff\n\n  o[ 4] = x5 >>>  0 & 0xff\n  o[ 5] = x5 >>>  8 & 0xff\n  o[ 6] = x5 >>> 16 & 0xff\n  o[ 7] = x5 >>> 24 & 0xff\n\n  o[ 8] = x10 >>>  0 & 0xff\n  o[ 9] = x10 >>>  8 & 0xff\n  o[10] = x10 >>> 16 & 0xff\n  o[11] = x10 >>> 24 & 0xff\n\n  o[12] = x15 >>>  0 & 0xff\n  o[13] = x15 >>>  8 & 0xff\n  o[14] = x15 >>> 16 & 0xff\n  o[15] = x15 >>> 24 & 0xff\n\n  o[16] = x6 >>>  0 & 0xff\n  o[17] = x6 >>>  8 & 0xff\n  o[18] = x6 >>> 16 & 0xff\n  o[19] = x6 >>> 24 & 0xff\n\n  o[20] = x7 >>>  0 & 0xff\n  o[21] = x7 >>>  8 & 0xff\n  o[22] = x7 >>> 16 & 0xff\n  o[23] = x7 >>> 24 & 0xff\n\n  o[24] = x8 >>>  0 & 0xff\n  o[25] = x8 >>>  8 & 0xff\n  o[26] = x8 >>> 16 & 0xff\n  o[27] = x8 >>> 24 & 0xff\n\n  o[28] = x9 >>>  0 & 0xff\n  o[29] = x9 >>>  8 & 0xff\n  o[30] = x9 >>> 16 & 0xff\n  o[31] = x9 >>> 24 & 0xff\n}\n","var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./xsalsa20.wat\nvar require_xsalsa20 = __commonJS({\n  \"wasm-binary:./xsalsa20.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"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\");\n  }\n});\n\n// wasm-module:./xsalsa20.wat\nvar bytes = require_xsalsa20();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n","const b4a = require('b4a')\n\nconst ALPHABET = 'ybndrfg8ejkmcpqxot1uwisza345h769'.split('')\nconst MIN = 49 // 0\nconst MAX = 122 // z\nconst REVERSE = new Int8Array(1 + MAX - MIN)\n\nREVERSE.fill(-1)\n\nfor (let i = 0; i < ALPHABET.length; i++) {\n  const v = ALPHABET[i].charCodeAt(0) - MIN\n  REVERSE[v] = i\n}\n\nexports.encode = encode\nexports.decode = decode\n\nfunction decode (s, out) {\n  let pb = 0\n  let ps = 0\n\n  const r = s.length & 7\n  const q = (s.length - r) / 8\n\n  if (!out) out = b4a.allocUnsafe(Math.ceil(s.length * 5 / 8))\n\n  // 0 5 2 7 4 1 6 3 (+5 mod 8)\n  for (let i = 0; i < q; i++) {\n    const a = quintet(s, ps++)\n    const b = quintet(s, ps++)\n    const c = quintet(s, ps++)\n    const d = quintet(s, ps++)\n    const e = quintet(s, ps++)\n    const f = quintet(s, ps++)\n    const g = quintet(s, ps++)\n    const h = quintet(s, ps++)\n\n    out[pb++] = (a << 3) | (b >> 2)\n    out[pb++] = ((b & 0b11) << 6) | (c << 1) | (d >> 4)\n    out[pb++] = ((d & 0b1111) << 4) | (e >> 1)\n    out[pb++] = ((e & 0b1) << 7) | (f << 2) | (g >> 3)\n    out[pb++] = ((g & 0b111) << 5) | h\n  }\n\n  if (r === 0) return out.subarray(0, pb)\n\n  const a = quintet(s, ps++)\n  const b = quintet(s, ps++)\n\n  out[pb++] = (a << 3) | (b >> 2)\n\n  if (r <= 2) return out.subarray(0, pb)\n\n  const c = quintet(s, ps++)\n  const d = quintet(s, ps++)\n\n  out[pb++] = ((b & 0b11) << 6) | (c << 1) | (d >> 4)\n\n  if (r <= 4) return out.subarray(0, pb)\n\n  const e = quintet(s, ps++)\n\n  out[pb++] = ((d & 0b1111) << 4) | (e >> 1)\n\n  if (r <= 5) return out.subarray(0, pb)\n\n  const f = quintet(s, ps++)\n  const g = quintet(s, ps++)\n\n  out[pb++] = ((e & 0b1) << 7) | (f << 2) | (g >> 3)\n\n  if (r <= 7) return out.subarray(0, pb)\n\n  const h = quintet(s, ps++)\n\n  out[pb++] = ((g & 0b111) << 5) | h\n\n  return out.subarray(0, pb)\n}\n\nfunction encode (buf) {\n  if (typeof buf === 'string') buf = b4a.from(buf)\n\n  const max = buf.byteLength * 8\n\n  let s = ''\n\n  for (let p = 0; p < max; p += 5) {\n    const i = p >> 3\n    const j = p & 7\n\n    if (j <= 3) {\n      s += ALPHABET[(buf[i] >> (3 - j)) & 0b11111]\n      continue\n    }\n\n    const of = j - 3\n    const h = (buf[i] << of) & 0b11111\n    const l = (i >= buf.length ? 0 : buf[i + 1]) >> (8 - of)\n\n    s += ALPHABET[h | l]\n  }\n\n  return s\n}\n\nfunction quintet (s, i) {\n  if (i > s.length) {\n    return 0\n  }\n\n  const v = s.charCodeAt(i)\n\n  if (v < MIN || v > MAX) {\n    throw Error('Invalid character in base32 input: \"' + s[i] + '\" at position ' + i)\n  }\n\n  const bits = REVERSE[v - MIN]\n\n  if (bits === -1) {\n    throw Error('Invalid character in base32 input: \"' + s[i] + '\" at position ' + i)\n  }\n\n  return bits\n}\n","/* (ignored) */","/* (ignored) */","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n\nexport const isArray = Array.isArray\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    storage.onChange(e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') }))\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n}\n\n// Use BroadcastChannel or Polyfill\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = new Set()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => getChannel(room).subs.add(f)\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => getChannel(room).subs.delete(f)\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* istanbul ignore if */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* istanbul ignore if */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* istanbul ignore next */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* istanbul ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* istanbul ignore else */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* istanbul ignore next */\nexport const writeVarString = (string.utf8TextEncoder && string.utf8TextEncoder.encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n\n/* istanbul ignore next */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* istanbul ignore next */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Error}\n */\nexport const create = s => new Error(s)\n\n/* istanbul ignore next */\n/**\n * @throws {Error}\n * @return {never}\n */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/* istanbul ignore next */\n/**\n * @throws {Error}\n * @return {never}\n */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* istanbul ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/* istanbul ignore next */\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* istanbul ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/* istanbul ignore next */\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n","/* eslint-env browser */\n\n/**\n * Helpers to work with IndexedDB.\n *\n * @module indexeddb\n */\n\nimport * as promise from './promise.js'\nimport * as error from './error.js'\n\n/* istanbul ignore next */\n/**\n * IDB Request to Promise transformer\n *\n * @param {IDBRequest} request\n * @return {Promise<any>}\n */\nexport const rtop = request => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onerror = event => reject(new Error(event.target.error))\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onblocked = () => location.reload()\n  // @ts-ignore\n  request.onsuccess = event => resolve(event.target.result)\n})\n\n/* istanbul ignore next */\n/**\n * @param {string} name\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\n * @return {Promise<IDBDatabase>}\n */\nexport const openDB = (name, initDB) => promise.create((resolve, reject) => {\n  const request = indexedDB.open(name)\n  /**\n   * @param {any} event\n   */\n  request.onupgradeneeded = event => initDB(event.target.result)\n  /* istanbul ignore next */\n  /**\n   * @param {any} event\n   */\n  request.onerror = event => reject(error.create(event.target.error))\n  /* istanbul ignore next */\n  request.onblocked = () => location.reload()\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    /**\n     * @type {IDBDatabase}\n     */\n    const db = event.target.result\n    /* istanbul ignore next */\n    db.onversionchange = () => { db.close() }\n    /* istanbul ignore if */\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener('unload', () => db.close())\n    }\n    resolve(db)\n  }\n})\n\n/* istanbul ignore next */\n/**\n * @param {string} name\n */\nexport const deleteDB = name => rtop(indexedDB.deleteDatabase(name))\n\n/* istanbul ignore next */\n/**\n * @param {IDBDatabase} db\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\n */\nexport const createStores = (db, definitions) => definitions.forEach(d =>\n  // @ts-ignore\n  db.createObjectStore.apply(db, d)\n)\n\n/**\n * @param {IDBDatabase} db\n * @param {Array<string>} stores\n * @param {\"readwrite\"|\"readonly\"} [access]\n * @return {Array<IDBObjectStore>}\n */\nexport const transact = (db, stores, access = 'readwrite') => {\n  const transaction = db.transaction(stores, access)\n  return stores.map(store => getStore(transaction, store))\n}\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<number>}\n */\nexport const count = (store, range) =>\n  rtop(store.count(range))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\n */\nexport const get = (store, key) =>\n  rtop(store.get(key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\n */\nexport const del = (store, key) =>\n  rtop(store.delete(key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean} item\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\n */\nexport const put = (store, item, key) =>\n  rtop(store.put(item, key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean}  item\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\n * @return {Promise<any>}\n */\nexport const add = (store, item, key) =>\n  rtop(store.add(item, key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date}  item\n * @return {Promise<number>} Returns the generated key\n */\nexport const addAutoKey = (store, item) =>\n  rtop(store.add(item))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @param {number} [limit]\n * @return {Promise<Array<any>>}\n */\nexport const getAll = (store, range, limit) =>\n  rtop(store.getAll(range, limit))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @param {number} [limit]\n * @return {Promise<Array<any>>}\n */\nexport const getAllKeys = (store, range, limit) =>\n  rtop(store.getAllKeys(range, limit))\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} query\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n * @return {Promise<any>}\n */\nexport const queryFirst = (store, query, direction) => {\n  /**\n   * @type {any}\n   */\n  let first = null\n  return iterateKeys(store, query, key => {\n    first = key\n    return false\n  }, direction).then(() => first)\n}\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange?} [range]\n * @return {Promise<any>}\n */\nexport const getLastKey = (store, range = null) => queryFirst(store, range, 'prev')\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange?} [range]\n * @return {Promise<any>}\n */\nexport const getFirstKey = (store, range = null) => queryFirst(store, range, 'next')\n\n/**\n * @typedef KeyValuePair\n * @type {Object}\n * @property {any} k key\n * @property {any} v Value\n */\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @param {number} [limit]\n * @return {Promise<Array<KeyValuePair>>}\n */\nexport const getAllKeysValues = (store, range, limit) =>\n  // @ts-ignore\n  promise.all([getAllKeys(store, range, limit), getAll(store, range, limit)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })))\n\n/* istanbul ignore next */\n/**\n * @param {any} request\n * @param {function(IDBCursorWithValue):void|boolean|Promise<void|boolean>} f\n * @return {Promise<void>}\n */\nconst iterateOnRequest = (request, f) => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  request.onerror = reject\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = async event => {\n    const cursor = event.target.result\n    if (cursor === null || (await f(cursor)) === false) {\n      return resolve()\n    }\n    cursor.continue()\n  }\n})\n\n/* istanbul ignore next */\n/**\n * Iterate on keys and values\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any,any):void|boolean|Promise<void|boolean>} f Callback that receives (value, key)\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\nexport const iterate = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key))\n\n/* istanbul ignore next */\n/**\n * Iterate on the keys (no values)\n *\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any):void|boolean|Promise<void|boolean>} f callback that receives the key\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\nexport const iterateKeys = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key))\n\n/* istanbul ignore next */\n/**\n * Open store from transaction\n * @param {IDBTransaction} t\n * @param {String} store\n * @returns {IDBObjectStore}\n */\nexport const getStore = (t, store) => t.objectStore(store)\n\n/* istanbul ignore next */\n/**\n * @param {any} lower\n * @param {any} upper\n * @param {boolean} lowerOpen\n * @param {boolean} upperOpen\n */\nexport const createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\n\n/* istanbul ignore next */\n/**\n * @param {any} upper\n * @param {boolean} upperOpen\n */\nexport const createIDBKeyRangeUpperBound = (upper, upperOpen) => IDBKeyRange.upperBound(upper, upperOpen)\n\n/* istanbul ignore next */\n/**\n * @param {any} lower\n * @param {boolean} lowerOpen\n */\nexport const createIDBKeyRangeLowerBound = (lower, lowerOpen) => IDBKeyRange.lowerBound(lower, lowerOpen)\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nexport const stringify = JSON.stringify\n\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */\nexport const parse = JSON.parse\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style === undefined) {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      if (arg.constructor === Object) {\n        logArgs.push(JSON.stringify(arg))\n      } else {\n        logArgs.push(arg)\n      }\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = (args) => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.supportsColor\n  ? (env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs)\n  : computeNoColorLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = (dom) => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(\n      color,\n      moduleName,\n      UNCOLOR,\n      ...args.map((arg) =>\n        (typeof arg === 'string' || typeof arg === 'symbol')\n          ? arg\n          : JSON.stringify(arg)\n      ),\n      color,\n      ' +' + timeDiff + 'ms'\n    )\n  }\n}\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template T\n * @param {Array<Promise<T>>} arrp\n * @return {Promise<Array<T>>}\n */\nexport const all = arrp => Promise.all(arrp)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* istanbul ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set => {\n  return set.values().next().value || undefined\n}\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => {\n  return new Set(entries)\n}\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/* eslint-env browser */\n\n/**\n * Tiny websocket connection handler.\n *\n * Implements exponential backoff reconnects, ping/pong, and a nice event system using [lib0/observable].\n *\n * @module websocket\n */\n\nimport { Observable } from './observable.js'\nimport * as time from './time.js'\nimport * as math from './math.js'\n\nconst reconnectTimeoutBase = 1200\nconst maxReconnectTimeout = 2500\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketClient} wsclient\n */\nconst setupWS = (wsclient) => {\n  if (wsclient.shouldConnect && wsclient.ws === null) {\n    const websocket = new WebSocket(wsclient.url)\n    const binaryType = wsclient.binaryType\n    /**\n     * @type {any}\n     */\n    let pingTimeout = null\n    if (binaryType) {\n      websocket.binaryType = binaryType\n    }\n    wsclient.ws = websocket\n    wsclient.connecting = true\n    wsclient.connected = false\n    websocket.onmessage = event => {\n      wsclient.lastMessageReceived = time.getUnixTime()\n      const data = event.data\n      const message = typeof data === 'string' ? JSON.parse(data) : data\n      if (message && message.type === 'pong') {\n        clearTimeout(pingTimeout)\n        pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2)\n      }\n      wsclient.emit('message', [message, wsclient])\n    }\n    /**\n     * @param {any} error\n     */\n    const onclose = error => {\n      if (wsclient.ws !== null) {\n        wsclient.ws = null\n        wsclient.connecting = false\n        if (wsclient.connected) {\n          wsclient.connected = false\n          wsclient.emit('disconnect', [{ type: 'disconnect', error }, wsclient])\n        } else {\n          wsclient.unsuccessfulReconnects++\n        }\n        // Start with no reconnect timeout and increase timeout by\n        // log10(wsUnsuccessfulReconnects).\n        // The idea is to increase reconnect timeout slowly and have no reconnect\n        // timeout at the beginning (log(1) = 0)\n        setTimeout(setupWS, math.min(math.log10(wsclient.unsuccessfulReconnects + 1) * reconnectTimeoutBase, maxReconnectTimeout), wsclient)\n      }\n      clearTimeout(pingTimeout)\n    }\n    const sendPing = () => {\n      if (wsclient.ws === websocket) {\n        wsclient.send({\n          type: 'ping'\n        })\n      }\n    }\n    websocket.onclose = () => onclose(null)\n    websocket.onerror = error => onclose(error)\n    websocket.onopen = () => {\n      wsclient.lastMessageReceived = time.getUnixTime()\n      wsclient.connecting = false\n      wsclient.connected = true\n      wsclient.unsuccessfulReconnects = 0\n      wsclient.emit('connect', [{ type: 'connect' }, wsclient])\n      // set ping\n      pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2)\n    }\n  }\n}\n\n/**\n * @extends Observable<string>\n */\nexport class WebsocketClient extends Observable {\n  /**\n   * @param {string} url\n   * @param {object} [opts]\n   * @param {'arraybuffer' | 'blob' | null} [opts.binaryType] Set `ws.binaryType`\n   */\n  constructor (url, { binaryType } = {}) {\n    super()\n    this.url = url\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.binaryType = binaryType || null\n    this.connected = false\n    this.connecting = false\n    this.unsuccessfulReconnects = 0\n    this.lastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = true\n    this._checkInterval = setInterval(() => {\n      if (this.connected && messageReconnectTimeout < time.getUnixTime() - this.lastMessageReceived) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        /** @type {WebSocket} */ (this.ws).close()\n      }\n    }, messageReconnectTimeout / 2)\n    setupWS(this)\n  }\n\n  /**\n   * @param {any} message\n   */\n  send (message) {\n    if (this.ws) {\n      this.ws.send(JSON.stringify(message))\n    }\n  }\n\n  destroy () {\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    super.destroy()\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    if (this.ws !== null) {\n      this.ws.close()\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.connected && this.ws === null) {\n      setupWS(this)\n    }\n  }\n}\n","import * as Y from 'yjs'\nimport * as idb from 'lib0/indexeddb.js'\nimport * as mutex from 'lib0/mutex.js'\nimport { Observable } from 'lib0/observable.js'\n\nconst customStoreName = 'custom'\nconst updatesStoreName = 'updates'\n\nexport const PREFERRED_TRIM_SIZE = 500\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n */\nexport const fetchUpdates = idbPersistence => {\n  const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (idbPersistence.db), [updatesStoreName]) // , 'readonly')\n  return idb.getAll(updatesStore, idb.createIDBKeyRangeLowerBound(idbPersistence._dbref, false)).then(updates =>\n    Y.transact(idbPersistence.doc, () => {\n      updates.forEach(val => Y.applyUpdate(idbPersistence.doc, val))\n    }, idbPersistence, false)\n  )\n    .then(() => idb.getLastKey(updatesStore).then(lastKey => { idbPersistence._dbref = lastKey + 1 }))\n    .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\n    .then(() => updatesStore)\n}\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n * @param {boolean} forceStore\n */\nexport const storeState = (idbPersistence, forceStore = true) =>\n  fetchUpdates(idbPersistence)\n    .then(updatesStore => {\n      if (forceStore || idbPersistence._dbsize >= PREFERRED_TRIM_SIZE) {\n        idb.addAutoKey(updatesStore, Y.encodeStateAsUpdate(idbPersistence.doc))\n          .then(() => idb.del(updatesStore, idb.createIDBKeyRangeUpperBound(idbPersistence._dbref, true)))\n          .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\n      }\n    })\n\n/**\n * @param {string} name\n */\nexport const clearDocument = name => idb.deleteDB(name)\n\n/**\n * @extends Observable<string>\n */\nexport class IndexeddbPersistence extends Observable {\n  /**\n   * @param {string} name\n   * @param {Y.Doc} doc\n   */\n  constructor (name, doc) {\n    super()\n    this.doc = doc\n    this.name = name\n    this._mux = mutex.createMutex()\n    this._dbref = 0\n    this._dbsize = 0\n    this._destroyed = false\n    /**\n     * @type {IDBDatabase|null}\n     */\n    this.db = null\n    this.synced = false\n    this._db = idb.openDB(name, db =>\n      idb.createStores(db, [\n        ['updates', { autoIncrement: true }],\n        ['custom']\n      ])\n    )\n    /**\n     * @type {Promise<IndexeddbPersistence>}\n     */\n    this.whenSynced = this._db.then(db => {\n      this.db = db\n      const currState = Y.encodeStateAsUpdate(doc)\n      return fetchUpdates(this).then(updatesStore => idb.addAutoKey(updatesStore, currState)).then(() => {\n        if (this._destroyed) return this\n        this.emit('synced', [this])\n        this.synced = true\n        return this\n      })\n    })\n    /**\n     * Timeout in ms untill data is merged and persisted in idb.\n     */\n    this._storeTimeout = 1000\n    /**\n     * @type {any}\n     */\n    this._storeTimeoutId = null\n    /**\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._storeUpdate = (update, origin) => {\n      if (this.db && origin !== this) {\n        const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (this.db), [updatesStoreName])\n        idb.addAutoKey(updatesStore, update)\n        if (++this._dbsize >= PREFERRED_TRIM_SIZE) {\n          // debounce store call\n          if (this._storeTimeoutId !== null) {\n            clearTimeout(this._storeTimeoutId)\n          }\n          this._storeTimeoutId = setTimeout(() => {\n            storeState(this, false)\n            this._storeTimeoutId = null\n          }, this._storeTimeout)\n        }\n      }\n    }\n    doc.on('update', this._storeUpdate)\n    this.destroy = this.destroy.bind(this)\n    doc.on('destroy', this.destroy)\n  }\n\n  destroy () {\n    if (this._storeTimeoutId) {\n      clearTimeout(this._storeTimeoutId)\n    }\n    this.doc.off('update', this._storeUpdate)\n    this.doc.off('destroy', this.destroy)\n    this._destroyed = true\n    return this._db.then(db => {\n      db.close()\n    })\n  }\n\n  /**\n   * Destroys this instance and removes all data from indexeddb.\n   *\n   * @return {Promise<void>}\n   */\n  clearData () {\n    return this.destroy().then(() => {\n      idb.deleteDB(this.name)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<String | number | ArrayBuffer | Date | any>}\n   */\n  get (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName], 'readonly')\n      return idb.get(custom, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @param {String | number | ArrayBuffer | Date} value\n   * @return {Promise<String | number | ArrayBuffer | Date>}\n   */\n  set (key, value) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName])\n      return idb.put(custom, value, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<undefined>}\n   */\n  del (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName])\n      return idb.del(custom, key)\n    })\n  }\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","/* eslint-env browser */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as promise from 'lib0/promise'\nimport * as error from 'lib0/error'\nimport * as string from 'lib0/string'\n\n/**\n * @param {string} secret\n * @param {string} roomName\n * @return {PromiseLike<CryptoKey>}\n */\nexport const deriveKey = (secret, roomName) => {\n  const secretBuffer = string.encodeUtf8(secret).buffer\n  const salt = string.encodeUtf8(roomName).buffer\n  return crypto.subtle.importKey(\n    'raw',\n    secretBuffer,\n    'PBKDF2',\n    false,\n    ['deriveKey']\n  ).then(keyMaterial =>\n    crypto.subtle.deriveKey(\n      {\n        name: 'PBKDF2',\n        salt,\n        iterations: 100000,\n        hash: 'SHA-256'\n      },\n      keyMaterial,\n      {\n        name: 'AES-GCM',\n        length: 256\n      },\n      true,\n      ['encrypt', 'decrypt']\n    )\n  )\n}\n\n/**\n * @param {Uint8Array} data data to be encrypted\n * @param {CryptoKey?} key\n * @return {PromiseLike<Uint8Array>} encrypted, base64 encoded message\n */\nexport const encrypt = (data, key) => {\n  if (!key) {\n    return /** @type {PromiseLike<Uint8Array>} */ (promise.resolve(data))\n  }\n  const iv = crypto.getRandomValues(new Uint8Array(12))\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv\n    },\n    key,\n    data\n  ).then(cipher => {\n    const encryptedDataEncoder = encoding.createEncoder()\n    encoding.writeVarString(encryptedDataEncoder, 'AES-GCM')\n    encoding.writeVarUint8Array(encryptedDataEncoder, iv)\n    encoding.writeVarUint8Array(encryptedDataEncoder, new Uint8Array(cipher))\n    return encoding.toUint8Array(encryptedDataEncoder)\n  })\n}\n\n/**\n * @param {Object} data data to be encrypted\n * @param {CryptoKey?} key\n * @return {PromiseLike<Uint8Array>} encrypted data, if key is provided\n */\nexport const encryptJson = (data, key) => {\n  const dataEncoder = encoding.createEncoder()\n  encoding.writeAny(dataEncoder, data)\n  return encrypt(encoding.toUint8Array(dataEncoder), key)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {CryptoKey?} key\n * @return {PromiseLike<Uint8Array>} decrypted buffer\n */\nexport const decrypt = (data, key) => {\n  if (!key) {\n    return /** @type {PromiseLike<Uint8Array>} */ (promise.resolve(data))\n  }\n  const dataDecoder = decoding.createDecoder(data)\n  const algorithm = decoding.readVarString(dataDecoder)\n  if (algorithm !== 'AES-GCM') {\n    promise.reject(error.create('Unknown encryption algorithm'))\n  }\n  const iv = decoding.readVarUint8Array(dataDecoder)\n  const cipher = decoding.readVarUint8Array(dataDecoder)\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv\n    },\n    key,\n    cipher\n  ).then(data => new Uint8Array(data))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {CryptoKey?} key\n * @return {PromiseLike<Object>} decrypted object\n */\nexport const decryptJson = (data, key) =>\n  decrypt(data, key).then(decryptedValue =>\n    decoding.readAny(decoding.createDecoder(new Uint8Array(decryptedValue)))\n  )\n","import * as ws from 'lib0/websocket'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\nimport * as random from 'lib0/random'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport { Observable } from 'lib0/observable'\nimport * as logging from 'lib0/logging'\nimport * as promise from 'lib0/promise'\nimport * as bc from 'lib0/broadcastchannel'\nimport * as buffer from 'lib0/buffer'\nimport * as math from 'lib0/math'\nimport { createMutex } from 'lib0/mutex'\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport Peer from 'simple-peer/simplepeer.min.js'\n\nimport * as syncProtocol from 'y-protocols/sync'\nimport * as awarenessProtocol from 'y-protocols/awareness'\n\nimport * as cryptoutils from './crypto.js'\n\nconst log = logging.createModuleLogger('y-webrtc')\n\nconst messageSync = 0\nconst messageQueryAwareness = 3\nconst messageAwareness = 1\nconst messageBcPeerId = 4\n\n/**\n * @type {Map<string, SignalingConn>}\n */\nconst signalingConns = new Map()\n\n/**\n * @type {Map<string,Room>}\n */\nconst rooms = new Map()\n\n/**\n * @param {Room} room\n */\nconst checkIsSynced = room => {\n  let synced = true\n  room.webrtcConns.forEach(peer => {\n    if (!peer.synced) {\n      synced = false\n    }\n  })\n  if ((!synced && room.synced) || (synced && !room.synced)) {\n    room.synced = synced\n    room.provider.emit('synced', [{ synced }])\n    log('synced ', logging.BOLD, room.name, logging.UNBOLD, ' with all peers')\n  }\n}\n\n/**\n * @param {Room} room\n * @param {Uint8Array} buf\n * @param {function} syncedCallback\n * @return {encoding.Encoder?}\n */\nconst readMessage = (room, buf, syncedCallback) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  if (room === undefined) {\n    return null\n  }\n  const awareness = room.awareness\n  const doc = room.doc\n  let sendReply = false\n  switch (messageType) {\n    case messageSync: {\n      encoding.writeVarUint(encoder, messageSync)\n      const syncMessageType = syncProtocol.readSyncMessage(decoder, encoder, doc, room)\n      if (syncMessageType === syncProtocol.messageYjsSyncStep2 && !room.synced) {\n        syncedCallback()\n      }\n      if (syncMessageType === syncProtocol.messageYjsSyncStep1) {\n        sendReply = true\n      }\n      break\n    }\n    case messageQueryAwareness:\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(awareness, Array.from(awareness.getStates().keys())))\n      sendReply = true\n      break\n    case messageAwareness:\n      awarenessProtocol.applyAwarenessUpdate(awareness, decoding.readVarUint8Array(decoder), room)\n      break\n    case messageBcPeerId: {\n      const add = decoding.readUint8(decoder) === 1\n      const peerName = decoding.readVarString(decoder)\n      if (peerName !== room.peerId && ((room.bcConns.has(peerName) && !add) || (!room.bcConns.has(peerName) && add))) {\n        const removed = []\n        const added = []\n        if (add) {\n          room.bcConns.add(peerName)\n          added.push(peerName)\n        } else {\n          room.bcConns.delete(peerName)\n          removed.push(peerName)\n        }\n        room.provider.emit('peers', [{\n          added,\n          removed,\n          webrtcPeers: Array.from(room.webrtcConns.keys()),\n          bcPeers: Array.from(room.bcConns)\n        }])\n        broadcastBcPeerId(room)\n      }\n      break\n    }\n    default:\n      console.error('Unable to compute message')\n      return encoder\n  }\n  if (!sendReply) {\n    // nothing has been written, no answer created\n    return null\n  }\n  return encoder\n}\n\n/**\n * @param {WebrtcConn} peerConn\n * @param {Uint8Array} buf\n * @return {encoding.Encoder?}\n */\nconst readPeerMessage = (peerConn, buf) => {\n  const room = peerConn.room\n  log('received message from ', logging.BOLD, peerConn.remotePeerId, logging.GREY, ' (', room.name, ')', logging.UNBOLD, logging.UNCOLOR)\n  return readMessage(room, buf, () => {\n    peerConn.synced = true\n    log('synced ', logging.BOLD, room.name, logging.UNBOLD, ' with ', logging.BOLD, peerConn.remotePeerId)\n    checkIsSynced(room)\n  })\n}\n\n/**\n * @param {WebrtcConn} webrtcConn\n * @param {encoding.Encoder} encoder\n */\nconst sendWebrtcConn = (webrtcConn, encoder) => {\n  log('send message to ', logging.BOLD, webrtcConn.remotePeerId, logging.UNBOLD, logging.GREY, ' (', webrtcConn.room.name, ')', logging.UNCOLOR)\n  try {\n    webrtcConn.peer.send(encoding.toUint8Array(encoder))\n  } catch (e) {}\n}\n\n/**\n * @param {Room} room\n * @param {Uint8Array} m\n */\nconst broadcastWebrtcConn = (room, m) => {\n  log('broadcast message in ', logging.BOLD, room.name, logging.UNBOLD)\n  room.webrtcConns.forEach(conn => {\n    try {\n      conn.peer.send(m)\n    } catch (e) {}\n  })\n}\n\nexport class WebrtcConn {\n  /**\n   * @param {SignalingConn} signalingConn\n   * @param {boolean} initiator\n   * @param {string} remotePeerId\n   * @param {Room} room\n   */\n  constructor (signalingConn, initiator, remotePeerId, room) {\n    log('establishing connection to ', logging.BOLD, remotePeerId)\n    this.room = room\n    this.remotePeerId = remotePeerId\n    this.closed = false\n    this.connected = false\n    this.synced = false\n    /**\n     * @type {any}\n     */\n    this.peer = new Peer({ initiator, ...room.provider.peerOpts })\n    this.peer.on('signal', signal => {\n      publishSignalingMessage(signalingConn, room, { to: remotePeerId, from: room.peerId, type: 'signal', signal })\n    })\n    this.peer.on('connect', () => {\n      log('connected to ', logging.BOLD, remotePeerId)\n      this.connected = true\n      // send sync step 1\n      const provider = room.provider\n      const doc = provider.doc\n      const awareness = room.awareness\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, doc)\n      sendWebrtcConn(this, encoder)\n      const awarenessStates = awareness.getStates()\n      if (awarenessStates.size > 0) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageAwareness)\n        encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(awareness, Array.from(awarenessStates.keys())))\n        sendWebrtcConn(this, encoder)\n      }\n    })\n    this.peer.on('close', () => {\n      this.connected = false\n      this.closed = true\n      if (room.webrtcConns.has(this.remotePeerId)) {\n        room.webrtcConns.delete(this.remotePeerId)\n        room.provider.emit('peers', [{\n          removed: [this.remotePeerId],\n          added: [],\n          webrtcPeers: Array.from(room.webrtcConns.keys()),\n          bcPeers: Array.from(room.bcConns)\n        }])\n      }\n      checkIsSynced(room)\n      this.peer.destroy()\n      log('closed connection to ', logging.BOLD, remotePeerId)\n      announceSignalingInfo(room)\n    })\n    this.peer.on('error', err => {\n      log('Error in connection to ', logging.BOLD, remotePeerId, ': ', err)\n      announceSignalingInfo(room)\n    })\n    this.peer.on('data', data => {\n      const answer = readPeerMessage(this, data)\n      if (answer !== null) {\n        sendWebrtcConn(this, answer)\n      }\n    })\n  }\n\n  destroy () {\n    this.peer.destroy()\n  }\n}\n\n/**\n * @param {Room} room\n * @param {Uint8Array} m\n */\nconst broadcastBcMessage = (room, m) => cryptoutils.encrypt(m, room.key).then(data =>\n  room.mux(() =>\n    bc.publish(room.name, data)\n  )\n)\n\n/**\n * @param {Room} room\n * @param {Uint8Array} m\n */\nconst broadcastRoomMessage = (room, m) => {\n  if (room.bcconnected) {\n    broadcastBcMessage(room, m)\n  }\n  broadcastWebrtcConn(room, m)\n}\n\n/**\n * @param {Room} room\n */\nconst announceSignalingInfo = room => {\n  signalingConns.forEach(conn => {\n    // only subcribe if connection is established, otherwise the conn automatically subscribes to all rooms\n    if (conn.connected) {\n      conn.send({ type: 'subscribe', topics: [room.name] })\n      if (room.webrtcConns.size < room.provider.maxConns) {\n        publishSignalingMessage(conn, room, { type: 'announce', from: room.peerId })\n      }\n    }\n  })\n}\n\n/**\n * @param {Room} room\n */\nconst broadcastBcPeerId = room => {\n  if (room.provider.filterBcConns) {\n    // broadcast peerId via broadcastchannel\n    const encoderPeerIdBc = encoding.createEncoder()\n    encoding.writeVarUint(encoderPeerIdBc, messageBcPeerId)\n    encoding.writeUint8(encoderPeerIdBc, 1)\n    encoding.writeVarString(encoderPeerIdBc, room.peerId)\n    broadcastBcMessage(room, encoding.toUint8Array(encoderPeerIdBc))\n  }\n}\n\nexport class Room {\n  /**\n   * @param {Y.Doc} doc\n   * @param {WebrtcProvider} provider\n   * @param {string} name\n   * @param {CryptoKey|null} key\n   */\n  constructor (doc, provider, name, key) {\n    /**\n     * Do not assume that peerId is unique. This is only meant for sending signaling messages.\n     *\n     * @type {string}\n     */\n    this.peerId = random.uuidv4()\n    this.doc = doc\n    /**\n     * @type {awarenessProtocol.Awareness}\n     */\n    this.awareness = provider.awareness\n    this.provider = provider\n    this.synced = false\n    this.name = name\n    // @todo make key secret by scoping\n    this.key = key\n    /**\n     * @type {Map<string, WebrtcConn>}\n     */\n    this.webrtcConns = new Map()\n    /**\n     * @type {Set<string>}\n     */\n    this.bcConns = new Set()\n    this.mux = createMutex()\n    this.bcconnected = false\n    /**\n     * @param {ArrayBuffer} data\n     */\n    this._bcSubscriber = data =>\n      cryptoutils.decrypt(new Uint8Array(data), key).then(m =>\n        this.mux(() => {\n          const reply = readMessage(this, m, () => {})\n          if (reply) {\n            broadcastBcMessage(this, encoding.toUint8Array(reply))\n          }\n        })\n      )\n    /**\n     * Listens to Yjs updates and sends them to remote peers\n     *\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._docUpdateHandler = (update, origin) => {\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeUpdate(encoder, update)\n      broadcastRoomMessage(this, encoding.toUint8Array(encoder))\n    }\n    /**\n     * Listens to Awareness updates and sends them to remote peers\n     *\n     * @param {any} changed\n     * @param {any} origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoderAwareness = encoding.createEncoder()\n      encoding.writeVarUint(encoderAwareness, messageAwareness)\n      encoding.writeVarUint8Array(encoderAwareness, awarenessProtocol.encodeAwarenessUpdate(this.awareness, changedClients))\n      broadcastRoomMessage(this, encoding.toUint8Array(encoderAwareness))\n    }\n\n    this._beforeUnloadHandler = () => {\n      awarenessProtocol.removeAwarenessStates(this.awareness, [doc.clientID], 'window unload')\n      rooms.forEach(room => {\n        room.disconnect()\n      })\n    }\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('beforeunload', this._beforeUnloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.on('exit', this._beforeUnloadHandler)\n    }\n  }\n\n  connect () {\n    this.doc.on('update', this._docUpdateHandler)\n    this.awareness.on('update', this._awarenessUpdateHandler)\n    // signal through all available signaling connections\n    announceSignalingInfo(this)\n    const roomName = this.name\n    bc.subscribe(roomName, this._bcSubscriber)\n    this.bcconnected = true\n    // broadcast peerId via broadcastchannel\n    broadcastBcPeerId(this)\n    // write sync step 1\n    const encoderSync = encoding.createEncoder()\n    encoding.writeVarUint(encoderSync, messageSync)\n    syncProtocol.writeSyncStep1(encoderSync, this.doc)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderSync))\n    // broadcast local state\n    const encoderState = encoding.createEncoder()\n    encoding.writeVarUint(encoderState, messageSync)\n    syncProtocol.writeSyncStep2(encoderState, this.doc)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderState))\n    // write queryAwareness\n    const encoderAwarenessQuery = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderAwarenessQuery))\n    // broadcast local awareness state\n    const encoderAwarenessState = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n    encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID]))\n    broadcastBcMessage(this, encoding.toUint8Array(encoderAwarenessState))\n  }\n\n  disconnect () {\n    // signal through all available signaling connections\n    signalingConns.forEach(conn => {\n      if (conn.connected) {\n        conn.send({ type: 'unsubscribe', topics: [this.name] })\n      }\n    })\n    awarenessProtocol.removeAwarenessStates(this.awareness, [this.doc.clientID], 'disconnect')\n    // broadcast peerId removal via broadcastchannel\n    const encoderPeerIdBc = encoding.createEncoder()\n    encoding.writeVarUint(encoderPeerIdBc, messageBcPeerId)\n    encoding.writeUint8(encoderPeerIdBc, 0) // remove peerId from other bc peers\n    encoding.writeVarString(encoderPeerIdBc, this.peerId)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderPeerIdBc))\n\n    bc.unsubscribe(this.name, this._bcSubscriber)\n    this.bcconnected = false\n    this.doc.off('update', this._docUpdateHandler)\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.webrtcConns.forEach(conn => conn.destroy())\n  }\n\n  destroy () {\n    this.disconnect()\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('beforeunload', this._beforeUnloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.off('exit', this._beforeUnloadHandler)\n    }\n  }\n}\n\n/**\n * @param {Y.Doc} doc\n * @param {WebrtcProvider} provider\n * @param {string} name\n * @param {CryptoKey|null} key\n * @return {Room}\n */\nconst openRoom = (doc, provider, name, key) => {\n  // there must only be one room\n  if (rooms.has(name)) {\n    throw error.create(`A Yjs Doc connected to room \"${name}\" already exists!`)\n  }\n  const room = new Room(doc, provider, name, key)\n  rooms.set(name, /** @type {Room} */ (room))\n  return room\n}\n\n/**\n * @param {SignalingConn} conn\n * @param {Room} room\n * @param {any} data\n */\nconst publishSignalingMessage = (conn, room, data) => {\n  if (room.key) {\n    cryptoutils.encryptJson(data, room.key).then(data => {\n      conn.send({ type: 'publish', topic: room.name, data: buffer.toBase64(data) })\n    })\n  } else {\n    conn.send({ type: 'publish', topic: room.name, data })\n  }\n}\n\nexport class SignalingConn extends ws.WebsocketClient {\n  constructor (url) {\n    super(url)\n    /**\n     * @type {Set<WebrtcProvider>}\n     */\n    this.providers = new Set()\n    this.on('connect', () => {\n      log(`connected (${url})`)\n      const topics = Array.from(rooms.keys())\n      this.send({ type: 'subscribe', topics })\n      rooms.forEach(room =>\n        publishSignalingMessage(this, room, { type: 'announce', from: room.peerId })\n      )\n    })\n    this.on('message', m => {\n      switch (m.type) {\n        case 'publish': {\n          const roomName = m.topic\n          const room = rooms.get(roomName)\n          if (room == null || typeof roomName !== 'string') {\n            return\n          }\n          const execMessage = data => {\n            const webrtcConns = room.webrtcConns\n            const peerId = room.peerId\n            if (data == null || data.from === peerId || (data.to !== undefined && data.to !== peerId) || room.bcConns.has(data.from)) {\n              // ignore messages that are not addressed to this conn, or from clients that are connected via broadcastchannel\n              return\n            }\n            const emitPeerChange = webrtcConns.has(data.from)\n              ? () => {}\n              : () =>\n                room.provider.emit('peers', [{\n                  removed: [],\n                  added: [data.from],\n                  webrtcPeers: Array.from(room.webrtcConns.keys()),\n                  bcPeers: Array.from(room.bcConns)\n                }])\n            switch (data.type) {\n              case 'announce':\n                if (webrtcConns.size < room.provider.maxConns) {\n                  map.setIfUndefined(webrtcConns, data.from, () => new WebrtcConn(this, true, data.from, room))\n                  emitPeerChange()\n                }\n                break\n              case 'signal':\n                if (data.to === peerId) {\n                  map.setIfUndefined(webrtcConns, data.from, () => new WebrtcConn(this, false, data.from, room)).peer.signal(data.signal)\n                  emitPeerChange()\n                }\n                break\n            }\n          }\n          if (room.key) {\n            if (typeof m.data === 'string') {\n              cryptoutils.decryptJson(buffer.fromBase64(m.data), room.key).then(execMessage)\n            }\n          } else {\n            execMessage(m.data)\n          }\n        }\n      }\n    })\n    this.on('disconnect', () => log(`disconnect (${url})`))\n  }\n}\n\n/**\n * @typedef {Object} ProviderOptions\n * @property {Array<string>} [signaling]\n * @property {string} [password]\n * @property {awarenessProtocol.Awareness} [awareness]\n * @property {number} [maxConns]\n * @property {boolean} [filterBcConns]\n * @property {any} [peerOpts]\n */\n\n/**\n * @extends Observable<string>\n */\nexport class WebrtcProvider extends Observable {\n  /**\n   * @param {string} roomName\n   * @param {Y.Doc} doc\n   * @param {ProviderOptions?} opts\n   */\n  constructor (\n    roomName,\n    doc,\n    {\n      signaling = ['wss://signaling.yjs.dev', 'wss://y-webrtc-signaling-eu.herokuapp.com', 'wss://y-webrtc-signaling-us.herokuapp.com'],\n      password = null,\n      awareness = new awarenessProtocol.Awareness(doc),\n      maxConns = 20 + math.floor(random.rand() * 15), // the random factor reduces the chance that n clients form a cluster\n      filterBcConns = true,\n      peerOpts = {} // simple-peer options. See https://github.com/feross/simple-peer#peer--new-peeropts\n    } = {}\n  ) {\n    super()\n    this.roomName = roomName\n    this.doc = doc\n    this.filterBcConns = filterBcConns\n    /**\n     * @type {awarenessProtocol.Awareness}\n     */\n    this.awareness = awareness\n    this.shouldConnect = false\n    this.signalingUrls = signaling\n    this.signalingConns = []\n    this.maxConns = maxConns\n    this.peerOpts = peerOpts\n    /**\n     * @type {PromiseLike<CryptoKey | null>}\n     */\n    this.key = password ? cryptoutils.deriveKey(password, roomName) : /** @type {PromiseLike<null>} */ (promise.resolve(null))\n    /**\n     * @type {Room|null}\n     */\n    this.room = null\n    this.key.then(key => {\n      this.room = openRoom(doc, this, roomName, key)\n      if (this.shouldConnect) {\n        this.room.connect()\n      } else {\n        this.room.disconnect()\n      }\n    })\n    this.connect()\n    this.destroy = this.destroy.bind(this)\n    doc.on('destroy', this.destroy)\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get connected () {\n    return this.room !== null && this.shouldConnect\n  }\n\n  connect () {\n    this.shouldConnect = true\n    this.signalingUrls.forEach(url => {\n      const signalingConn = map.setIfUndefined(signalingConns, url, () => new SignalingConn(url))\n      this.signalingConns.push(signalingConn)\n      signalingConn.providers.add(this)\n    })\n    if (this.room) {\n      this.room.connect()\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.signalingConns.forEach(conn => {\n      conn.providers.delete(this)\n      if (conn.providers.size === 0) {\n        conn.destroy()\n        signalingConns.delete(conn.url)\n      }\n    })\n    if (this.room) {\n      this.room.disconnect()\n    }\n  }\n\n  destroy () {\n    this.doc.off('destroy', this.destroy)\n    // need to wait for key before deleting room\n    this.key.then(() => {\n      /** @type {Room} */ (this.room).destroy()\n      rooms.delete(this.roomName)\n    })\n    super.destroy()\n  }\n}\n","import { Observable } from 'lib0/observable';\nimport * as array from 'lib0/array';\nimport * as math from 'lib0/math';\nimport * as map from 'lib0/map';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport * as random from 'lib0/random';\nimport * as promise from 'lib0/promise';\nimport * as buffer from 'lib0/buffer';\nimport * as error from 'lib0/error';\nimport * as binary from 'lib0/binary';\nimport * as f from 'lib0/function';\nimport { callAll } from 'lib0/function';\nimport * as set from 'lib0/set';\nimport * as logging from 'lib0/logging';\nimport * as time from 'lib0/time';\nimport * as iterator from 'lib0/iterator';\nimport * as object from 'lib0/object';\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal();\n    encoding.writeVarUint(encoder.restEncoder, client);\n    const len = dsitems.length;\n    encoding.writeVarUint(encoder.restEncoder, len);\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i];\n      encoder.writeDsClock(item.clock);\n      encoder.writeDsLen(item.len);\n    }\n  });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => []);\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    this.collectionid = collectionid;\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = shouldLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n    this.isLoaded = false;\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true;\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin);\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false });\n      content.doc._item = item;\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc;\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(clock);\n    }\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  Array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} [conf]\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1];\n  const right = structs[pos];\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1);\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                );\n              events\n                .forEach(event => {\n                  event.currentTarget = type;\n                });\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length);\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction);\n            }\n          })\n        );\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      });\n      callAll(fs, []);\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1);\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n        doc.clientID = generateNewClientId();\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction;\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID;\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid;\n          }\n          doc.subdocs.add(subdoc);\n        });\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction]);\n        subdocsRemoved.forEach(subdoc => subdoc.destroy());\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    f(doc._transaction);\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0];\n      doc._transaction = null;\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0);\n      }\n    }\n  }\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false);\n    }\n  });\n};\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nclass UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super();\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = [];\n    this.addToScope(typeScope);\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    this.captureTransaction = captureTransaction;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.doc = doc;\n    this.lastChange = 0;\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges;\n    this.captureTimeout = captureTimeout;\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true);\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      let didAdd = false;\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n        didAdd = true;\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this];\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent);\n      } else {\n        this.emit('stack-item-updated', changeEvent);\n      }\n    };\n    this.doc.on('afterTransaction', this.afterTransactionHandler);\n    this.doc.on('destroy', () => {\n      this.destroy();\n    });\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes];\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        this.scope.push(ytype);\n      }\n    });\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin);\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin);\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.undoStack = [];\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.redoStack = [];\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }]);\n      });\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this);\n    this.doc.off('afterTransaction', this.afterTransactionHandler);\n    super.destroy();\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, UpdateDecoderV1, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1);\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c);\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c);\n          break\n        default:\n          packJsonContent();\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n              left.integrate(transaction, 0);\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n              left.integrate(transaction, 0);\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n                left.integrate(transaction, 0);\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start });\n  let n = marker.p;\n  if (n) {\n    while (n.right) {\n      n = n.right;\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, content);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content);\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYArray = decoder => new YArray();\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {MapType} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nconst readYMap = decoder => new YMap();\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map();\n  const marker = findMarker(parent, index);\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left;\n    const right = currPos.right;\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n    currPos.forward();\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text));\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          } else {\n            currPos.currentAttributes.set(key, value);\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  let end = curr;\n  const endAttributes = map.copy(currAttributes);\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content));\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  let reachedEndOfCurr = false;\n  while (start !== end) {\n    if (curr === start) {\n      reachedEndOfCurr = true;\n    }\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n            if (!reachedEndOfCurr && (currAttributes.get(key) || null) === value && (startAttributes.get(key) || null) !== value) {\n              currAttributes.delete(key);\n            }\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes);\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op;\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen };\n                deleteLen = 0;\n                break\n              case 'insert':\n                op = { insert };\n                if (currentAttributes.size > 0) {\n                  op.attributes = {};\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value;\n                    }\n                  });\n                }\n                insert = '';\n                break\n              case 'retain':\n                op = { retain };\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {};\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key];\n                  }\n                }\n                retain = 0;\n                break\n            }\n            delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = item.content.getContent()[0];\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    const doc = transaction.doc;\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false;\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0;\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true;\n          }\n        });\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this);\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot);\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot);\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    }, 'cleanup');\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        insertText(transaction, this, pos, embed, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof this):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = decoder => new YXmlFragment();\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key]);\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key]);\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false });\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left = null;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type;\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n  } else {\n    right = null;\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item;\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && isDeleted(itemsToDelete, left.right.id)) {\n        left = left.right;\n      }\n      // follow redone\n      // trace redone until parent matches\n      while (left !== null && left.redone !== null) {\n        left = getItemCleanStart(transaction, left.redone);\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\n/** eslint-env browser */\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {});\n\nconst importIdentifier = '__ $YJS$ __';\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438');\n}\nglo[importIdentifier] = true;\n\nexport { AbsolutePosition, AbstractConnector, AbstractStruct, AbstractType, YArray as Array, ContentAny, ContentBinary, ContentDeleted, ContentEmbed, ContentFormat, ContentJSON, ContentString, ContentType, Doc, GC, ID, Item, YMap as Map, PermanentUserData, RelativePosition, Snapshot, YText as Text, Transaction, UndoManager, UpdateEncoderV1, YXmlElement as XmlElement, YXmlFragment as XmlFragment, YXmlHook as XmlHook, YXmlText as XmlText, YArrayEvent, YEvent, YMapEvent, YTextEvent, YXmlEvent, applyUpdate, applyUpdateV2, cleanupYTextFormatting, compareIDs, compareRelativePositions, convertUpdateFormatV1ToV2, convertUpdateFormatV2ToV1, createAbsolutePositionFromRelativePosition, createDeleteSet, createDeleteSetFromStructStore, createDocFromSnapshot, createID, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, createSnapshot, decodeRelativePosition, decodeSnapshot, decodeSnapshotV2, decodeStateVector, decodeUpdate, decodeUpdateV2, diffUpdate, diffUpdateV2, emptySnapshot, encodeRelativePosition, encodeSnapshot, encodeSnapshotV2, encodeStateAsUpdate, encodeStateAsUpdateV2, encodeStateVector, encodeStateVectorFromUpdate, encodeStateVectorFromUpdateV2, equalSnapshots, findIndexSS, findRootTypeKey, getItem, getState, getTypeChildren, isDeleted, isParentOf, iterateDeletedStructs, logType, logUpdate, logUpdateV2, mergeUpdates, mergeUpdatesV2, parseUpdateMeta, parseUpdateMetaV2, readUpdate, readUpdateV2, relativePositionToJSON, snapshot, transact, tryGc, typeListToArraySnapshot, typeMapGetSnapshot };\n//# sourceMappingURL=yjs.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @file SDK to connect to Tinode chat server.\n * See <a href=\"https://github.com/tinode/webapp\">https://github.com/tinode/webapp</a> for real-life usage.\n *\n * @copyright 2015-2022 Tinode LLC.\n * @summary Javascript bindings for Tinode.\n * @license Apache 2.0\n * @version 0.19\n *\n * @example\n * <head>\n * <script src=\".../tinode.js\"></script>\n * </head>\n *\n * <body>\n *  ...\n * <script>\n *  // Instantiate tinode.new Date()n.\n *  });\n *  tinode.enableLogging(true);\n *  tinode.onDisconnect = (err) => {\n *    // Handle disconnect.\n *  };\n *  // Connect to the server.\n *  tinode.connect('https://example.com/').then(() => {\n *    // Connected. Login now.\n *    return tinode.loginBasic(login, password);\n *  }).then((ctrl) => {\n *    // Logged in fine, attach callbacks, subscribe to 'me'.\n *    const me = tinode.getMeTopic();\n *    me.onMetaDesc = function(meta) { ... };login\n *    me.subscribe({get: {desc: {}, sub: {}}});\n *  }).catch((err) => {\n *    // Login or subscription failed, do something.\n *    ...\n *  });\n *  ...\n * </script>\n * </body>\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nimport AccessMode from './access-mode.js';\nimport * as Const from './config.js';\nimport Connection from './connection.js';\nimport DBCache from './db.js';\nimport Drafty from './drafty.js';\nimport LargeFileHelper from './large-file.js';\nimport {\n  Topic,\n  TopicMe,\n  TopicFnd\n} from './topic.js';\n\nimport {\n  jsonParseHelper,\n  mergeObj,\n  rfc3339DateString,\n  simplify\n} from './utils.js';\n\nimport * as Y from 'yjs'\nimport {\n  IndexeddbPersistence\n} from 'y-indexeddb'\n\nimport {\n  WebrtcProvider\n} from 'y-webrtc'\n\n\nimport {\n  v4 as uuidv4\n} from 'uuid';\n\n\n// import Hyperswarm from 'hyperswarm'\n// import goodbye from 'graceful-goodbye'\nimport random from 'random-access-idb'\nimport RAM from 'random-access-memory'\n// import Hypercore from 'hypercore';\nimport Corestore from 'corestore'\n\nconst datstorage = \"tinode-dat-storage\"\n\nfunction IDB(filename) {\n  return RAM()\n}\n\nvar store = new Corestore(IDB)\n\n\nlet WebSocketProvider;\nif (typeof WebSocket != 'undefined') {\n  WebSocketProvider = WebSocket;\n}\n\nlet XHRProvider;\nif (typeof XMLHttpRequest != 'undefined') {\n  XHRProvider = XMLHttpRequest;\n}\n\nlet IndexedDBProvider;\nif (typeof indexedDB != 'undefined') {\n  IndexedDBProvider = indexedDB;\n}\n\n// Re-export Drafty.\nexport {\n  Drafty\n}\n\ninitForNonBrowserApp();\n\n// Utility functions\n\n// Polyfill for non-browser context, e.g. NodeJs.\nfunction initForNonBrowserApp() {\n  // Tinode requirement in native mode because react native doesn't provide Base64 method\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  if (typeof btoa == 'undefined') {\n    global.btoa = function(input = '') {\n      let str = input;\n      let output = '';\n\n      for (let block = 0, charCode, i = 0, map = chars; str.charAt(i | 0) || (map = '=', i % 1); output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n\n        charCode = str.charCodeAt(i += 3 / 4);\n\n        if (charCode > 0xFF) {\n          throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n        }\n        block = block << 8 | charCode;\n      }\n\n      return output;\n    };\n  }\n\n  if (typeof atob == 'undefined') {\n    global.atob = function(input = '') {\n      let str = input.replace(/=+$/, '');\n      let output = '';\n\n      if (str.length % 4 == 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n      }\n      for (let bc = 0, bs = 0, buffer, i = 0; buffer = str.charAt(i++);\n\n        ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n          bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n      ) {\n        buffer = chars.indexOf(buffer);\n      }\n\n      return output;\n    };\n  }\n\n  if (typeof window == 'undefined') {\n    global.window = {\n      WebSocket: WebSocketProvider,\n      XMLHttpRequest: XHRProvider,\n      indexedDB: IndexedDBProvider,\n      URL: {\n        createObjectURL: function() {\n          throw new Error(\"Unable to use URL.createObjectURL in a non-browser application\");\n        }\n      }\n    }\n  }\n\n  Connection.setNetworkProviders(WebSocketProvider, XHRProvider);\n  LargeFileHelper.setNetworkProvider(XHRProvider);\n  DBCache.setDatabaseProvider(IndexedDBProvider);\n}\n\n// Detect find most useful network transport.\nfunction detectTransport() {\n  if (typeof window == 'object') {\n    if (window['WebSocket']) {\n      return 'ws';\n    } else if (window['XMLHttpRequest']) {\n      // The browser or node has no websockets, using long polling.\n      return 'lp';\n    }\n  }\n  return null;\n}\n\n// btoa replacement. Stock btpktoa fails on on non-Latin1 strings.\nfunction b64EncodeUnicode(str) {\n  // The encodeURIComponent percent-encodes UTF-8 string,\n  // then the percent encoding is converted into raw bytes which\n  // can be fed into btoa.\n  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n    function toSolidBytes(match, p1) {\n      return String.fromCharCode('0x' + p1);\n    }));\n}\n\n// JSON stringify helper - pre-processor for JSON.stringify\nfunction jsonBuildHelper(key, val) {\n  if (val instanceof Date) {\n    // Convert javascript Date objects to rfc3339 strings\n    val = rfc3339DateString(val);\n  } else if (val instanceof AccessMode) {\n    val = val.jsonHelper();\n  } else if (val === undefined || val === null || val === false ||\n    (Array.isArray(val) && val.length == 0) ||\n    ((typeof val == 'object') && (Object.keys(val).length == 0))) {\n    // strip out empty elements while serializing objects to JSON\n    return undefined;\n  }\n\n  return val;\n};\n\n// Trims very long strings (encoded images) to make logged packets more readable.\nfunction jsonLoggerHelper(key, val) {\n  if (typeof val == 'string' && val.length > 128) {\n    return '<' + val.length + ', bytes: ' + val.substring(0, 12) + '...' + val.substring(val.length - 12) + '>';\n  }\n  return jsonBuildHelper(key, val);\n};\n\n// Parse browser user agent to extract browser name and version.\nfunction getBrowserInfo(ua, product) {\n  ua = ua || '';\n  let reactnative = '';\n  // Check if this is a ReactNative app.\n  if (/reactnative/i.test(product)) {\n    reactnative = 'ReactNative; ';\n  }\n  let result;\n  // Remove useless string.\n  ua = ua.replace(' (KHTML, like Gecko)', '');\n  // Test for WebKit-based browser.\n  let m = ua.match(/(AppleWebKit\\/[.\\d]+)/i);\n  if (m) {\n    // List of common strings, from more useful to less useful.\n    // All unknown strings get the highest (-1) priority.\n    const priority = ['edg', 'chrome', 'safari', 'mobile', 'version'];\n    let tmp = ua.substr(m.index + m[0].length).split(' ');\n    let tokens = [];\n    let version; // 1.0 in Version/1.0 or undefined;\n    // Split string like 'Name/0.0.0' into ['Name', '0.0.0', 3] where the last element is the priority.\n    for (let i = 0; i < tmp.length; i++) {\n      let m2 = /([\\w.]+)[\\/]([\\.\\d]+)/.exec(tmp[i]);\n      if (m2) {\n        // Unknown values are highest priority (-1).\n        tokens.push([m2[1], m2[2], priority.findIndex((e) => {\n          return m2[1].toLowerCase().startsWith(e);\n        })]);\n        if (m2[1] == 'Version') {\n          version = m2[2];\n        }\n      }\n    }\n    // Sort by priority: more interesting is earlier than less interesting.\n    tokens.sort((a, b) => {\n      return a[2] - b[2];\n    });\n    if (tokens.length > 0) {\n      // Return the least common browser string and version.\n      if (tokens[0][0].toLowerCase().startsWith('edg')) {\n        tokens[0][0] = 'Edge';\n      } else if (tokens[0][0] == 'OPR') {\n        tokens[0][0] = 'Opera';\n      } else if (tokens[0][0] == 'Safari' && version) {\n        tokens[0][1] = version;\n      }\n      result = tokens[0][0] + '/' + tokens[0][1];\n    } else {\n      // Failed to ID the browser. Return the webkit version.\n      result = m[1];\n    }\n  } else if (/firefox/i.test(ua)) {\n    m = /Firefox\\/([.\\d]+)/g.exec(ua);\n    if (m) {\n      result = 'Firefox/' + m[1];\n    } else {\n      result = 'Firefox/?';\n    }\n  } else {\n    // Neither AppleWebKit nor Firefox. Try the last resort.\n    m = /([\\w.]+)\\/([.\\d]+)/.exec(ua);\n    if (m) {\n      result = m[1] + '/' + m[2];\n    } else {\n      m = ua.split(' ');\n      result = m[0];\n    }\n  }\n\n  // Shorten the version to one dot 'a.bb.ccc.d -> a.bb' at most.\n  m = result.split('/');\n  if (m.length > 1) {\n    const v = m[1].split('.');\n    const minor = v[1] ? '.' + v[1].substr(0, 2) : '';\n    result = `${m[0]}/${v[0]}${minor}`;\n  }\n  return reactnative + result;\n}\n\n/**\n * @class Tinode\n *\n * @param {Object} config - configuration parameters.\n * @param {string} config.appName - Name of the calling application to be reported in the User Agent.\n * @param {string} config.host - Host name and optional port number to connect to.\n * @param {string} config.apiKey - API key generated by <code>keygen</code>.\n * @param {string} config.transport - See {@link Tinode.Connection#transport}.\n * @param {boolean} config.secure - Use Secure WebSocket if <code>true</code>.\n * @param {string} config.platform - Optional platform identifier, one of <code>\"ios\"</code>, <code>\"web\"</code>, <code>\"android\"</code>.\n * @param {boolen} config.persist - Use IndexedDB persistent storage.\n * @param {function} onComplete - callback to call when initialization is completed.\n */\nexport class Tinode {\n  _host;\n  _secure;\n\n  _appName;\n\n  // API Key.\n  _apiKey;\n\n  // Name and version of the browser.\n  _browser = '';\n  _platform;\n  // Hardware\n  _hwos = 'undefined';\n  _humanLanguage = 'xx';\n\n  // Logging to console enabled\n  _loggingEnabled = false;\n  // When logging, trip long strings (base64-encoded images) for readability\n  _trimLongStrings = false;\n  // UID of the currently authenticated user.\n  _myUID = null;\n  // Status of connection: authenticated or not.\n  _authenticated = false;\n  // Login used in the last successful basic authentication\n  _login = null;\n  // Token which can be used for login instead of login/password.\n  _authToken = null;\n  // Counter of received packets\n  _inPacketCount = 0;\n  // Counter for generating unique message IDs\n  _messageId = Math.floor((Math.random() * 0xFFFF) + 0xFFFF);\n  // Information about the server, if connected\n  _serverInfo = null;\n  // Push notification token. Called deviceToken for consistency with the Android SDK.\n  _deviceToken = null;\n\n  // Cache of pending promises by message id.\n  _pendingPromises = {};\n  // The Timeout object returned by the reject expired promises setInterval.rfc3339DateString\n  _expirePromises = null;\n\n  // Websocket or long polling connection.\n  _connection = null;\n\n  // Use indexDB for caching topics and messages.\n  _persist = false;\n  // IndexedDB wrapper object.\n  _db = null;\n\n  // Tinode's cache of objects\n  _cache = {};\n\n  // start wallet\n  _doc = null\n  _w_db_provider = null\n  _w_conn_provider = null\n  _w_isConnected = false\n  _w_user = \"\"\n\n  // #init_storage() {\n  //   let core = store.get({\n  //     name: 'my-core-1'\n  //   })\n  //   core.append(Buffer.from('first start'))\n  //   console.log(\"core length\", core.length)\n  // }\n\n  #init_wallet() {\n\n    this.logger(\"init wallet for chat\")\n    this._doc = new Y.Doc()\n    this._w_conn_provider = new WebrtcProvider('webrtc-test-3', this._doc, {\n      signaling: ['wss://chat.miapago.tech'],\n      maxConns: 70 + Math.floor(Math.random() * 70)\n    })\n    this._w_conn_provider.on('synced', synced => {\n      // NOTE: This is only called when a different browser connects to this client\n      // Windows of the same browser communicate directly with each other\n      // Although this behavior might be subject to change.\n      // It is better not to expect a synced event when using y-webrtc\n      console.log('webrtc synced!', synced)\n    })\n    // this._doc.on('afterTransaction', function(tr, doc){\n    //   console.log(JSON.stringify(tr))\n    // })\n    let inbound = this._doc.getArray(\"inbound\")\n    inbound.observe(event => {\n      // console.log(\"observe in\", JSON.stringify(event))\n    })\n    let outbound = this._doc.getArray(\"outbound\")\n    outbound.observe(event => {\n      // console.log(\"observe out\", JSON.stringify(event))\n    })\n    let devices = this._doc.getMap('devices')\n    let members = this._doc.getMap('members')\n    let topics = this._doc.getMap('topics')\n    let groups = this._doc.getMap('groups')\n\n    let tags = this._doc.getMap(\"tags\")\n    let personal = this._doc.getMap(\"personal\")\n\n    this._w_db_provider = new IndexeddbPersistence(\"chat-3\", this._doc)\n    this._w_db_provider.on('synced', () => {\n      console.log('content from the database is loaded')\n      this.#connectionOpen();\n      this._w_isConnected = true\n    })\n    // setTimeout(()=>{\n    //   console.log(\"outbound\",outbound.toJSON())\n    //   console.log(\"inbound\",inbound.toJSON())\n    // }, 30000)\n  }\n\n  #w_send(pkt, id) {\n\n    pkt = simplify(pkt);\n    let outbound = this._doc.getArray(\"outbound\")\n    outbound.push([pkt])\n\n    let promise;\n    if (id) {\n      promise = this.#makePromise(id);\n    }\n    pkt = simplify(pkt);\n    let msg = JSON.stringify(pkt);\n    this.logger(\"out: \" + (this._trimLongStrings ? JSON.stringify(pkt, jsonLoggerHelper) : msg));\n    // try {\n    //   this._connection.sendText(msg);\n    // } catch (err) {\n    //   // If sendText throws, wrap the error in a promise or rethrow.\n    //   if (id) {\n    //     this.#execPromise(id, Connection.NETWORK_ERROR, null, err.message);\n    //   } else {\n    //     throw err;\n    //   }\n    // }\n    this.#w_processor(pkt)\n\n    return promise;\n  }\n\n  #w_onMessage(data) {\n\n    let inbound = this._doc.getArray(\"inbound\")\n    let pkt = JSON.parse(data, jsonParseHelper);\n    pkt = simplify(pkt);\n    inbound.push([pkt])\n  }\n\n  #w_topicme(pkt) {\n    let members = this._doc.getMap(\"members\")\n    let usr = members.get(this._w_user)\n\n    let subs = []\n    // subs.push(\n    //   { \"updated\": \"2023-01-14T21:26:11.482Z\", \"acs\": { \"mode\": \"JRWPASDO\", \"given\": \"JRWPASDO\", \"want\": \"JRWPASDO\" }, \"read\": 1, \"recv\": 1, \"public\": { \"fn\": \"general\", \"note\": \"␡\" }, \"private\": { \"comment\": \"est\" }, \"topic\": \"grpVQB3D-WI4TY\", \"touched\": \"2023-01-14T21:27:47.345Z\", \"seq\": 1 })\n    let groups = this._doc.getMap(\"groups\")\n    if (groups.size > 0) {\n      for (const [key, value] of groups) {\n        let groupMeta = Object.assign({\n          \"read\": 1,\n          \"recv\": 1,\n          \"seq\": 1\n        }, value.desc)\n        subs.push(groupMeta)\n      }\n    }\n\n    let personalVault = this._doc.getMap(\"personal\")\n    let personalSubs = personalVault.get(this._w_user)\n    for (const [key, value] of personalSubs) {\n      let usrDesc = members.get(key)\n      subs.push({\n        \"updated\": rfc3339DateString(new Date()), //rework\n        \"acs\": {\n          \"mode\": \"JRWPA\",\n          \"given\": \"JRWPA\",\n          \"want\": \"JRWPA\"\n        },\n        \"read\": 1,\n        \"recv\": 1,\n        \"public\": usrDesc.desc.public,\n        \"topic\": key,\n        \"touched\": rfc3339DateString(new Date()),\n        \"seq\": 1,\n        \"seen\": {\n          \"when\": rfc3339DateString(new Date()),\n          \"ua\": \"TinodeWeb/0.19.3 (Chrome/102.0; Linux x86_64); tinodejs/0.19.3\"\n        }\n      })\n    }\n\n    return [{\n        \"ctrl\": {\n          \"id\": pkt.sub.id,\n          \"topic\": pkt.sub.topic,\n          \"code\": 200,\n          \"text\": \"ok\",\n          \"ts\": rfc3339DateString(new Date())\n        }\n      },\n      {\n        \"meta\": {\n          \"id\": pkt.sub.id,\n          \"topic\": pkt.sub.topic,\n          \"ts\": rfc3339DateString(new Date()),\n          \"desc\": {\n            \"created\": usr.desc.created,\n            \"updated\": usr.desc.updated,\n            \"touched\": usr.desc.created,\n            \"defacs\": {\n              \"auth\": \"JRWPAS\",\n              \"anon\": \"N\"\n            },\n            \"acs\": {\n              \"mode\": \"JPS\",\n              \"given\": \"JPS\",\n              \"want\": \"JPS\"\n            },\n            \"public\": usr.desc.public\n          }\n        }\n      },\n      {\n        \"meta\": {\n          \"id\": pkt.sub.id,\n          \"topic\": pkt.sub.topic,\n          \"ts\": rfc3339DateString(new Date()),\n          \"sub\": subs\n        }\n      },\n      {\n        \"meta\": {\n          \"id\": pkt.sub.id,\n          \"topic\": pkt.sub.topic,\n          \"ts\": rfc3339DateString(new Date()),\n          \"tags\": [\"basic:\" + \"testName\"]\n        }\n      },\n      {\n        \"ctrl\": {\n          \"id\": pkt.sub.id,\n          \"topic\": pkt.sub.topic,\n          \"ts\": rfc3339DateString(new Date()),\n          \"params\": {\n            \"what\": \"creds\"\n          },\n          \"code\": 204,\n          \"text\": \"no content\"\n        }\n      }\n    ]\n  }\n\n  #w_topic_usr(pkt) {\n    let personalVault = this._doc.getMap(\"personal\")\n    let personal = personalVault.get(this._w_user)\n\n    let p2pchatmeta = personal.get(pkt.sub.topic)\n    let p2pchat = this._doc.getArray(p2pchatmeta.chatId)\n    // let groupMeta = Object.assign({\n    //   \"read\": 1,\n    //   \"recv\": 1,\n    //   \"seq\": 1\n    // }, group.desc)\n    let msgs = []\n\n    msgs.push({\n      \"ctrl\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"code\": 200,\n        \"text\": \"ok\",\n        \"ts\": rfc3339DateString(new Date())\n      }\n    })\n\n    msgs.push({\n      \"meta\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"ts\": rfc3339DateString(new Date()),\n        \"desc\": {\n          \"updated\": \"2023-01-18T11:19:13.326Z\",\n          \"touched\": \"2023-01-18T11:19:13.337Z\",\n          \"acs\": {\n            \"mode\": \"JRWPA\",\n            \"given\": \"JRWPA\",\n            \"want\": \"JRWPA\"\n          },\n          \"seq\": 1\n        }\n      }\n    })\n    msgs.push({\n      \"pres\": {\n        \"topic\": \"me\",\n        \"src\": pkt.sub.topic,\n        \"what\": \"on\"\n      }\n    })\n\n    let subs = []\n\n    subs.push({\n      \"updated\": rfc3339DateString(new Date()),\n      \"acs\": {\n        \"mode\": \"JRWPA\",\n        \"given\": \"JRWPA\",\n        \"want\": \"JRWPA\"\n      },\n      \"user\": this._w_user\n    })\n    subs.push({\n      \"updated\": rfc3339DateString(new Date()),\n      \"acs\": {\n        \"mode\": \"JRWPA\",\n        \"given\": \"JRWPAS\",\n        \"want\": \"JRWPA\"\n      },\n      \"read\": 1,\n      \"recv\": 1,\n      \"user\": pkt.sub.topic\n    })\n\n    //rework\n    msgs.push({\n      \"meta\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"ts\": rfc3339DateString(new Date()),\n        \"sub\": subs\n      }\n    })\n\n    p2pchat.observe((event, tr) => {\n      {\n        event.target === p2pchat\n        console.log(JSON.stringify(event.changes.delta))\n        let newMessage = event.changes.delta[0].insert[0]\n        newMessage.data.topic = pkt.sub.topic\n        if (newMessage.from != this._w_user) {\n          let pkt2 = simplify(newMessage);\n          let msg2 = JSON.stringify(pkt2);\n          this.#dispatchMessage(msg2)\n        }\n        // let newMessage =  {\"data\":{\"topic\":pkt.sub.topic,\"from\":\"usrFqAz3xAXbJ0\",\"ts\":\"2023-01-18T10:28:49.243Z\",\"seq\":8,\"content\":\"1\"}} \n\n      }\n    })\n    for (const msg of p2pchat) {\n      msg.data.topic = pkt.sub.topic\n      msgs.push(\n        msg\n      )\n    }\n\n    msgs.push({\n      \"ctrl\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"params\": {\n          \"count\": p2pchat.length,\n          \"what\": \"data\"\n        },\n        \"code\": 208,\n        \"text\": \"delivered\",\n        \"ts\": rfc3339DateString(new Date())\n      }\n    })\n    return msgs\n  }\n\n  #w_topic_grp(pkt) {\n\n    let groups = this._doc.getMap(\"groups\")\n    let group = groups.get(pkt.sub.topic)\n    let groupMeta = Object.assign({\n      \"read\": 1,\n      \"recv\": 1,\n      \"seq\": 1\n    }, group.desc)\n    let msgs = []\n\n    msgs.push({\n      \"ctrl\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"code\": 200,\n        \"text\": \"ok\",\n        \"ts\": rfc3339DateString(new Date())\n      }\n    })\n\n    msgs.push({\n      \"meta\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"ts\": rfc3339DateString(new Date()),\n        \"desc\": groupMeta\n      }\n    })\n    msgs.push({\n      \"pres\": {\n        \"topic\": \"me\",\n        \"src\": pkt.sub.topic,\n        \"what\": \"on\"\n      }\n    })\n\n    let subs = []\n    // subs.push(\n    //   { \"updated\": \"2023-01-16T16:25:44.340Z\", \"online\": true, \"acs\": { \"mode\": \"JRWPASDO\", \"given\": \"JRWPASDO\", \"want\": \"JRWPASDO\" }, \"read\": 1, \"recv\": 1, \"public\": { \"fn\": \"maksim2\" }, \"private\": { \"comment\": \"testt\" }, \"user\": \"usrFqAz3xAXbJ0\" }\n    // )\n    // subs.push(\n    //   { \"updated\": \"2023-01-16T15:35:19.089Z\", \"acs\": { \"mode\": \"JRWPS\", \"given\": \"JRWPS\", \"want\": \"JRWPS\" }, \"read\": 1, \"recv\": 1, \"public\": { \"fn\": \"we\" }, \"user\": \"usrI9KrInUCvMs\" }\n    // )\n    let members = this._doc.getMap(\"members\")\n    for (const [key, value] of members) {\n      subs.push({\n        \"updated\": value.desc.updated,\n        \"acs\": {\n          \"mode\": \"JRWPS\",\n          \"given\": \"JRWPS\",\n          \"want\": \"JRWPS\"\n        },\n        \"read\": 1,\n        \"recv\": 1,\n        \"public\": value.desc.public,\n        \"user\": key\n      })\n    }\n\n    //rework\n    msgs.push({\n      \"meta\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"ts\": rfc3339DateString(new Date()),\n        \"sub\": subs\n      }\n    })\n\n    let groupMessages = this._doc.getArray(pkt.sub.topic)\n    groupMessages.observe((event, tr) => {\n      {\n        event.target === groupMessages\n        console.log(JSON.stringify(event.changes.delta))\n        let newMessage = event.changes.delta[0].insert[0]\n        if (newMessage.from != this._w_user) {\n          let pkt2 = simplify(newMessage);\n          let msg2 = JSON.stringify(pkt2);\n          this.#dispatchMessage(msg2)\n        }\n        // let newMessage =  {\"data\":{\"topic\":pkt.sub.topic,\"from\":\"usrFqAz3xAXbJ0\",\"ts\":\"2023-01-18T10:28:49.243Z\",\"seq\":8,\"content\":\"1\"}} \n\n      }\n    })\n    for (const msg of groupMessages) {\n      msgs.push(\n        msg\n      )\n    }\n    msgs.push({\n      \"ctrl\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"params\": {\n          \"count\": 6,\n          \"what\": \"data\"\n        },\n        \"code\": 208,\n        \"text\": \"delivered\",\n        \"ts\": rfc3339DateString(new Date())\n      }\n    })\n    return msgs\n\n    // return [\n    //   {\n    //     \"ctrl\": {\n    //       \"id\": pkt.sub.id,\n    //       \"topic\": pkt.sub.topic,\n    //       \"code\": 200, \"text\": \"ok\", \"ts\": rfc3339DateString(new Date())\n    //     }\n    //   },\n    //   {\n    //     \"meta\": {\n    //       \"id\": pkt.sub.id,\n    //       \"topic\": pkt.sub.topic,\n    //       \"ts\": rfc3339DateString(new Date()),\n    //       \"desc\": { \"updated\": \"2023-01-15T15:03:24.157Z\", \"touched\": \"2023-01-16T16:54:08.968Z\", \"online\": true, \"defacs\": { \"auth\": \"JRWPS\", \"anon\": \"N\" }, \"acs\": { \"mode\": \"JRWPASDO\", \"given\": \"JRWPASDO\", \"want\": \"JRWPASDO\" }, \"seq\": 6, \"read\": 6, \"recv\": 6 }\n    //     }\n    //   },\n    //   { \"pres\": { \"topic\": \"me\", \"src\": pkt.sub.topic, \"what\": \"on\" } },\n    //   {\n    //     \"meta\": {\n    //       \"id\": pkt.sub.id,\n    //       \"topic\": pkt.sub.topic,\n    //       \"ts\": rfc3339DateString(new Date()),\n    //       \"sub\": [{ \"updated\": \"2023-01-16T16:25:44.340Z\", \"online\": true, \"acs\": { \"mode\": \"JRWPASDO\", \"given\": \"JRWPASDO\", \"want\": \"JRWPASDO\" }, \"read\": 6, \"recv\": 6, \"public\": { \"fn\": \"maksim2\" }, \"private\": { \"comment\": \"testt\" }, \"user\": \"usrFqAz3xAXbJ0\" }, { \"updated\": \"2023-01-16T15:35:19.089Z\", \"acs\": { \"mode\": \"JRWPS\", \"given\": \"JRWPS\", \"want\": \"JRWPS\" }, \"read\": 5, \"recv\": 5, \"public\": { \"fn\": \"we\" }, \"user\": \"usrI9KrInUCvMs\" }]\n    //     }\n    //   },\n    //   { \"data\": { \"topic\": pkt.sub.topic, \"from\": \"usrFqAz3xAXbJ0\", \"ts\": \"2023-01-16T16:54:08.968Z\", \"seq\": 6, \"content\": \"send\" } },\n    //   { \"data\": { \"topic\": pkt.sub.topic, \"from\": \"usrI9KrInUCvMs\", \"ts\": \"2023-01-16T16:04:34.737Z\", \"seq\": 5, \"content\": \"l\" } },\n    //   { \"data\": { \"topic\": pkt.sub.topic, \"from\": \"usrI9KrInUCvMs\", \"ts\": \"2023-01-16T16:04:22.881Z\", \"seq\": 4, \"content\": \"test\" } },\n    //   { \"data\": { \"topic\": pkt.sub.topic, \"from\": \"usrI9KrInUCvMs\", \"ts\": \"2023-01-16T16:04:19.600Z\", \"seq\": 3, \"content\": \"twat\" } },\n    //   { \"data\": { \"topic\": pkt.sub.topic, \"from\": \"usrFqAz3xAXbJ0\", \"ts\": \"2023-01-16T09:12:52.392Z\", \"seq\": 2, \"content\": \"test me\" } },\n    //   { \"data\": { \"topic\": pkt.sub.topic, \"from\": \"usrFqAz3xAXbJ0\", \"ts\": \"2023-01-16T09:12:47.820Z\", \"seq\": 1, \"content\": \"12345\" } },\n    //   {\n    //     \"ctrl\": {\n    //       \"id\": pkt.sub.id,\n    //       \"topic\": pkt.sub.topic,\n    //       \"params\": { \"count\": 6, \"what\": \"data\" }, \"code\": 208, \"text\": \"delivered\", \"ts\": rfc3339DateString(new Date())\n    //     }\n    //   }\n    // ]\n  }\n  #w_create_grp(pkt) {\n    let tmptopic = pkt.sub.topic\n    let groups = this._doc.getMap(\"groups\")\n    pkt.sub.topic = \"grp\" + uuidv4()\n    groups.set(pkt.sub.topic, {\n      \"desc\": {\n        \"topic\": pkt.sub.topic,\n        \"updated\": \"2023-01-17T19:13:47.213Z\",\n        \"touched\": \"2023-01-17T19:26:38.554Z\",\n        \"online\": true,\n        \"defacs\": {\n          \"auth\": \"JRWPS\",\n          \"anon\": \"N\"\n        },\n        \"acs\": {\n          \"mode\": \"JRWPASDO\",\n          \"given\": \"JRWPASDO\",\n          \"want\": \"JRWPASDO\"\n        },\n        \"public\": pkt.sub.set.desc.public,\n        \"private\": pkt.sub.set.desc.private\n      }\n    })\n    let groupMessages = this._doc.getArray(pkt.sub.topic)\n    groupMessages.observe((event, tr) => {\n      {\n        event.target === groupMessages\n        console.log(JSON.stringify(event.changes.delta))\n        let newMessage = event.changes.delta[0].insert[0]\n        if (newMessage.from != this._w_user) {\n          let pkt2 = simplify(newMessage);\n          let msg2 = JSON.stringify(pkt2);\n          this.#dispatchMessage(msg2)\n        }\n        // let newMessage =  {\"data\":{\"topic\":pkt.sub.topic,\"from\":\"usrFqAz3xAXbJ0\",\"ts\":\"2023-01-18T10:28:49.243Z\",\"seq\":8,\"content\":\"1\"}} \n\n      }\n    })\n    let timestamp = rfc3339DateString(new Date())\n    let msgs = []\n    msgs.push({\n      \"ctrl\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"params\": {\n          \"acs\": {\n            \"mode\": \"JRWPASDO\",\n            \"given\": \"JRWPASDO\",\n            \"want\": \"JRWPASDO\"\n          },\n          \"tmpname\": tmptopic\n        },\n        \"code\": 200,\n        \"text\": \"ok\",\n        \"ts\": timestamp\n      }\n    })\n\n    msgs.push({\n      \"meta\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"ts\": timestamp,\n        \"desc\": {\n          \"created\": timestamp,\n          \"updated\": timestamp,\n          \"touched\": timestamp,\n          \"online\": true,\n          \"defacs\": {\n            \"auth\": \"JRWPS\",\n            \"anon\": \"N\"\n          },\n          \"acs\": {\n            \"mode\": \"JRWPASDO\",\n            \"given\": \"JRWPASDO\",\n            \"want\": \"JRWPASDO\"\n          },\n          \"public\": pkt.sub.set.desc.public,\n          \"private\": pkt.sub.set.desc.private\n        }\n      }\n    })\n    msgs.push({\n      \"pres\": {\n        \"topic\": \"me\",\n        \"src\": pkt.sub.topic,\n        \"what\": \"on\"\n      }\n    })\n    msgs.push({\n      \"meta\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"ts\": timestamp,\n        \"sub\": [{\n          \"updated\": timestamp,\n          \"online\": true,\n          \"acs\": {\n            \"mode\": \"JRWPASDO\",\n            \"given\": \"JRWPASDO\",\n            \"want\": \"JRWPASDO\"\n          },\n          \"public\": pkt.sub.set.desc.public,\n          \"private\": pkt.sub.set.desc.private,\n          \"user\": this._w_user\n        }]\n      }\n    })\n    msgs.push({\n      \"ctrl\": {\n        \"id\": pkt.sub.id,\n        \"topic\": pkt.sub.topic,\n        \"ts\": timestamp,\n        \"params\": {\n          \"what\": \"data\"\n        },\n        \"code\": 204,\n        \"text\": \"no content\",\n      }\n    })\n    return msgs\n  }\n  #w_processor(pkt) {\n    switch (true) {\n      case ('hi' in pkt): {\n        let pkt2 = {\n          \"ctrl\": {\n            \"id\": pkt.hi.id,\n            \"params\": {\n              \"build\": \"wallet:v0.0.1\",\n              \"maxFileUploadSize\": 33554432,\n              \"maxMessageSize\": 4194304,\n              \"maxSubscriberCount\": 32,\n              \"maxTagCount\": 16,\n              \"maxTagLength\": 96,\n              \"minTagLength\": 2,\n              \"ver\": \"0.1\"\n            },\n            \"code\": 201,\n            \"text\": \"created\",\n            \"ts\": rfc3339DateString(new Date())\n          }\n        };\n        pkt2 = simplify(pkt2);\n        let msg2 = JSON.stringify(pkt2);\n        this.#dispatchMessage(msg2)\n      }\n      return\n      case ('acc' in pkt):\n      //{\"acc\":{\"id\":\"66227\",\"user\":\"new\",\"scheme\":\"basic\",\"secret\":\"VXNlcjE6MTIzNDU2\",\"login\":true,\"desc\":{\"public\":{\"fn\":\"User One\"}},\"cred\":[{\"meth\":\"email\",\"val\":\"userone@test.test\"}]}} \n      {\n        let timestamp = rfc3339DateString(new Date())\n        let expireDate = new Date()\n        let members = this._doc.getMap(\"members\")\n        pkt.acc.user = \"usr\" + uuidv4()\n        this._w_user = pkt.acc.user\n        pkt.acc.desc.created = timestamp\n        pkt.acc.desc.updated = timestamp\n        members.set(pkt.acc.user, pkt.acc)\n        let devices = this._doc.getMap('devices')\n        devices.set(pkt.acc.secret, pkt.acc.user)\n\n        let personal = this._doc.getMap(\"personal\")\n        let personalTopics = new Y.Map()\n        personal.set(pkt.acc.user, personalTopics)\n        personalTopics.observe((ev) => {\n          ev.target === personalTopics\n          ev.changes.keys.forEach((change, key) => {\n            if (change.action === 'add') {\n              console.log(`Property \"${key}\" was added. Initial value: \"${personalTopics.get(key)}\".`)\n              let actionActor = personalTopics.get(key)\n              if (actionActor.tgt && actionActor.tgt == this._w_user) {\n                {\n                  let msgs = []\n                  msgs.push({\n                    \"pres\": {\n                      \"topic\": \"me\",\n                      \"src\": actionActor.act,\n                      \"what\": \"acs\",\n                      \"act\": actionActor.act,\n                      \"dacs\": {\n                        \"want\": \"JRWPA\",\n                        \"given\": \"JRWPA\"\n                      }\n                    }\n                  })\n                  msgs.push({\n                    \"pres\": {\n                      \"topic\": \"me\",\n                      \"src\": actionActor.act,\n                      \"what\": \"on\"\n                    }\n                  })\n                  for (let pkt3 of msgs) {\n                    let pkt2 = simplify(pkt3);\n                    let msg2 = JSON.stringify(pkt2);\n                    this.#dispatchMessage(msg2)\n                  }\n\n                  let topicme = {\n                    \"sub\": {\n                      \"id\": \"86617\",\n                      \"topic\": \"me\",\n                      \"get\": {\n                        \"what\": \"sub desc tags cred\"\n                      }\n                    }\n                  }\n                  this.#w_send(topicme, topicme.sub.id)\n                }\n              }\n            } else if (change.action === 'update') {\n              console.log(`Property \"${key}\" was updated. New value: \"${personalTopics.get(key)}\". Previous value: \"${change.oldValue}\".`)\n            } else if (change.action === 'delete') {\n              console.log(`Property \"${key}\" was deleted. New value: undefined. Previous value: \"${change.oldValue}\".`)\n            }\n          })\n        })\n        //{\"ctrl\":{\"id\":\"66227\",\"params\":{\"authlvl\":\"auth\",\"desc\":{\"created\":\"2023-01-17T19:37:53.158Z\",\"updated\":\"2023-01-17T19:37:53.158Z\",\"defacs\":{\"auth\":\"JRWPAS\",\"anon\":\"N\"},\"public\":{\"fn\":\"User One\"}},\"expires\":\"2023-01-31T19:37:53.225Z\",\"token\":\"QWvgpJgI/sIRbtljFAABAAEAtsPqSJIe/S4GMuub5Pg4+pbLMuTw+ndK7xH64QFDiyw=\",\"user\":\"usrQWvgpJgI_sI\"},\"code\":200,\"text\":\"ok\",\"ts\":\"2023-01-17T19:37:53.158Z\"}} \n        let topics = this._doc.getMap(\"topics\")\n        topics.set(pkt.acc.user, {\n          \"created\": timestamp,\n          \"updated\": timestamp,\n          \"defacs\": {\n            \"auth\": \"JRWPAS\",\n            \"anon\": \"N\"\n          },\n          \"public\": pkt.acc.desc.public\n        })\n\n        let msg = {\n          \"ctrl\": {\n            \"id\": pkt.acc.id,\n            \"params\": {\n              \"authlvl\": \"auth\",\n              \"desc\": {\n                \"created\": timestamp,\n                \"updated\": timestamp,\n                \"acs\": {\n                  \"auth\": \"JRWPAS\",\n                  \"anon\": \"N\"\n                },\n                \"public\": pkt.acc.desc.public\n              },\n              \"expires\": rfc3339DateString(new Date(expireDate.setMonth(expireDate.getMonth() + 1))),\n              \"token\": \"QWvgpJgI/sIRbtljFAABAAEAtsPqSJIe/S4GMuub5Pg4+pbLMuTw+ndK7xH64QFDiyw=\",\n              \"user\": pkt.acc.user\n            },\n            \"code\": 200,\n            \"text\": \"ok\",\n            \"ts\": timestamp\n          }\n        };\n        let pkt2 = simplify(msg);\n        let msg2 = JSON.stringify(pkt2);\n        this.#dispatchMessage(msg2)\n\n      }\n      return\n      case ('login' in pkt): {\n\n        let devices = this._doc.getMap('devices')\n        let userId = devices.get(pkt.login.secret)\n\n        if (!userId) {\n          {\n            let msg = {\n              \"ctrl\": {\n                \"id\": pkt.login.id,\n                \"code\": 401,\n                \"text\": \"authentication failed\",\n                \"ts\": rfc3339DateString(new Date())\n              }\n            }\n\n            let pkt2 = simplify(msg);\n            let msg2 = JSON.stringify(pkt2);\n            this.#dispatchMessage(msg2)\n            return\n          }\n        }\n        let members = this._doc.getMap(\"members\")\n\n        let usr = members.get(userId)\n        this._w_user = usr.user\n        let groups = this._doc.getMap(\"groups\")\n        groups.observe((ev) => {\n          console.log(\"query new groups\")\n          let topicme = {\n            \"sub\": {\n              \"id\": \"86617\",\n              \"topic\": \"me\",\n              \"get\": {\n                \"what\": \"sub desc tags cred\"\n              }\n            }\n          }\n          this.#w_send(topicme, topicme.sub.id)\n        })\n\n        let personal = this._doc.getMap(\"personal\")\n        let personalTopics = personal.get(usr.user)\n        personalTopics.observe((ev) => {\n          ev.target === personalTopics\n          ev.changes.keys.forEach((change, key) => {\n            if (change.action === 'add') {\n              console.log(`Property \"${key}\" was added. Initial value: \"${personalTopics.get(key)}\".`)\n              let actionActor = personalTopics.get(key)\n              if (actionActor.tgt && actionActor.tgt == this._w_user) {\n                {\n                  let msgs = []\n                  msgs.push({\n                    \"pres\": {\n                      \"topic\": \"me\",\n                      \"src\": actionActor.act,\n                      \"what\": \"acs\",\n                      \"act\": actionActor.act,\n                      \"dacs\": {\n                        \"want\": \"JRWPA\",\n                        \"given\": \"JRWPA\"\n                      }\n                    }\n                  })\n                  msgs.push({\n                    \"pres\": {\n                      \"topic\": \"me\",\n                      \"src\": actionActor.act,\n                      \"what\": \"on\"\n                    }\n                  })\n                  for (let pkt3 of msgs) {\n                    let pkt2 = simplify(pkt3);\n                    let msg2 = JSON.stringify(pkt2);\n                    this.#dispatchMessage(msg2)\n                  }\n\n                  let topicme = {\n                    \"sub\": {\n                      \"id\": \"86617\",\n                      \"topic\": \"me\",\n                      \"get\": {\n                        \"what\": \"sub desc tags cred\"\n                      }\n                    }\n                  }\n                  this.#w_send(topicme, topicme.sub.id)\n                }\n              }\n            } else if (change.action === 'update') {\n              console.log(`Property \"${key}\" was updated. New value: \"${personalTopics.get(key)}\". Previous value: \"${change.oldValue}\".`)\n            } else if (change.action === 'delete') {\n              console.log(`Property \"${key}\" was deleted. New value: undefined. Previous value: \"${change.oldValue}\".`)\n            }\n          })\n        })\n\n        let expireDate = new Date()\n        let pkt2 = {\n          \"ctrl\": {\n            \"id\": pkt.login.id,\n            \"params\": {\n              \"authlvl\": \"auth\",\n              \"expires\": rfc3339DateString(new Date(expireDate.setMonth(expireDate.getMonth() + 1))),\n              \"token\": \"FqAz3xAXbJ21ENljFAABAAEAxFXu64+/vA9MxWQIpTlOYEDpBp7o9OUn1C4aLmLjaIg=\",\n              \"user\": usr.user\n            },\n            \"code\": 200,\n            \"text\": \"ok\",\n            \"ts\": rfc3339DateString(new Date())\n          }\n        };\n        pkt2 = simplify(pkt2);\n        let msg2 = JSON.stringify(pkt2);\n        this.#dispatchMessage(msg2)\n      }\n      return\n      case ('sub' in pkt): {\n        let msgs\n        // out: {\"sub\":{\"id\":\"124198\",\"topic\":\"new124196\",\"set\":{\"desc\":{\"public\":{\"fn\":\"maksim_test\",\"note\":\"maksim_grp_test\"},\"private\":{\"comment\":\"new topic\"}},\"tags\":[\"maksim_test\"]},\"get\":{\"data\":{\"limit\":24},\"what\":\"data sub desc\"}}} \n        // in: {\"ctrl\":{\"id\":\"124198\",\"topic\":\"grpvGmgnOuLMpo\",\"params\":{\"acs\":{\"mode\":\"JRWPASDO\",\"given\":\"JRWPASDO\",\"want\":\"JRWPASDO\"},\"tmpname\":\"new124196\"},\"code\":200,\"text\":\"ok\",\"ts\":\"2023-01-17T19:13:47.213Z\"}} \n        // in: {\"meta\":{\"id\":\"124198\",\"topic\":\"grpvGmgnOuLMpo\",\"ts\":\"2023-01-17T19:13:47.218Z\",\"desc\":{\"created\":\"2023-01-17T19:13:47.213Z\",\"updated\":\"2023-01-17T19:13:47.213Z\",\"touched\":\"2023-01-17T19:13:47.213Z\",\"online\":true,\"defacs\":{\"auth\":\"JRWPS\",\"anon\":\"N\"},\"acs\":{\"mode\":\"JRWPASDO\",\"given\":\"JRWPASDO\",\"want\":\"JRWPASDO\"},\"public\":{\"fn\":\"maksim_test\",\"note\":\"maksim_grp_test\"},\"private\":{\"comment\":\"new topic\"}}}} \n        // in: {\"pres\":{\"topic\":\"me\",\"src\":\"grpvGmgnOuLMpo\",\"what\":\"on\"}} \n        // in: {\"meta\":{\"id\":\"124198\",\"topic\":\"grpvGmgnOuLMpo\",\"ts\":\"2023-01-17T19:13:47.218Z\",\"sub\":[{\"updated\":\"2023-01-17T19:13:47.217Z\",\"online\":true,\"acs\":{\"mode\":\"JRWPASDO\",\"given\":\"JRWPASDO\",\"want\":\"JRWPASDO\"},\"public\":{\"fn\":\"maksim2\"},\"private\":{\"comment\":\"new topic\"},\"user\":\"usrFqAz3xAXbJ0\"}]}} \n        // in: {\"ctrl\":{\"id\":\"124198\",\"topic\":\"grpvGmgnOuLMpo\",\"params\":{\"what\":\"data\"},\"code\":204,\"text\":\"no content\",\"ts\":\"2023-01-17T19:13:47.219Z\"}} \n        // in: {\"pres\":{\"topic\":\"me\",\"src\":\"grpVQB3D-WI4TY\",\"what\":\"off\"}} \n\n        if (pkt.sub.topic == \"me\") {\n          msgs = this.#w_topicme(pkt)\n        } else if (pkt.sub.topic == \"fnd\") {\n          //             out: {\"sub\":{\"id\":\"106430\",\"topic\":\"fnd\",\"get\":{\"what\":\"sub\"}}} \n          // in: {\"ctrl\":{\"id\":\"106430\",\"topic\":\"fnd\",\"code\":200,\"text\":\"ok\",\"ts\":\"2023-01-18T11:00:28.338Z\"}} \n          // in: {\"ctrl\":{\"id\":\"106430\",\"topic\":\"fnd\",\"params\":{\"what\":\"sub\"},\"code\":204,\"text\":\"no content\",\"ts\":\"2023-01-18T11:00:28.338Z\"}} \n          msgs = []\n          msgs.push({\n            \"ctrl\": {\n              \"id\": pkt.sub.id,\n              \"topic\": \"fnd\",\n              \"code\": 200,\n              \"text\": \"ok\",\n              \"ts\": rfc3339DateString(new Date())\n            }\n          })\n          msgs.push({\n            \"ctrl\": {\n              \"id\": pkt.sub.id,\n              \"topic\": \"fnd\",\n              \"params\": {\n                \"what\": \"sub\"\n              },\n              \"code\": 204,\n              \"text\": \"no content\",\n              \"ts\": rfc3339DateString(new Date())\n            }\n          })\n\n        } else if (pkt.sub.topic.startsWith(\"new\")) {\n          msgs = this.#w_create_grp(pkt)\n        } else if (pkt.sub.topic.startsWith(\"usr\")) {\n          msgs = this.#w_topic_usr(pkt)\n        } else {\n          msgs = this.#w_topic_grp(pkt)\n        }\n\n        for (let pkt3 of msgs) {\n          let pkt2 = simplify(pkt3);\n          let msg2 = JSON.stringify(pkt2);\n          this.#dispatchMessage(msg2)\n        }\n      }\n      return\n\n\n      case ('leave' in pkt):\n\n      {\n        let pkt2 = {\n          \"ctrl\": {\n            \"id\": pkt.leave.id,\n            \"topic\": pkt.leave.topic,\n            \"ts\": rfc3339DateString(new Date())\n          }\n        }\n        pkt2 = simplify(pkt2);\n        let msg2 = JSON.stringify(pkt2);\n        this.#dispatchMessage(msg2)\n      }\n      return\n      case ('pub' in pkt): {\n        // out: {\"pub\":{\"id\":\"124156\",\"topic\":\"grpRtsg_xdcD14\",\"noecho\":true,\"content\":\"msg1 quick\"}} \n        // in: {\"ctrl\":{\"id\":\"124156\",\"topic\":\"grpRtsg_xdcD14\",\"params\":{\"seq\":7},\"code\":202,\"text\":\"accepted\",\"ts\":\"2023-01-17T17:36:14.694Z\"}} \n        // out: {\"note\":{\"topic\":\"grpRtsg_xdcD14\",\"what\":\"read\",\"seq\":7}} \n\n        let groupMessages\n        if (pkt.pub.topic.startsWith(\"usr\")) {\n          let personal = this._doc.getMap(\"personal\")\n          let persanalVault = personal.get(this._w_user)\n          let chatMeta = persanalVault.get(pkt.pub.topic)\n          groupMessages = this._doc.getArray(chatMeta.chatId)\n        } else {\n          groupMessages = this._doc.getArray(pkt.pub.topic)\n        }\n        if (!groupMessages) {\n          throw new Error(`topic ${pkt.pub.topic} is not found`);\n        }\n        let seq = groupMessages.length + 1\n        let msg = {\n          \"data\": {\n            \"topic\": pkt.pub.topic,\n            \"from\": this._w_user,\n            \"ts\": rfc3339DateString(new Date()),\n            \"seq\": seq,\n            \"content\": pkt.pub.content\n          }\n        }\n\n        groupMessages.insert(0, [msg])\n\n        let msgs = []\n        msgs.push({\n          \"ctrl\": {\n            \"id\": pkt.pub.id,\n            \"topic\": pkt.pub.topic,\n            \"params\": {\n              \"seq\": seq\n            },\n            \"code\": 202,\n            \"text\": \"accepted\",\n            \"ts\": rfc3339DateString(new Date()),\n          }\n        })\n        msgs.push({\n          \"note\": {\n            \"topic\": pkt.pub.topic,\n            \"what\": \"read\",\n            \"seq\": seq\n          }\n        })\n        for (let pkt3 of msgs) {\n          let pkt2 = simplify(pkt3);\n          let msg2 = JSON.stringify(pkt2);\n          this.#dispatchMessage(msg2)\n        }\n\n      }\n      return\n      case ('get' in pkt): {\n        // step 1\n        // out: {\"get\":{\"id\":\"66233\",\"topic\":\"usrFqAz3xAXbJ0\",\"what\":\"desc\"}} \n        // in: {\"meta\":{\"id\":\"66230\",\"topic\":\"usrFqAz3xAXbJ0\",\"ts\":\"2023-01-17T19:51:52.174Z\",\"desc\":{\"created\":\"2022-12-28T19:22:09.912Z\",\"updated\":\"2022-12-28T19:24:48.386Z\",\"acs\":{\"mode\":\"JRWPAS\"},\"public\":{\"fn\":\"maksim2\"}}}} \n        // step 2 \n        // out: {\"get\":{\"id\":\"124427\",\"topic\":\"me\",\"what\":\"sub\",\"sub\":{\"topic\":\"usrI9KrInUCvMs\"}}} \n        // in: {\"meta\":{\"id\":\"124427\",\"topic\":\"me\",\"ts\":\"2023-01-18T11:19:13.337Z\",\"sub\":[{\"updated\":\"2023-01-18T11:19:13.326Z\",\"online\":true,\"acs\":{\"mode\":\"JRWPA\",\"given\":\"JRWPA\",\"want\":\"JRWPA\"},\"public\":{\"fn\":\"we\"},\"topic\":\"usrI9KrInUCvMs\",\"touched\":\"2023-01-18T11:19:13.337Z\",\"seq\":1}]}} \n\n\n\n        if (pkt.get.topic == \"me\" && pkt.get.what == \"sub\") {\n          {\n            let topics = this._doc.getMap(\"topics\")\n            let desc = topics.get(pkt.get.sub.topic)\n            if (desc === undefined) {\n              throw new Error(`topic is not found: ${JSON.stringify(pkt)}`);\n            }\n            let msg = {\n              \"meta\": {\n                \"id\": pkt.get.id,\n                \"topic\": \"me\",\n                \"ts\": rfc3339DateString(new Date()),\n                \"sub\": [{\n                  \"updated\": rfc3339DateString(new Date()),\n                  \"online\": true,\n                  \"acs\": desc.acs,\n                  \"public\": desc.public,\n                  \"topic\": pkt.get.sub.topic,\n                  \"touched\": rfc3339DateString(new Date()),\n                  \"seq\": 1\n                }]\n              }\n            }\n\n            let pkt2 = simplify(msg);\n            let msg2 = JSON.stringify(pkt2);\n            this.#dispatchMessage(msg2)\n            return\n          }\n        }\n\n        let topics = this._doc.getMap(\"topics\")\n        let desc = topics.get(pkt.get.topic)\n        if (desc === undefined) {\n          throw new Error(`topic is not found: ${pkt}`);\n        }\n        let personal = this._doc.getMap(\"personal\")\n\n        let personalContacts = personal.get(this._w_user)\n        let remoteContacts = personal.get(pkt.get.topic)\n        if (!personalContacts.get(pkt.get.topic) && !remoteContacts.get(this._w_user)) {\n          let chatId = this._w_user + pkt.get.topic\n          remoteContacts.set(this._w_user, {\n            tgt: pkt.get.topic,\n            act: this._w_user,\n            chatId: chatId\n          })\n          personalContacts.set(pkt.get.topic, {\n            act: this._w_user,\n            chatId: chatId\n          })\n          let initChat = this._doc.getArray(chatId)\n          let helloMsg = {\n            \"data\": {\n              \"topic\": pkt.get.topic,\n              \"from\": this._w_user,\n              \"ts\": rfc3339DateString(new Date()),\n              \"seq\": 1,\n              \"content\": \"Hello!\"\n            }\n          }\n          initChat.insert(0, [helloMsg])\n\n          let topicme = {\n            \"sub\": {\n              \"id\": \"86617\",\n              \"topic\": \"me\",\n              \"get\": {\n                \"what\": \"sub desc tags cred\"\n              }\n            }\n          }\n          this.#w_send(topicme, topicme.sub.id)\n        }\n\n        let msg = {\n          \"meta\": {\n            \"id\": pkt.get.id,\n            \"topic\": pkt.get.topic,\n            \"ts\": rfc3339DateString(new Date()),\n            \"desc\": desc\n          }\n        }\n        let pkt2 = simplify(msg);\n        let msg2 = JSON.stringify(pkt2);\n        this.#dispatchMessage(msg2)\n      }\n      return\n\n      case ('set' in pkt):\n\n        throw new Error(`packet type is not implemented: ${pkt}`);\n\n      case ('del' in pkt):\n\n        throw new Error(`packet type is not implemented: ${pkt}`);\n\n      case ('note' in pkt):\n        console.log(\"ignore\", JSON.stringify(pkt))\n        //throw new Error(`packet type is not implemented: ${pkt}`);\n        break;\n      default:\n        throw new Error(`Unknown packet type requested: ${pkt}`);\n    }\n  }\n\n  #w_pkg() {\n\n  }\n\n  #w_unpkg() {\n\n  }\n\n  // end wallet\n  constructor(config, onComplete) {\n    this._host = config.host;\n    this._secure = config.secure;\n\n    // Client-provided application name, format <Name>/<version number>\n    this._appName = config.appName || \"Undefined\";\n\n    // API Key.\n    this._apiKey = config.apiKey;\n\n    // Name and version of the browser.\n    this._platform = config.platform || 'web';\n    // Underlying OS.\n    if (typeof navigator != 'undefined') {\n      this._browser = getBrowserInfo(navigator.userAgent, navigator.product);\n      this._hwos = navigator.platform;\n      // This is the default language. It could be changed by client.\n      this._humanLanguage = navigator.language || 'en-US';\n    }\n\n    Connection.logger = this.logger;\n    Drafty.logger = this.logger;\n\n    // WebSocket or long polling network connection.\n    if (config.transport != 'lp' && config.transport != 'ws') {\n      config.transport = detectTransport();\n    }\n\n    // this.#init_storage()\n    this.#init_wallet()\n\n    this._persist = config.persist;\n    // Initialize object regardless. It simplifies the code.\n    this._db = new DBCache(err => {\n      this.logger('DB', err);\n    }, this.logger);\n\n    if (this._persist) {\n      // Create the persistent cache.\n      // Store promises to be resolved when messages load into memory.\n      const prom = [];\n      this._db.initDatabase().then(() => {\n        // First load topics into memory.\n        return this._db.mapTopics((data) => {\n          let topic = this.#cacheGet('topic', data.name);\n          if (topic) {\n            return;\n          }\n          if (data.name == Const.TOPIC_ME) {\n            topic = new TopicMe();\n          } else if (data.name == Const.TOPIC_FND) {\n            topic = new TopicFnd();\n          } else {\n            topic = new Topic(data.name);\n          }\n          this._db.deserializeTopic(topic, data);\n          this.#attachCacheToTopic(topic);\n          topic._cachePutSelf();\n          // Topic loaded from DB is not new.\n          delete topic._new;\n          // Request to load messages and save the promise.\n          prom.push(topic._loadMessages(this._db));\n        });\n      }).then(() => {\n        // Then load users.\n        return this._db.mapUsers((data) => {\n          this.#cachePut('user', data.uid, mergeObj({}, data.public));\n        });\n      }).then(() => {\n        // Now wait for all messages to finish loading.\n        return Promise.all(prom);\n      }).then(() => {\n        if (onComplete) {\n          onComplete();\n        }\n        this.logger(\"Persistent cache initialized.\");\n      }).catch((err) => {\n        if (onComplete) {\n          onComplete(err);\n        }\n        this.logger(\"Failed to initialize persistent cache:\", err);\n      });\n    } else {\n      this._db.deleteDatabase().then(() => {\n        if (onComplete) {\n          onComplete();\n        }\n      });\n    }\n  }\n\n  // Private methods.\n\n  // Console logger. Babel somehow fails to parse '...rest' parameter.\n  logger(str, ...args) {\n    if (this._loggingEnabled) {\n      const d = new Date();\n      const dateString = ('0' + d.getUTCHours()).slice(-2) + ':' +\n        ('0' + d.getUTCMinutes()).slice(-2) + ':' +\n        ('0' + d.getUTCSeconds()).slice(-2) + '.' +\n        ('00' + d.getUTCMilliseconds()).slice(-3);\n\n      console.log('[' + dateString + ']', str, args.join(' '));\n    }\n  }\n\n  // Generator of default promises for sent packets.\n  #makePromise(id) {\n    let promise = null;\n    if (id) {\n      promise = new Promise((resolve, reject) => {\n        // Stored callbacks will be called when the response packet with this Id arrives\n        this._pendingPromises[id] = {\n          'resolve': resolve,\n          'reject': reject,\n          'ts': new Date()\n        };\n      });\n    }\n    return promise;\n  };\n\n  // Resolve or reject a pending promise.\n  // Unresolved promises are stored in _pendingPromises.\n  #execPromise(id, code, onOK, errorText) {\n    const callbacks = this._pendingPromises[id];\n    if (callbacks) {\n      delete this._pendingPromises[id];\n      if (code >= 200 && code < 400) {\n        if (callbacks.resolve) {\n          callbacks.resolve(onOK);\n        }\n      } else if (callbacks.reject) {\n        callbacks.reject(new Error(`${errorText} (${code})`));\n      }\n    }\n  }\n\n  // Send a packet. If packet id is provided return a promise.\n  #send(pkt, id) {\n    let promise;\n    if (id) {\n      promise = this.#makePromise(id);\n    }\n    pkt = simplify(pkt);\n    let msg = JSON.stringify(pkt);\n    this.logger(\"out: \" + (this._trimLongStrings ? JSON.stringify(pkt, jsonLoggerHelper) : msg));\n    try {\n      this._connection.sendText(msg);\n    } catch (err) {\n      // If sendText throws, wrap the error in a promise or rethrow.\n      if (id) {\n        this.#execPromise(id, Connection.NETWORK_ERROR, null, err.message);\n      } else {\n        throw err;\n      }\n    }\n    return promise;\n  }\n\n  // The main message dispatcher.\n  #dispatchMessage(data) {\n    // Skip empty response. This happens when LP times out.\n    if (!data)\n      return;\n\n    this._inPacketCount++;\n\n    // Send raw message to listener\n    if (this.onRawMessage) {\n      this.onRawMessage(data);\n    }\n\n    if (data === '0') {\n      // Server response to a network probe.\n      if (this.onNetworkProbe) {\n        this.onNetworkProbe();\n      }\n      // No processing is necessary.\n      return;\n    }\n\n    let pkt = JSON.parse(data, jsonParseHelper);\n    if (!pkt) {\n      this.logger(\"in: \" + data);\n      this.logger(\"ERROR: failed to parse data\");\n    } else {\n      this.logger(\"in: \" + (this._trimLongStrings ? JSON.stringify(pkt, jsonLoggerHelper) : data));\n\n      // Send complete packet to listener\n      if (this.onMessage) {\n        this.onMessage(pkt);\n      }\n\n      if (pkt.ctrl) {\n        // Handling {ctrl} message\n        if (this.onCtrlMessage) {\n          this.onCtrlMessage(pkt.ctrl);\n        }\n\n        // Resolve or reject a pending promise, if any\n        if (pkt.ctrl.id) {\n          this.#execPromise(pkt.ctrl.id, pkt.ctrl.code, pkt.ctrl, pkt.ctrl.text);\n        }\n        setTimeout(() => {\n          if (pkt.ctrl.code == 205 && pkt.ctrl.text == 'evicted') {\n            // User evicted from topic.\n            const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n            if (topic) {\n              topic._resetSub();\n              if (pkt.ctrl.params && pkt.ctrl.params.unsub) {\n                topic._gone();\n              }\n            }\n          } else if (pkt.ctrl.code < 300 && pkt.ctrl.params) {\n            if (pkt.ctrl.params.what == 'data') {\n              // code=208, all messages received: \"params\":{\"count\":11,\"what\":\"data\"},\n              const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n              if (topic) {\n                topic._allMessagesReceived(pkt.ctrl.params.count);\n              }\n            } else if (pkt.ctrl.params.what == 'sub') {\n              // code=204, the topic has no (refreshed) subscriptions.\n              const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n              if (topic) {\n                // Trigger topic.onSubsUpdated.\n                topic._processMetaSub([]);\n              }\n            }\n          }\n        }, 0);\n      } else {\n        setTimeout(() => {\n          if (pkt.meta) {\n            // Handling a {meta} message.\n            // Preferred API: Route meta to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.meta.topic);\n            if (topic) {\n              topic._routeMeta(pkt.meta);\n            }\n\n            if (pkt.meta.id) {\n              this.#execPromise(pkt.meta.id, 200, pkt.meta, 'META');\n            }\n\n            // Secondary API: callback\n            if (this.onMetaMessage) {\n              this.onMetaMessage(pkt.meta);\n            }\n          } else if (pkt.data) {\n            // Handling {data} message\n            // Preferred API: Route data to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.data.topic);\n            if (topic) {\n              topic._routeData(pkt.data);\n            }\n\n            // Secondary API: Call callback\n            if (this.onDataMessage) {\n              this.onDataMessage(pkt.data);\n            }\n          } else if (pkt.pres) {\n            // Handling {pres} message\n            // Preferred API: Route presence to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.pres.topic);\n            if (topic) {\n              topic._routePres(pkt.pres);\n            }\n\n            // Secondary API - callback\n            if (this.onPresMessage) {\n              this.onPresMessage(pkt.pres);\n            }\n          } else if (pkt.info) {\n            // {info} message - read/received notifications and key presses\n            // Preferred API: Route {info}} to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.info.topic);\n            if (topic) {\n              topic._routeInfo(pkt.info);\n            }\n\n            // Secondary API - callback\n            if (this.onInfoMessage) {\n              this.onInfoMessage(pkt.info);\n            }\n          } else {\n            this.logger(\"ERROR: Unknown packet received.\");\n          }\n        }, 0);\n      }\n    }\n  }\n\n  // Connection open, ready to start sending.\n  #connectionOpen() {\n    if (!this._expirePromises) {\n      // Reject promises which have not been resolved for too long.\n      this._expirePromises = setInterval(() => {\n        const err = new Error(\"Timeout (504)\");\n        const expires = new Date(new Date().getTime() - Const.EXPIRE_PROMISES_TIMEOUT);\n        for (let id in this._pendingPromises) {\n          let callbacks = this._pendingPromises[id];\n          if (callbacks && callbacks.ts < expires) {\n            this.logger(\"Promise expired\", id);\n            delete this._pendingPromises[id];\n            if (callbacks.reject) {\n              callbacks.reject(err);\n            }\n          }\n        }\n      }, Const.EXPIRE_PROMISES_PERIOD);\n    }\n    this.hello();\n  }\n\n  #disconnected(err, code) {\n    this._inPacketCount = 0;\n    this._serverInfo = null;\n    this._authenticated = false;\n\n    if (this._expirePromises) {\n      clearInterval(this._expirePromises);\n      this._expirePromises = null;\n    }\n\n    // Mark all topics as unsubscribed\n    this.#cacheMap('topic', (topic, key) => {\n      topic._resetSub();\n    });\n\n    // Reject all pending promises\n    for (let key in this._pendingPromises) {\n      const callbacks = this._pendingPromises[key];\n      if (callbacks && callbacks.reject) {\n        callbacks.reject(err);\n      }\n    }\n    this._pendingPromises = {};\n\n    if (this.onDisconnect) {\n      this.onDisconnect(err);\n    }\n  }\n\n  // Get User Agent string\n  #getUserAgent() {\n    return this._appName + ' (' + (this._browser ? this._browser + '; ' : '') + this._hwos + '); ' + Const.LIBRARY;\n  }\n\n  // Generator of packets stubs\n  #initPacket(type, topic) {\n    switch (type) {\n      case 'hi':\n        return {\n          'hi': {\n            'id': this.getNextUniqueId(),\n            'ver': Const.VERSION,\n            'ua': this.#getUserAgent(),\n            'dev': this._deviceToken,\n            'lang': this._humanLanguage,\n            'platf': this._platform\n          }\n        };\n\n      case 'acc':\n        return {\n          'acc': {\n            'id': this.getNextUniqueId(),\n            'user': null,\n            'scheme': null,\n            'secret': null,\n            'login': false,\n            'tags': null,\n            'desc': {},\n            'cred': {}\n          }\n        };\n\n      case 'login':\n        return {\n          'login': {\n            'id': this.getNextUniqueId(),\n            'scheme': null,\n            'secret': null\n          }\n        };\n\n      case 'sub':\n        return {\n          'sub': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'set': {},\n            'get': {}\n          }\n        };\n\n      case 'leave':\n        return {\n          'leave': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'unsub': false\n          }\n        };\n\n      case 'pub':\n        return {\n          'pub': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'noecho': false,\n            'head': null,\n            'content': {}\n          }\n        };\n\n      case 'get':\n        return {\n          'get': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'what': null,\n            'desc': {},\n            'sub': {},\n            'data': {}\n          }\n        };\n\n      case 'set':\n        return {\n          'set': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'desc': {},\n            'sub': {},\n            'tags': []\n          }\n        };\n\n      case 'del':\n        return {\n          'del': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'what': null,\n            'delseq': null,\n            'user': null,\n            'hard': false\n          }\n        };\n\n      case 'note':\n        return {\n          'note': {\n            // no id by design\n            'topic': topic,\n            'what': null,\n            'seq': undefined // the server-side message id aknowledged as received or read\n          }\n        };\n\n      default:\n        throw new Error(`Unknown packet type requested: ${type}`);\n    }\n  }\n\n  // Cache management\n  #cachePut(type, name, obj) {\n    this._cache[type + ':' + name] = obj;\n  }\n  #cacheGet(type, name) {\n    return this._cache[type + ':' + name];\n  }\n  #cacheDel(type, name) {\n    delete this._cache[type + ':' + name];\n  }\n\n  // Enumerate all items in cache, call func for each item.\n  // Enumeration stops if func returns true.\n  #cacheMap(type, func, context) {\n    const key = type ? type + ':' : undefined;\n    for (let idx in this._cache) {\n      if (!key || idx.indexOf(key) == 0) {\n        if (func.call(context, this._cache[idx], idx)) {\n          break;\n        }\n      }\n    }\n  }\n\n  // Make limited cache management available to topic.\n  // Caching user.public only. Everything else is per-topic.\n  #attachCacheToTopic(topic) {\n    topic._tinode = this;\n\n    topic._cacheGetUser = (uid) => {\n      const pub = this.#cacheGet('user', uid);\n      if (pub) {\n        return {\n          user: uid,\n          public: mergeObj({}, pub)\n        };\n      }\n      return undefined;\n    };\n    topic._cachePutUser = (uid, user) => {\n      this.#cachePut('user', uid, mergeObj({}, user.public));\n    };\n    topic._cacheDelUser = (uid) => {\n      this.#cacheDel('user', uid);\n    };\n    topic._cachePutSelf = _ => {\n      this.#cachePut('topic', topic.name, topic);\n    };\n    topic._cacheDelSelf = _ => {\n      this.#cacheDel('topic', topic.name);\n    };\n  }\n\n  // On successful login save server-provided data.\n  #loginSuccessful(ctrl) {\n    if (!ctrl.params || !ctrl.params.user) {\n      return ctrl;\n    }\n    // This is a response to a successful login,\n    // extract UID and security token, save it in Tinode module\n    this._myUID = ctrl.params.user;\n    this._authenticated = (ctrl && ctrl.code >= 200 && ctrl.code < 300);\n    if (ctrl.params && ctrl.params.token && ctrl.params.expires) {\n      this._authToken = {\n        token: ctrl.params.token,\n        expires: ctrl.params.expires\n      };\n    } else {\n      this._authToken = null;\n    }\n\n    if (this.onLogin) {\n      this.onLogin(ctrl.code, ctrl.text);\n    }\n\n    return ctrl;\n  }\n\n  // Static methods.\n  /**\n   * Helper method to package account credential.\n   *\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string | Credential} meth - validation method or object with validation data.\n   * @param {string=} val - validation value (e.g. email or phone number).\n   * @param {Object=} params - validation parameters.\n   * @param {string=} resp - validation response.\n   *\n   * @returns {Array.<Credential>} array with a single credential or <code>null</code> if no valid credentials were given.\n   */\n  static credential(meth, val, params, resp) {\n    if (typeof meth == 'object') {\n      ({\n        val,\n        params,\n        resp,\n        meth\n      } = meth);\n    }\n    if (meth && (val || resp)) {\n      return [{\n        'meth': meth,\n        'val': val,\n        'resp': resp,\n        'params': params\n      }];\n    }\n    return null;\n  }\n\n  /**\n   * Determine topic type from topic's name: grp, p2p, me, fnd, sys.\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {string} One of <code>\"me\"</code>, <code>\"fnd\"</code>, <code>\"sys\"</code>, <code>\"grp\"</code>,\n   *    <code>\"p2p\"</code> or <code>undefined</code>.\n   */\n  static topicType(name) {\n    return Topic.topicType(name);\n  }\n\n  /**\n   * Check if the given topic name is a name of a 'me' topic.\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a 'me' topic, <code>false</code> otherwise.\n   */\n  static isMeTopicName(name) {\n    return Topic.isMeTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a group topic.\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a group topic, <code>false</code> otherwise.\n   */\n  static isGroupTopicName(name) {\n    return Topic.isGroupTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a p2p topic.\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p topic, <code>false</code> otherwise.\n   */\n  static isP2PTopicName(name) {\n    return Topic.isP2PTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a communication topic, i.e. P2P or group.\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p or group topic, <code>false</code> otherwise.\n   */\n  static isCommTopicName(name) {\n    return Topic.isCommTopicName(name);\n  }\n  /**\n   * Check if the topic name is a name of a new topic.\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a new topic, <code>false</code> otherwise.\n   */\n  static isNewGroupTopicName(name) {\n    return Topic.isNewGroupTopicName(name);\n  }\n  /**\n   * Check if the topic name is a name of a channel.\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a channel, <code>false</code> otherwise.\n   */\n  static isChannelTopicName(name) {\n    return Topic.isChannelTopicName(name);\n  }\n  /**\n   * Return information about the current version of this Tinode client library.\n   * @memberof Tinode\n   * @static\n   *\n   * @returns {string} semantic version of the library, e.g. <code>\"0.15.5-rc1\"</code>.\n   */\n  static getVersion() {\n    return Const.VERSION;\n  }\n  /**\n   * To use Tinode in a non browser context, supply WebSocket and XMLHttpRequest providers.\n   * @static\n   * @memberof Tinode\n   * @param wsProvider <code>WebSocket</code> provider, e.g. for nodeJS , <code>require('ws')</code>.\n   * @param xhrProvider <code>XMLHttpRequest</code> provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProviders(wsProvider, xhrProvider) {\n    WebSocketProvider = wsProvider;\n    XHRProvider = xhrProvider;\n\n    Connection.setNetworkProviders(WebSocketProvider, XHRProvider);\n    LargeFileHelper.setNetworkProvider(XHRProvider);\n  }\n  /**\n   * To use Tinode in a non browser context, supply <code>indexedDB</code> provider.\n   * @static\n   * @memberof Tinode\n   * @param idbProvider <code>indexedDB</code> provider, e.g. for nodeJS , <code>require('fake-indexeddb')</code>.\n   */\n  static setDatabaseProvider(idbProvider) {\n    IndexedDBProvider = idbProvider;\n\n    DBCache.setDatabaseProvider(IndexedDBProvider);\n  }\n  /**\n   * Return information about the current name and version of this Tinode library.\n   * @memberof Tinode\n   * @static\n   *\n   * @returns {string} the name of the library and it's version.\n   */\n  static getLibrary() {\n    return Const.LIBRARY;\n  }\n  /**\n   * Check if the given string represents <code>NULL</code> value as defined by Tinode (<code>'\\u2421'</code>).\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} str - string to check for <code>NULL</code> value.\n   *\n   * @returns {boolean} <code>true</code> if string represents <code>NULL</code> value, <code>false</code> otherwise.\n   */\n  static isNullValue(str) {\n    return str === Const.DEL_CHAR;\n  }\n  /**\n   * Check if the given URL string is a relative URL.\n   * Check for cases like:\n   *  <code>'http://example.com'</code>\n   *  <code>' http://example.com'</code>\n   *  <code>'//example.com/'</code>\n   *  <code>'http:example.com'</code>\n   *  <code>'http:/example.com'</code>\n   * @memberof Tinode\n   * @static\n   *\n   * @param {string} url - URL string to check.\n   *\n   * @returns {boolean} <code>true</code> if the URL is relative, <code>false</code> otherwise.\n   */\n  static isRelativeURL(url) {\n    return !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n  }\n\n  // Instance methods.\n\n  // Generates unique message IDs\n  getNextUniqueId() {\n    return (this._messageId != 0) ? '' + this._messageId++ : undefined;\n  };\n\n  /**\n   * Connect to the server.\n   * @memberof Tinode#\n   *\n   * @param {string} host_ - name of the host to connect to.\n   *\n   * @return {Promise} Promise resolved/rejected when the connection call completes:\n   *    <code>resolve()</code> is called without parameters, <code>reject()</code> receives the\n   *    <code>Error</code> as a single parameter.\n   */\n  connect(host_) {\n    let promise = new Promise((resolve, reject) => {\n      // Stored callbacks will be called when the response packet with this Id arrives\n      resolve()\n    });\n    return promise;\n  }\n\n  /**\n   * Attempt to reconnect to the server immediately.\n   * @memberof Tinode#\n   *\n   * @param {string} force - reconnect even if there is a connection already.\n   */\n  reconnect(force) {\n    this._connection.reconnect(force);\n  }\n\n  /**\n   * Disconnect from the server.\n   * @memberof Tinode#\n   */\n  disconnect() {\n    this._connection.disconnect();\n  }\n\n  /**\n   * Clear persistent cache: remove IndexedDB.\n   * @memberof Tinode#\n   * @return {Promise} Promise resolved/rejected when the operation is completed.\n   */\n  clearStorage() {\n    if (this._db.isReady()) {\n      return this._db.deleteDatabase();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Initialize persistent cache: create IndexedDB cache.\n   * @memberof Tinode#\n   * @return {Promise} Promise resolved/rejected when the operation is completed.\n   */\n  initStorage() {\n    if (!this._db.isReady()) {\n      return this._db.initDatabase();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Send a network probe message to make sure the connection is alive.\n   * @memberof Tinode#\n   */\n  networkProbe() {\n    this._connection.probe();\n  }\n\n  /**\n   * Check for live connection to server.\n   * @memberof Tinode#\n   *\n   * @returns {boolean} <code>true</code> if there is a live connection, <code>false</code> otherwise.\n   */\n  isConnected() {\n    return this._w_isConnected\n  }\n\n  /**\n   * Check if connection is authenticated (last login was successful).\n   * @memberof Tinode#\n   * @returns {boolean} <code>true</code> if authenticated, <code>false</code> otherwise.\n   */\n  isAuthenticated() {\n    return this._authenticated;\n  }\n\n  /**\n   * Add API key and auth token to the relative URL making it usable for getting data\n   * from the server in a simple <code>HTTP GET</code> request.\n   * @memberof Tinode#\n   *\n   * @param {string} URL - URL to wrap.\n   * @returns {string} URL with appended API key and token, if valid token is present.\n   */\n  authorizeURL(url) {\n    if (typeof url != 'string') {\n      return url;\n    }\n\n    if (Tinode.isRelativeURL(url)) {\n      // Fake base to make the relative URL parseable.\n      const base = 'scheme://host/';\n      const parsed = new URL(url, base);\n      if (this._apiKey) {\n        parsed.searchParams.append('apikey', this._apiKey);\n      }\n      if (this._authToken && this._authToken.token) {\n        parsed.searchParams.append('auth', 'token');\n        parsed.searchParams.append('secret', this._authToken.token);\n      }\n      // Convert back to string and strip fake base URL except for the root slash.\n      url = parsed.toString().substring(base.length - 1);\n    }\n    return url;\n  }\n\n  /**\n   * @typedef AccountParams\n   * @memberof Tinode\n   * @type {Object}\n   * @property {Tinode.DefAcs=} defacs - Default access parameters for user's <code>me</code> topic.\n   * @property {Object=} public - Public application-defined data exposed on <code>me</code> topic.\n   * @property {Object=} private - Private application-defined data accessible on <code>me</code> topic.\n   * @property {Object=} trusted - Trusted user data which can be set by a root user only.\n   * @property {Array.<string>} tags - array of string tags for user discovery.\n   * @property {string=} token - authentication token to use.\n   * @property {Array.<string>=} attachments - Array of references to out of band attachments used in account description.\n   */\n  /**\n   * @typedef DefAcs\n   * @memberof Tinode\n   * @type {Object}\n   * @property {string=} auth - Access mode for <code>me</code> for authenticated users.\n   * @property {string=} anon - Access mode for <code>me</code> for anonymous users.\n   */\n\n  /**\n   * Create or update an account.\n   * @memberof Tinode#\n   *\n   * @param {string} uid - User id to update\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> and <code>\"anonymous\"</code> are the currently supported schemes.\n   * @param {string} secret - Authentication secret, assumed to be already base64 encoded.\n   * @param {boolean=} login - Use new account to authenticate current session\n   * @param {Tinode.AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  account(uid, scheme, secret, login, params) {\n    const pkt = this.#initPacket('acc');\n    pkt.acc.user = uid;\n    pkt.acc.scheme = scheme;\n    pkt.acc.secret = secret;\n    // Log in to the new account using selected scheme\n    pkt.acc.login = login;\n\n    if (params) {\n      pkt.acc.desc.defacs = params.defacs;\n      pkt.acc.desc.public = params.public;\n      pkt.acc.desc.private = params.private;\n      pkt.acc.desc.trusted = params.trusted;\n\n      pkt.acc.tags = params.tags;\n      pkt.acc.cred = params.cred;\n\n      pkt.acc.token = params.token;\n\n      if (Array.isArray(params.attachments) && params.attachments.length > 0) {\n        pkt.extra = {\n          attachments: params.attachments.filter(ref => Tinode.isRelativeURL(ref))\n        };\n      }\n    }\n\n\n    return this.#w_send(pkt, pkt.acc.id);;\n  }\n\n  /**\n   * Create a new user. Wrapper for {@link Tinode#account}.\n   * @memberof Tinode#\n   *\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> is the only currently supported scheme.\n   * @param {string} secret - Authentication.\n   * @param {boolean=} login - Use new account to authenticate current session\n   * @param {Tinode.AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  createAccount(scheme, secret, login, params) {\n    let promise = this.account(Const.USER_NEW, scheme, secret, login, params);\n    if (login) {\n      promise = promise.then((ctrl) => {\n        return this.#loginSuccessful(ctrl);\n      });\n    }\n    return promise;\n  }\n\n  /**\n   * Create user with <code>'basic'</code> authentication scheme and immediately\n   * use it for authentication. Wrapper for {@link Tinode#account}.\n   * @memberof Tinode#\n   *\n   * @param {string} username - Login to use for the new account.\n   * @param {string} password - User's password.\n   * @param {Tinode.AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  createAccountBasic(username, password, params) {\n    // Make sure we are not using 'null' or 'undefined';\n    username = username || '';\n    password = password || '';\n    return this.createAccount('basic',\n      b64EncodeUnicode(username + ':' + password), true, params);\n  }\n\n  /**\n   * Update user's credentials for <code>'basic'</code> authentication scheme. Wrapper for {@link Tinode#account}.\n   * @memberof Tinode#\n   *\n   * @param {string} uid - User ID to update.\n   * @param {string} username - Login to use for the new account.\n   * @param {string} password - User's password.\n   * @param {Tinode.AccountParams=} params - data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  updateAccountBasic(uid, username, password, params) {\n    // Make sure we are not using 'null' or 'undefined';\n    username = username || '';\n    password = password || '';\n    return this.account(uid, 'basic',\n      b64EncodeUnicode(username + ':' + password), false, params);\n  }\n\n  /**\n   * Send handshake to the server.\n   * @memberof Tinode#\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  hello() {\n    const pkt = this.#initPacket('hi');\n\n    return this.#w_send(pkt, pkt.hi.id)\n      .then((ctrl) => {\n        // Reset backoff counter on successful connection.\n        // this._connection.backoffReset();\n\n        // Server response contains server protocol version, build, constraints,\n        // session ID for long polling. Save them.\n        if (ctrl.params) {\n          this._serverInfo = ctrl.params;\n        }\n\n        if (this.onConnect) {\n          this.onConnect();\n        }\n\n        return ctrl;\n      }).catch((err) => {\n        this.logger(\"hello\", err)\n        // this._connection.reconnect(true);\n\n        if (this.onDisconnect) {\n          this.onDisconnect(err);\n        }\n      });\n  }\n\n  /**\n   * Set or refresh the push notifications/device token. If the client is connected,\n   * the deviceToken can be sent to the server.\n   *\n   * @memberof Tinode#\n   * @param {string} dt - token obtained from the provider or <code>false</code>,\n   *    <code>null</code> or <code>undefined</code> to clear the token.\n   *\n   * @returns <code>true</code> if attempt was made to send the update to the server.\n   */\n  setDeviceToken(dt) {\n    let sent = false;\n    // Convert any falsish value to null.\n    dt = dt || null;\n    if (dt != this._deviceToken) {\n      this._deviceToken = dt;\n      if (this.isConnected() && this.isAuthenticated()) {\n        this.#w_send({\n          'hi': {\n            'dev': dt || Tinode.DEL_CHAR\n          }\n        });\n        this.#send({\n          'hi': {\n            'dev': dt || Tinode.DEL_CHAR\n          }\n        });\n        sent = true;\n      }\n    }\n    return sent;\n  }\n\n  /**\n   * @typedef Credential\n   * @type {Object}\n   * @property {string} meth - validation method.\n   * @property {string} val - value to validate (e.g. email or phone number).\n   * @property {string} resp - validation response.\n   * @property {Object} params - validation parameters.\n   */\n  /**\n   * Authenticate current session.\n   * @memberof Tinode#\n   *\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> is the only currently supported scheme.\n   * @param {string} secret - Authentication secret, assumed to be already base64 encoded.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  login(scheme, secret, cred) {\n    const pkt = this.#initPacket('login');\n    pkt.login.scheme = scheme;\n    pkt.login.secret = secret;\n    pkt.login.cred = cred;\n\n\n    return this.#w_send(pkt, pkt.login.id)\n      .then((ctrl) => {\n        return this.#loginSuccessful(ctrl);\n      });\n  }\n\n  /**\n   * Wrapper for {@link Tinode#login} with basic authentication\n   * @memberof Tinode#\n   *\n   * @param {string} uname - User name.\n   * @param {string} password  - Password.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  loginBasic(uname, password, cred) {\n    return this.login('basic', b64EncodeUnicode(uname + ':' + password), cred)\n      .then((ctrl) => {\n        this._login = uname;\n        return ctrl;\n      });\n  }\n\n  /**\n   * Wrapper for {@link Tinode#login} with token authentication\n   * @memberof Tinode#\n   *\n   * @param {string} token - Token received in response to earlier login.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  loginToken(token, cred) {\n    return this.login('token', token, cred);\n  }\n\n  /**\n   * Send a request for resetting an authentication secret.\n   * @memberof Tinode#\n   *\n   * @param {string} scheme - authentication scheme to reset.\n   * @param {string} method - method to use for resetting the secret, such as \"email\" or \"tel\".\n   * @param {string} value - value of the credential to use, a specific email address or a phone number.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving the server reply.\n   */\n  requestResetAuthSecret(scheme, method, value) {\n    return this.login('reset', b64EncodeUnicode(scheme + ':' + method + ':' + value));\n  }\n\n  /**\n   * @typedef AuthToken\n   * @memberof Tinode\n   * @type {Object}\n   * @property {string} token - Token value.\n   * @property {Date} expires - Token expiration time.\n   */\n  /**\n   * Get stored authentication token.\n   * @memberof Tinode#\n   *\n   * @returns {Tinode.AuthToken} authentication token.\n   */\n  getAuthToken() {\n    if (this._authToken && (this._authToken.expires.getTime() > Date.now())) {\n      return this._authToken;\n    } else {\n      this._authToken = null;\n    }\n    return null;\n  }\n\n  /**\n   * Application may provide a saved authentication token.\n   * @memberof Tinode#\n   *\n   * @param {Tinode.AuthToken} token - authentication token.\n   */\n  setAuthToken(token) {\n    this._authToken = token;\n  }\n\n  /**\n   * @typedef SetParams\n   * @type {Object}\n   * @memberof Tinode\n   * @property {Tinode.SetDesc=} desc - Topic initialization parameters when creating a new topic or a new subscription.\n   * @property {Tinode.SetSub=} sub - Subscription initialization parameters.\n   * @property {Array.<string>=} attachments - URLs of out of band attachments used in parameters.\n   */\n  /**\n   * @typedef SetDesc\n   * @type {Object}\n   * @memberof Tinode\n   * @property {Tinode.DefAcs=} defacs - Default access mode.\n   * @property {Object=} public - Free-form topic description, publically accessible.\n   * @property {Object=} private - Free-form topic description accessible only to the owner.\n   * @property {Object=} trusted - Trusted user data which can be set by a root user only.\n   */\n  /**\n   * @typedef SetSub\n   * @type {Object}\n   * @memberof Tinode\n   * @property {string=} user - UID of the user affected by the request. Default (empty) - current user.\n   * @property {string=} mode - User access mode, either requested or assigned dependent on context.\n   */\n  /**\n   * Parameters passed to {@link Tinode#subscribe}.\n   *\n   * @typedef SubscriptionParams\n   * @type {Object}\n   * @memberof Tinode\n   * @property {Tinode.SetParams=} set - Parameters used to initialize topic\n   * @property {Tinode.GetQuery=} get - Query for fetching data from topic.\n   */\n\n  /**\n   * Send a topic subscription request.\n   * @memberof Tinode#\n   *\n   * @param {string} topic - Name of the topic to subscribe to.\n   * @param {Tinode.GetQuery=} getParams - Optional subscription metadata query\n   * @param {Tinode.SetParams=} setParams - Optional initialization parameters\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  subscribe(topicName, getParams, setParams) {\n    const pkt = this.#initPacket('sub', topicName)\n    if (!topicName) {\n      topicName = Const.TOPIC_NEW;\n    }\n\n    pkt.sub.get = getParams;\n\n    if (setParams) {\n      if (setParams.sub) {\n        pkt.sub.set.sub = setParams.sub;\n      }\n\n      if (setParams.desc) {\n        const desc = setParams.desc;\n        if (Tinode.isNewGroupTopicName(topicName)) {\n          // Full set.desc params are used for new topics only\n          pkt.sub.set.desc = desc;\n        } else if (Tinode.isP2PTopicName(topicName) && desc.defacs) {\n          // Use optional default permissions only.\n          pkt.sub.set.desc = {\n            defacs: desc.defacs\n          };\n        }\n      }\n\n      // See if external objects were used in topic description.\n      if (Array.isArray(setParams.attachments) && setParams.attachments.length > 0) {\n        pkt.extra = {\n          attachments: setParams.attachments.filter(ref => Tinode.isRelativeURL(ref))\n        };\n      }\n\n      if (setParams.tags) {\n        pkt.sub.set.tags = setParams.tags;\n      }\n    }\n\n    return this.#w_send(pkt, pkt.sub.id);\n  }\n\n  /**\n   * Detach and optionally unsubscribe from the topic\n   * @memberof Tinode#\n   *\n   * @param {string} topic - Topic to detach from.\n   * @param {boolean} unsub - If <code>true</code>, detach and unsubscribe, otherwise just detach.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  leave(topic, unsub) {\n    const pkt = this.#initPacket('leave', topic);\n    pkt.leave.unsub = unsub;\n\n    return this.#w_send(pkt, pkt.leave.id);\n    // return this.#send(pkt, pkt.leave.id);\n  }\n\n  /**\n   * Create message draft without sending it to the server.\n   * @memberof Tinode#\n   *\n   * @param {string} topic - Name of the topic to publish to.\n   * @param {Object} content - Payload to publish.\n   * @param {boolean=} noEcho - If <code>true</code>, tell the server not to echo the message to the original session.\n   *\n   * @returns {Object} new message which can be sent to the server or otherwise used.\n   */\n  createMessage(topic, content, noEcho) {\n    const pkt = this.#initPacket('pub', topic);\n\n    let dft = typeof content == 'string' ? Drafty.parse(content) : content;\n    if (dft && !Drafty.isPlainText(dft)) {\n      pkt.pub.head = {\n        mime: Drafty.getContentType()\n      };\n      content = dft;\n    }\n    pkt.pub.noecho = noEcho;\n    pkt.pub.content = content;\n\n    return pkt.pub;\n  }\n\n  /**\n   * Publish {data} message to topic.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to publish to.\n   * @param {Object} content - Payload to publish.\n   * @param {boolean=} noEcho - If <code>true</code>, tell the server not to echo the message to the original session.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  publish(topicName, content, noEcho) {\n    return this.publishMessage(\n      this.createMessage(topicName, content, noEcho)\n    );\n  }\n\n  /**\n   * Publish message to topic. The message should be created by {@link Tinode#createMessage}.\n   * @memberof Tinode#\n   *\n   * @param {Object} pub - Message to publish.\n   * @param {Array.<string>=} attachments - array of URLs with attachments.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  publishMessage(pub, attachments) {\n    // Make a shallow copy. Needed in order to clear locally-assigned temp values;\n    pub = Object.assign({}, pub);\n    pub.seq = undefined;\n    pub.from = undefined;\n    pub.ts = undefined;\n    const msg = {\n      pub: pub,\n    };\n    if (attachments) {\n      msg.extra = {\n        attachments: attachments.filter(ref => Tinode.isRelativeURL(ref))\n      };\n    }\n    return this.#w_send(msg, pub.id);\n    // return this.#send(msg, pub.id);\n  }\n\n  /**\n   * Out of band notification: notify topic that an external (push) notification was recived by the client.\n   * @memberof Tinode#\n   *\n   * @param {object} data - notification payload.\n   * @param {string} data.what - notification type, 'msg', 'read', 'sub'.\n   * @param {string} data.topic - name of the updated topic.\n   * @param {number=} data.seq - seq ID of the affected message.\n   * @param {string=} data.xfrom - UID of the sender.\n   * @param {object=} data.given - new subscription 'given', e.g. 'ASWP...'.\n   * @param {object=} data.want - new subscription 'want', e.g. 'RWJ...'.\n   */\n  oobNotification(data) {\n    switch (data.what) {\n      case 'msg':\n        const topic = this.#cacheGet('topic', data.topic);\n        if (topic && topic.isChannelType()) {\n          topic._updateReceived(data.seq, 'fake-uid');\n          this.getMeTopic()._refreshContact('msg', topic);\n        }\n        break;\n      case 'read':\n        this.getMeTopic()._routePres({\n          what: 'read',\n          seq: data.seq\n        });\n        break;\n      case 'sub':\n        let mode = {\n          given: data.modeGiven,\n          want: data.modeWant\n        };\n        let acs = new AccessMode(mode);\n        let pres = (!acs.mode || acs.mode == AccessMode._NONE) ?\n          // Subscription deleted.\n          {\n            what: 'gone',\n            src: data.topic\n          } :\n          // New subscription or subscription updated.\n          {\n            what: 'acs',\n            src: data.topic,\n            dacs: mode\n          };\n        this.getMeTopic()._routePres(pres);\n        break;\n      default:\n        this.logger(\"Unknown push type ignored\", data.what);\n    }\n  }\n\n  /**\n   * @typedef GetQuery\n   * @type {Object}\n   * @memberof Tinode\n   * @property {Tinode.GetOptsType=} desc - If provided (even if empty), fetch topic description.\n   * @property {Tinode.GetOptsType=} sub - If provided (even if empty), fetch topic subscriptions.\n   * @property {Tinode.GetDataType=} data - If provided (even if empty), get messages.\n   */\n\n  /**\n   * @typedef GetOptsType\n   * @type {Object}\n   * @memberof Tinode\n   * @property {Date=} ims - \"If modified since\", fetch data only it was was modified since stated date.\n   * @property {number=} limit - Maximum number of results to return. Ignored when querying topic description.\n   */\n\n  /**\n   * @typedef GetDataType\n   * @type {Object}\n   * @memberof Tinode\n   * @property {number=} since - Load messages with seq id equal or greater than this value.\n   * @property {number=} before - Load messages with seq id lower than this number.\n   * @property {number=} limit - Maximum number of results to return.\n   */\n\n  /**\n   * Request topic metadata\n   * @memberof Tinode#\n   *\n   * @param {string} topic - Name of the topic to query.\n   * @param {Tinode.GetQuery} params - Parameters of the query. Use {@link Tinode.MetaGetBuilder} to generate.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  getMeta(topic, params) {\n    const pkt = this.#initPacket('get', topic);\n\n    pkt.get = mergeObj(pkt.get, params);\n\n\n\n    return this.#w_send(pkt, pkt.get.id);\n  }\n\n  /**\n   * Update topic's metadata: description, subscribtions.\n   * @memberof Tinode#\n   *\n   * @param {string} topic - Topic to update.\n   * @param {Tinode.SetParams} params - topic metadata to update.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  setMeta(topic, params) {\n    const pkt = this.#initPacket('set', topic);\n    const what = [];\n\n    if (params) {\n      ['desc', 'sub', 'tags', 'cred'].forEach(function(key) {\n        if (params.hasOwnProperty(key)) {\n          what.push(key);\n          pkt.set[key] = params[key];\n        }\n      });\n\n      if (Array.isArray(params.attachments) && params.attachments.length > 0) {\n        pkt.extra = {\n          attachments: params.attachments.filter(ref => Tinode.isRelativeURL(ref))\n        };\n      }\n    }\n\n    if (what.length == 0) {\n      return Promise.reject(new Error(\"Invalid {set} parameters\"));\n    }\n    this.#w_send(pkt, pkt.set.id);\n\n    return this.#send(pkt, pkt.set.id);\n  }\n\n  /**\n   * Range of message IDs to delete.\n   *\n   * @typedef DelRange\n   * @type {Object}\n   * @memberof Tinode\n   * @property {number} low - low end of the range, inclusive (closed).\n   * @property {number=} hi - high end of the range, exclusive (open).\n   */\n  /**\n   * Delete some or all messages in a topic.\n   * @memberof Tinode#\n   *\n   * @param {string} topic - Topic name to delete messages from.\n   * @param {Tinode.DelRange[]} list - Ranges of message IDs to delete.\n   * @param {boolean=} hard - Hard or soft delete\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delMessages(topic, ranges, hard) {\n    const pkt = this.#initPacket('del', topic);\n\n    pkt.del.what = 'msg';\n    pkt.del.delseq = ranges;\n    pkt.del.hard = hard;\n\n\n    this.#w_send(pkt, pkt.del.id);\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete the topic alltogether. Requires Owner permission.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to deletegetTopic\n   * @param {boolean} hard - hard-delete topic.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delTopic(topicName, hard) {\n    const pkt = this.#initPacket('del', topicName);\n    pkt.del.what = 'topic';\n    pkt.del.hard = hard;\n    this.#w_send(pkt, pkt.del.id);\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete subscription. Requires Share permission.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to delete\n   * @param {string} user - User ID to remove.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delSubscription(topicName, user) {\n    const pkt = this.#initPacket('del', topicName);\n    pkt.del.what = 'sub';\n    pkt.del.user = user;\n\n    this.#w_send(pkt, pkt.del.id);\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete credential. Always sent on <code>'me'</code> topic.\n   * @memberof Tinode#\n   *\n   * @param {string} method - validation method such as <code>'email'</code> or <code>'tel'</code>.\n   * @param {string} value - validation value, i.e. <code>'alice@example.com'</code>.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCredential(method, value) {\n    const pkt = this.#initPacket('del', Const.TOPIC_ME);\n    pkt.del.what = 'cred';\n    pkt.del.cred = {\n      meth: method,\n      val: value\n    };\n\n    this.#w_send(pkt, pkt.del.id);\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Request to delete account of the current user.\n   * @memberof Tinode#\n   *\n   * @param {boolean} hard - hard-delete user.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCurrentUser(hard) {\n    const pkt = this.#initPacket('del', null);\n    pkt.del.what = 'user';\n    pkt.del.hard = hard;\n\n    this.#w_send(pkt, pkt.del.id);\n    return this.#send(pkt, pkt.del.id).then((ctrl) => {\n      this._myUID = null;\n    });\n  }\n\n  /**\n   * Notify server that a message or messages were read or received. Does NOT return promise.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic where the mesage is being aknowledged.\n   * @param {string} what - Action being aknowledged, either <code>\"read\"</code> or <code>\"recv\"</code>.\n   * @param {number} seq - Maximum id of the message being acknowledged.\n   */\n  note(topicName, what, seq) {\n    if (seq <= 0 || seq >= Const.LOCAL_SEQID) {\n      throw new Error(`Invalid message id ${seq}`);\n    }\n\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.what = what;\n    pkt.note.seq = seq;\n    this.#w_send(pkt);\n    // this.#send(pkt);\n  }\n\n  /**\n   * Broadcast a key-press notification to topic subscribers. Used to show\n   * typing notifications \"user X is typing...\".\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to broadcast to.\n   */\n  noteKeyPress(topicName) {\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.what = 'kp';\n    this.#w_send(pkt);\n  }\n\n  /**\n   * Get a named topic, either pull it from cache or create a new instance.\n   * There is a single instance of topic for each name.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to get.\n   * @returns {Tinode.Topic} Requested or newly created topic or <code>undefined</code> if topic name is invalid.\n   */\n  getTopic(topicName) {\n    let topic = this.#cacheGet('topic', topicName);\n    if (!topic && topicName) {\n      if (topicName == Const.TOPIC_ME) {\n        topic = new TopicMe();\n      } else if (topicName == Const.TOPIC_FND) {\n        topic = new TopicFnd();\n      } else {\n        topic = new Topic(topicName);\n      }\n      // Cache management.\n      this.#attachCacheToTopic(topic);\n      topic._cachePutSelf();\n      // Don't save to DB here: a record will be added when the topic is subscribed.\n    }\n    return topic;\n  }\n\n  /**\n   * Get a named topic from cache.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to get.\n   * @returns {Tinode.Topic} Requested topic or <code>undefined</code> if topic is not found in cache.\n   */\n  cacheGetTopic(topicName) {\n    return this.#cacheGet('topic', topicName);\n  }\n\n  /**\n   * Remove named topic from cache.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to remove from cache.\n   */\n  cacheRemTopic(topicName) {\n    this.#cacheDel('topic', topicName);\n  }\n\n  /**\n   * Iterate over cached topics.\n   * @memberof Tinode#\n   *\n   * @param {Function} func - callback to call for each topic.\n   * @param {Object} context - 'this' inside the 'func'.\n   */\n  mapTopics(func, context) {\n    this.#cacheMap('topic', func, context);\n  }\n\n  /**\n   * Check if named topic is already present in cache.\n   * @memberof Tinode#\n   *\n   * @param {string} topicName - Name of the topic to check.\n   * @returns {boolean} true if topic is found in cache, false otherwise.\n   */\n  isTopicCached(topicName) {\n    return !!this.#cacheGet('topic', topicName);\n  }\n\n  /**\n   * Generate unique name like <code>'new123456'</code> suitable for creating a new group topic.\n   * @memberof Tinode#\n   *\n   * @param {boolean} isChan - if the topic is channel-enabled.\n   * @returns {string} name which can be used for creating a new group topic.\n   */\n  newGroupTopicName(isChan) {\n    return (isChan ? Const.TOPIC_NEW_CHAN : Const.TOPIC_NEW) + this.getNextUniqueId();\n  }\n\n  /**\n   * Instantiate <code>'me'</code> topic or get it from cache.\n   * @memberof Tinode#\n   *\n   * @returns {Tinode.TopicMe} Instance of <code>'me'</code> topic.\n   */\n  getMeTopic() {\n    return this.getTopic(Const.TOPIC_ME);\n  }\n\n  /**\n   * Instantiate <code>'fnd'</code> (find) topic or get it from cache.\n   * @memberof Tinode#\n   *\n   * @returns {Tinode.Topic} Instance of <code>'fnd'</code> topic.\n   */\n  getFndTopic() {\n    return this.getTopic(Const.TOPIC_FND);\n  }\n\n  /**\n   * Create a new {@link LargeFileHelper} instance\n   * @memberof Tinode#\n   *\n   * @returns {Tinode.LargeFileHelper} instance of a {@link Tinode.LargeFileHelper}.\n   */\n  getLargeFileHelper() {\n    return new LargeFileHelper(this, Const.PROTOCOL_VERSION);\n  }\n\n  /**\n   * Get the UID of the the current authenticated user.\n   * @memberof Tinode#\n   * @returns {string} UID of the current user or <code>undefined</code> if the session is not yet authenticated or if there is no session.\n   */\n  getCurrentUserID() {\n    return this._myUID;\n  }\n\n  /**\n   * Check if the given user ID is equal to the current user's UID.\n   * @memberof Tinode#\n   * @param {string} uid - UID to check.\n   * @returns {boolean} true if the given UID belongs to the current logged in user.\n   */\n  isMe(uid) {\n    return this._myUID === uid;\n  }\n\n  /**\n   * Get login used for last successful authentication.\n   * @memberof Tinode#\n   * @returns {string} login last used successfully or <code>undefined</code>.\n   */\n  getCurrentLogin() {\n    return this._login;\n  }\n\n  /**\n   * Return information about the server: protocol version and build timestamp.\n   * @memberof Tinode#\n   * @returns {Object} build and version of the server or <code>null</code> if there is no connection or if the first server response has not been received yet.\n   */\n  getServerInfo() {\n    return this._serverInfo;\n  }\n\n  /**\n   * Report a topic for abuse. Wrapper for {@link Tinode#publish}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} action - the only supported action is 'report'.\n   * @param {string} target - name of the topic being reported.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  report(action, target) {\n    return this.publish(Const.TOPIC_SYS, Drafty.attachJSON(null, {\n      'action': action,\n      'target': target\n    }));\n  }\n\n  /**\n   * Return server-provided configuration value (long integer).\n   * @memberof Tinode#\n   * @param {string} name of the value to return\n   * @param {Object} defaultValue to return in case server limit is not set or not found.\n   * @returns {number} named value.\n   */\n  getServerLimit(name, defaultValue) {\n    return (this._serverInfo ? this._serverInfo[name] : null) || defaultValue;\n  }\n\n  /**\n   * Toggle console logging. Logging is off by default.\n   * @memberof Tinode#\n   * @param {boolean} enabled - Set to <code>true</code> to enable logging to console.\n   * @param {boolean} trimLongStrings - Set to <code>true</code> to trim long strings.\n   */\n  enableLogging(enabled, trimLongStrings) {\n    this._loggingEnabled = enabled;\n    this._trimLongStrings = enabled && trimLongStrings;\n  }\n\n  /**\n   * Set UI language to report to the server. Must be called before <code>'hi'</code> is sent, otherwise it will not be used.\n   * @memberof Tinode#\n   *\n   * @param {string} hl - human (UI) language, like <code>\"en_US\"</code> or <code>\"zh-Hans\"</code>.\n   */\n  setHumanLanguage(hl) {\n    if (hl) {\n      this._humanLanguage = hl;\n    }\n  }\n\n  /**\n   * Check if given topic is online.\n   * @memberof Tinode#\n   *\n   * @param {string} name of the topic to test.\n   * @returns {boolean} true if topic is online, false otherwise.\n   */\n  isTopicOnline(name) {\n    const topic = this.#cacheGet('topic', name);\n    return topic && topic.online;\n  }\n\n  /**\n   * Get access mode for the given contact.\n   * @memberof Tinode#\n   *\n   * @param {string} name of the topic to query.\n   * @returns {AccessMode} access mode if topic is found, null otherwise.\n   */\n  getTopicAccessMode(name) {\n    const topic = this.#cacheGet('topic', name);\n    return topic ? topic.acs : null;\n  }\n\n  /**\n   * Include message ID into all subsequest messages to server instructin it to send aknowledgemens.\n   * Required for promises to function. Default is <code>\"on\"</code>.\n   * @memberof Tinode#\n   *\n   * @param {boolean} status - Turn aknowledgemens on or off.\n   * @deprecated\n   */\n  wantAkn(status) {\n    if (status) {\n      this._messageId = Math.floor((Math.random() * 0xFFFFFF) + 0xFFFFFF);\n    } else {\n      this._messageId = 0;\n    }\n  }\n\n  // Callbacks:\n  /**\n   * Callback to report when the websocket is opened. The callback has no parameters.\n   * @memberof Tinode#\n   * @type {Tinode.onWebsocketOpen}\n   */\n  onWebsocketOpen = undefined;\n\n  /**\n   * @typedef Tinode.ServerParams\n   * @memberof Tinode\n   * @type {Object}\n   * @property {string} ver - Server version\n   * @property {string} build - Server build\n   * @property {string=} sid - Session ID, long polling connections only.\n   */\n\n  /**\n   * @callback Tinode.onConnect\n   * @param {number} code - Result code\n   * @param {string} text - Text epxplaining the completion, i.e \"OK\" or an error message.\n   * @param {Tinode.ServerParams} params - Parameters returned by the server.\n   */\n  /**\n   * Callback to report when connection with Tinode server is established.\n   * @memberof Tinode#\n   * @type {Tinode.onConnect}\n   */\n  onConnect = undefined;\n\n  /**\n   * Callback to report when connection is lost. The callback has no parameters.\n   * @memberof Tinode#\n   * @type {Tinode.onDisconnect}\n   */\n  onDisconnect = undefined;\n\n  /**\n   * @callback Tinode.onLogin\n   * @param {number} code - NUmeric completion code, same as HTTP status codes.\n   * @param {string} text - Explanation of the completion code.\n   */\n  /**\n   * Callback to report login completion.\n   * @memberof Tinode#\n   * @type {Tinode.onLogin}\n   */\n  onLogin = undefined;\n\n  /**\n   * Callback to receive <code>{ctrl}</code> (control) messages.\n   * @memberof Tinode#\n   * @type {Tinode.onCtrlMessage}\n   */\n  onCtrlMessage = undefined;\n\n  /**\n   * Callback to recieve <code>{data}</code> (content) messages.\n   * @memberof Tinode#\n   * @type {Tinode.onDataMessage}\n   */\n  onDataMessage = undefined;\n\n  /**\n   * Callback to receive <code>{pres}</code> (presence) messages.\n   * @memberof Tinode#\n   * @type {Tinode.onPresMessage}\n   */\n  onPresMessage = undefined;\n\n  /**\n   * Callback to receive all messages as objects.\n   * @memberof Tinode#\n   * @type {Tinode.onMessage}\n   */\n  onMessage = undefined;\n\n  /**\n   * Callback to receive all messages as unparsed text.\n   * @memberof Tinode#\n   * @type {Tinode.onRawMessage}\n   */\n  onRawMessage = undefined;\n\n  /**\n   * Callback to receive server responses to network probes. See {@link Tinode#networkProbe}\n   * @memberof Tinode#\n   * @type {Tinode.onNetworkProbe}\n   */\n  onNetworkProbe = undefined;\n\n  /**\n   * Callback to be notified when exponential backoff is iterating.\n   * @memberof Tinode#\n   * @type {Tinode.onAutoreconnectIteration}\n   */\n  onAutoreconnectIteration = undefined;\n};\n\n// Exported constants\nTinode.MESSAGE_STATUS_NONE = Const.MESSAGE_STATUS_NONE;\nTinode.MESSAGE_STATUS_QUEUED = Const.MESSAGE_STATUS_QUEUED;\nTinode.MESSAGE_STATUS_SENDING = Const.MESSAGE_STATUS_SENDING;\nTinode.MESSAGE_STATUS_FAILED = Const.MESSAGE_STATUS_FAILED;\nTinode.MESSAGE_STATUS_SENT = Const.MESSAGE_STATUS_SENT;\nTinode.MESSAGE_STATUS_RECEIVED = Const.MESSAGE_STATUS_RECEIVED;\nTinode.MESSAGE_STATUS_READ = Const.MESSAGE_STATUS_READ;\nTinode.MESSAGE_STATUS_TO_ME = Const.MESSAGE_STATUS_TO_ME;\nTinode.MESSAGE_STATUS_DEL_RANGE = Const.MESSAGE_STATUS_DEL_RANGE;\n\n// Unicode [del] symbol.\nTinode.DEL_CHAR = Const.DEL_CHAR;\n\n// Names of keys to server-provided configuration limits.\nTinode.MAX_MESSAGE_SIZE = 'maxMessageSize';\nTinode.MAX_SUBSCRIBER_COUNT = 'maxSubscriberCount';\nTinode.MAX_TAG_COUNT = 'maxTagCount';\nTinode.MAX_FILE_UPLOAD_SIZE = 'maxFileUploadSize';\n"],"names":["AccessMode","constructor","acs","given","decode","want","mode","str","_BITMASK","_NONE","bitmask","_JOIN","_READ","_WRITE","_PRES","_APPROVE","_SHARE","_DELETE","_OWNER","m0","i","length","bit","charAt","toUpperCase","encode","val","_INVALID","res","update","upd","action","val0","parts","split","diff","a1","a2","toString","jsonHelper","setMode","m","updateMode","u","getMode","setGiven","g","updateGiven","getGiven","setWant","w","updateWant","getWant","getMissing","getExcessive","updateAll","isOwner","side","isPresencer","isMuted","isJoiner","isReader","isWriter","isApprover","isAdmin","isSharer","isDeleter","flag","includes","Error","CBuffer","compare_","unique_","undefined","a","b","getAt","at","buffer","getLast","put","insert","arguments","Array","isArray","idx","delAt","r","splice","delRange","since","before","reset","forEach","callback","startIdx","beforeIdx","context","call","find","elem","nearest","filter","count","arr","exact","start","end","pivot","found","package_version","PROTOCOL_VERSION","VERSION","LIBRARY","TOPIC_NEW","TOPIC_NEW_CHAN","TOPIC_ME","TOPIC_FND","TOPIC_SYS","TOPIC_CHAN","TOPIC_GRP","TOPIC_P2P","USER_NEW","LOCAL_SEQID","MESSAGE_STATUS_NONE","MESSAGE_STATUS_QUEUED","MESSAGE_STATUS_SENDING","MESSAGE_STATUS_FAILED","MESSAGE_STATUS_SENT","MESSAGE_STATUS_RECEIVED","MESSAGE_STATUS_READ","MESSAGE_STATUS_TO_ME","MESSAGE_STATUS_DEL_RANGE","EXPIRE_PROMISES_TIMEOUT","EXPIRE_PROMISES_PERIOD","DEFAULT_MESSAGES_PAGE","DEL_CHAR","jsonParseHelper","WebSocketProvider","XHRProvider","NETWORK_ERROR","NETWORK_ERROR_TEXT","NETWORK_USER","NETWORK_USER_TEXT","_BOFF_BASE","_BOFF_MAX_ITER","_BOFF_JITTER","makeBaseUrl","host","protocol","version","apiKey","url","Connection","config","version_","autoreconnect_","secure","autoreconnect","transport","initialized","setNetworkProviders","wsProvider","xhrProvider","logger","l","connect","host_","force","Promise","reject","reconnect","disconnect","sendText","msg","isConnected","probe","backoffReset","clearTimeout","timeout","Math","pow","random","onAutoreconnectIteration","setTimeout","_","prom","catch","XDR_UNSENT","XDR_OPENED","XDR_HEADERS_RECEIVED","XDR_LOADING","XDR_DONE","_lpURL","_poller","_sender","lp_sender","url_","sender","onreadystatechange","evt","readyState","status","open","lp_poller","resolve","poller","promiseCompleted","pkt","JSON","parse","responseText","ctrl","params","sid","send","onOpen","onMessage","onDisconnect","code","text","abort","err","OPEN","close","conn","onerror","onopen","onclose","onmessage","data","DB_VERSION","DB_NAME","IDBProvider","DB","onError","initDatabase","req","onsuccess","event","db","target","result","disabled","error","onupgradeneeded","createObjectStore","keyPath","deleteDatabase","onblocked","isReady","updTopic","topic","trx","transaction","oncomplete","objectStore","get","name","commit","markTopicAsDeleted","_deleted","remTopic","delete","IDBKeyRange","only","bound","Number","MAX_SAFE_INTEGER","mapTopics","deserializeTopic","src","updUser","uid","pub","public","remUser","mapUsers","getUser","user","updSubscription","topicName","sub","mapSubscriptions","getAll","addMessage","add","updMessageStatus","seq","_status","remMessages","from","to","range","readMessages","query","limit","openCursor","cursor","value","push","continue","setDatabaseProvider","idbProvider","source","f","hasOwnProperty","tags","_tags","setAccessMode","read","unread","max","dst","getAccessMode","fields","MAX_FORM_ELEMENTS","MAX_PREVIEW_ATTACHMENTS","MAX_PREVIEW_DATA_SIZE","JSON_MIME_TYPE","DRAFTY_MIME_TYPE","ALLOWED_ENT_FIELDS","INLINE_STYLES","FMT_WEIGHT","ENTITY_TYPES","dataName","pack","test","re","slice","HTML_TAGS","AU","isVoid","BN","BR","CO","DL","EM","EX","FM","HD","HL","HT","IM","LN","MN","RW","QQ","ST","base64toObjectUrl","b64","contentType","bin","atob","buf","ArrayBuffer","Uint8Array","charCodeAt","URL","createObjectURL","Blob","type","message","base64toDataUrl","DECORATORS","props","href","id","act","ref","mime","Drafty","duration","size","tmpPreviewUrl","_tempPreview","previewUrl","downloadUrl","width","height","title","alt","txt","fmt","ent","init","plainText","content","lines","entityMap","entityIndex","blx","line","spans","entities","tag","concat","spannify","block","sort","toSpanTree","chunks","chunkify","drafty","draftify","extractEntities","ranges","entity","index","unique","tp","offset","len","key","map","s","append","first","second","insertImage","imageDesc","ex","preview","filename","refurl","urlPromise","_processing","then","insertAudio","audioDesc","quote","header","body","appendLineBreak","mention","appendLink","linkData","appendImage","appendAudio","attachFile","attachmentDesc","wrapInto","style","wrapAsForm","insertButton","actionType","actionValue","refUrl","indexOf","appendButton","attachJSON","UNSAFE_toHTML","doc","tree","draftyToTree","htmlFormatter","values","join","treeBottomUp","format","original","formatter","shorten","light","shortenTree","lightEntity","treeToDrafty","forwardedContent","rmMention","node","parent","treeTopDown","lTrim","replyContent","convMNnQQnBR","startsWith","children","attachmentsToEnd","forwarding","toPlainText","isPlainText","isValid","txt_type","hasAttachments","attachments","hasEntities","sanitizeEntities","copyEntData","getDownloadUrl","entData","isProcessing","getPreviewUrl","getEntitySize","getEntityMimeType","tagName","attrValue","getContentType","span","chunk","chld","re_start","re_end","exec","start_offset","lastIndexOf","end_offset","last","spansToTree","flatten","child","addNode","n","substring","att","subspans","inner","keymap","c","Object","keys","newKey","transformer","stack","pop","tail","shortener","allow","lightCopy","trimStart","shift","match","extracted","el","startAt","plain","entries","dc","module","exports","LargeFileHelper","tinode","_tinode","_version","_apiKey","_authToken","getAuthToken","_reqId","getNextUniqueId","xhr","toResolve","toReject","onProgress","onSuccess","onFailure","uploadWithBaseUrl","baseUrl","avatarFor","instance","base","endsWith","setRequestHeader","token","upload","onprogress","e","lengthComputable","loaded","total","onload","response","statusText","onabort","form","FormData","set","_secure","_host","download","relativeUrl","mimetype","Tinode","isRelativeURL","responseType","link","document","createElement","window","display","setAttribute","appendChild","click","removeChild","revokeObjectURL","reader","FileReader","readAsText","cancel","getId","setNetworkProvider","MetaGetBuilder","what","withData","withLaterData","_maxSeq","withEarlierData","_minSeq","withDesc","ims","withLaterDesc","withSub","userOrTopic","opts","getType","withOneSub","withLaterOneSub","_lastSubsUpdate","withLaterSub","withTags","withCred","withDel","withLaterDel","_maxDel","extract","build","getOwnPropertyNames","updated","isP2PType","Const","mergeObj","mergeToCache","normalizeArray","Topic","callbacks","created","touched","Date","private","trusted","_users","_queuedSeqId","_noEarlierMsgs","_credentials","_messages","_attached","_new","onData","onMeta","onPres","onInfo","onMetaDesc","onMetaSub","onSubsUpdated","onTagsUpdated","onCredsUpdated","onDeleteTopic","onAllMessagesReceived","topicType","types","isMeTopicName","isGroupTopicName","isP2PTopicName","isCommTopicName","isNewGroupTopicName","isChannelTopicName","isSubscribed","subscribe","getParams","setParams","_cacheDelSelf","_cachePutSelf","ts","me","getMeTopic","desc","_noForwarding","_processMetaDesc","createMessage","noEcho","publish","publishMessage","_sending","_failed","swapMessageId","_routeData","publishDraft","_getQueuedSeqId","getCurrentUserID","noecho","_db","_cancelled","leave","unsub","_resetSub","_gone","getMeta","getMessagesPage","forward","startMetaQuery","_loadMessages","promise","setMeta","_processMetaSub","_processMetaTags","cred","_processMetaCreds","subscriber","am","invite","archive","arch","delMessages","hard","r1","r2","low","hi","tosend","reduce","out","del","flushMessageRange","flushMessage","_updateDeletedRanges","delMessagesAll","hardDel","_all","delMessagesList","list","prev","delTopic","delSubscription","note","_updateReadRecv","_refreshContact","noteRecv","noteRead","noteKeyPress","oldVal","doUpdate","recv","userDesc","_cacheGetUser","p2pPeerDesc","subscribers","cb","messages","sinceId","beforeId","findMessage","latestMessage","skipDeleted","maxMsgSeq","maxClearId","messageCount","queuedMessages","msgReceiptCount","msgReadCount","msgRecvCount","msgHasMoreMessages","newer","isNewMessage","seqId","newSeqId","numMessages","fromId","untilId","cancelSend","msgStatus","getDefaultAccess","defacs","isArchived","isMeType","isChannelType","isGroupType","isCommType","isMe","_routeMeta","meta","_processDelMessages","clear","delseq","_routePres","pres","online","isTopicCached","dacs","_routeInfo","info","subs","deleted","_updateCachedUser","creds","_allMessagesReceived","obj","cached","_cachePutUser","maxSeq","gap","msgs","_updateReceived","TopicMe","onContactUpdate","turnOff","_myUID","cont","seen","assign","when","updateCount","cacheRemTopic","getTopic","cr","findIndex","meth","done","resp","cacheGetTopic","ua","dummy","delCredential","method","contacts","getContact","getCredentials","TopicFnd","_contacts","indexBy","getPrototypeOf","prototype","date","isNaN","isUrlRelative","isValidDate","d","getTime","rfc3339DateString","pad","sp","repeat","millis","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","ignore","prop","cache","newval","simplify","t","trim","toLowerCase","item","pos","ary","DBCache","Y","IndexeddbPersistence","WebrtcProvider","v4","uuidv4","RAM","Corestore","datstorage","IDB","store","WebSocket","XMLHttpRequest","IndexedDBProvider","indexedDB","initForNonBrowserApp","chars","btoa","global","input","output","charCode","replace","bc","bs","String","fromCharCode","detectTransport","b64EncodeUnicode","encodeURIComponent","toSolidBytes","p1","jsonBuildHelper","jsonLoggerHelper","getBrowserInfo","product","reactnative","priority","tmp","substr","tokens","m2","v","minor","onComplete","floor","_appName","appName","_platform","platform","navigator","_browser","userAgent","_hwos","_humanLanguage","language","_persist","persist","all","_loggingEnabled","dateString","args","console","log","credential","getVersion","getLibrary","isNullValue","_messageId","_connection","clearStorage","initStorage","networkProbe","_w_isConnected","isAuthenticated","_authenticated","authorizeURL","parsed","searchParams","account","scheme","secret","login","acc","extra","createAccount","createAccountBasic","username","password","updateAccountBasic","hello","_serverInfo","onConnect","setDeviceToken","dt","sent","_deviceToken","loginBasic","uname","_login","loginToken","requestResetAuthSecret","expires","now","setAuthToken","dft","head","oobNotification","modeGiven","modeWant","delCurrentUser","func","newGroupTopicName","isChan","getFndTopic","getLargeFileHelper","getCurrentLogin","getServerInfo","report","getServerLimit","defaultValue","enableLogging","enabled","trimLongStrings","_trimLongStrings","setHumanLanguage","hl","isTopicOnline","getTopicAccessMode","wantAkn","_doc","Doc","_w_conn_provider","signaling","maxConns","on","synced","inbound","getArray","observe","outbound","devices","getMap","members","topics","groups","personal","_w_db_provider","stringify","usr","_w_user","groupMeta","personalVault","personalSubs","usrDesc","p2pchatmeta","p2pchat","chatId","tr","changes","delta","newMessage","pkt2","msg2","group","groupMessages","tmptopic","timestamp","expireDate","personalTopics","Map","ev","change","actionActor","tgt","pkt3","topicme","oldValue","setMonth","getMonth","userId","persanalVault","chatMeta","personalContacts","remoteContacts","initChat","helloMsg","_pendingPromises","onOK","errorText","_inPacketCount","onRawMessage","onNetworkProbe","onCtrlMessage","onMetaMessage","onDataMessage","onPresMessage","onInfoMessage","_expirePromises","setInterval","clearInterval","_cache","_cacheDelUser","onLogin","MAX_MESSAGE_SIZE","MAX_SUBSCRIBER_COUNT","MAX_TAG_COUNT","MAX_FILE_UPLOAD_SIZE"],"sourceRoot":""}