{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/./node_modules/fix-webm-duration/fix-webm-duration.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external var \"React\"","webpack://tinode-webapp/external var \"ReactDOM\"","webpack://tinode-webapp/external var \"ReactIntl\"","webpack://tinode-webapp/external var \"Tinode\"","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/audio-player.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/forward-dialog.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/audio-recorder.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/widgets/meta-message.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"sourcesContent":["(function (name, definition) {\r\n    if (typeof define === 'function' && define.amd) { // RequireJS / AMD\r\n        define(definition);\r\n    } else if (typeof module !== 'undefined' && module.exports) { // CommonJS / Node.js\r\n        module.exports = definition();\r\n    } else { // Direct include\r\n        window.ysFixWebmDuration = definition();\r\n    }\r\n})('fix-webm-duration', function () {\r\n    /*\r\n     * This is the list of possible WEBM file sections by their IDs.\r\n     * Possible types: Container, Binary, Uint, Int, String, Float, Date\r\n     */\r\n    var sections = {\r\n        0xa45dfa3: { name: 'EBML', type: 'Container' },\r\n        0x286: { name: 'EBMLVersion', type: 'Uint' },\r\n        0x2f7: { name: 'EBMLReadVersion', type: 'Uint' },\r\n        0x2f2: { name: 'EBMLMaxIDLength', type: 'Uint' },\r\n        0x2f3: { name: 'EBMLMaxSizeLength', type: 'Uint' },\r\n        0x282: { name: 'DocType', type: 'String' },\r\n        0x287: { name: 'DocTypeVersion', type: 'Uint' },\r\n        0x285: { name: 'DocTypeReadVersion', type: 'Uint' },\r\n        0x6c: { name: 'Void', type: 'Binary' },\r\n        0x3f: { name: 'CRC-32', type: 'Binary' },\r\n        0xb538667: { name: 'SignatureSlot', type: 'Container' },\r\n        0x3e8a: { name: 'SignatureAlgo', type: 'Uint' },\r\n        0x3e9a: { name: 'SignatureHash', type: 'Uint' },\r\n        0x3ea5: { name: 'SignaturePublicKey', type: 'Binary' },\r\n        0x3eb5: { name: 'Signature', type: 'Binary' },\r\n        0x3e5b: { name: 'SignatureElements', type: 'Container' },\r\n        0x3e7b: { name: 'SignatureElementList', type: 'Container' },\r\n        0x2532: { name: 'SignedElement', type: 'Binary' },\r\n        0x8538067: { name: 'Segment', type: 'Container' },\r\n        0x14d9b74: { name: 'SeekHead', type: 'Container' },\r\n        0xdbb: { name: 'Seek', type: 'Container' },\r\n        0x13ab: { name: 'SeekID', type: 'Binary' },\r\n        0x13ac: { name: 'SeekPosition', type: 'Uint' },\r\n        0x549a966: { name: 'Info', type: 'Container' },\r\n        0x33a4: { name: 'SegmentUID', type: 'Binary' },\r\n        0x3384: { name: 'SegmentFilename', type: 'String' },\r\n        0x1cb923: { name: 'PrevUID', type: 'Binary' },\r\n        0x1c83ab: { name: 'PrevFilename', type: 'String' },\r\n        0x1eb923: { name: 'NextUID', type: 'Binary' },\r\n        0x1e83bb: { name: 'NextFilename', type: 'String' },\r\n        0x444: { name: 'SegmentFamily', type: 'Binary' },\r\n        0x2924: { name: 'ChapterTranslate', type: 'Container' },\r\n        0x29fc: { name: 'ChapterTranslateEditionUID', type: 'Uint' },\r\n        0x29bf: { name: 'ChapterTranslateCodec', type: 'Uint' },\r\n        0x29a5: { name: 'ChapterTranslateID', type: 'Binary' },\r\n        0xad7b1: { name: 'TimecodeScale', type: 'Uint' },\r\n        0x489: { name: 'Duration', type: 'Float' },\r\n        0x461: { name: 'DateUTC', type: 'Date' },\r\n        0x3ba9: { name: 'Title', type: 'String' },\r\n        0xd80: { name: 'MuxingApp', type: 'String' },\r\n        0x1741: { name: 'WritingApp', type: 'String' },\r\n        // 0xf43b675: { name: 'Cluster', type: 'Container' },\r\n        0x67: { name: 'Timecode', type: 'Uint' },\r\n        0x1854: { name: 'SilentTracks', type: 'Container' },\r\n        0x18d7: { name: 'SilentTrackNumber', type: 'Uint' },\r\n        0x27: { name: 'Position', type: 'Uint' },\r\n        0x2b: { name: 'PrevSize', type: 'Uint' },\r\n        0x23: { name: 'SimpleBlock', type: 'Binary' },\r\n        0x20: { name: 'BlockGroup', type: 'Container' },\r\n        0x21: { name: 'Block', type: 'Binary' },\r\n        0x22: { name: 'BlockVirtual', type: 'Binary' },\r\n        0x35a1: { name: 'BlockAdditions', type: 'Container' },\r\n        0x26: { name: 'BlockMore', type: 'Container' },\r\n        0x6e: { name: 'BlockAddID', type: 'Uint' },\r\n        0x25: { name: 'BlockAdditional', type: 'Binary' },\r\n        0x1b: { name: 'BlockDuration', type: 'Uint' },\r\n        0x7a: { name: 'ReferencePriority', type: 'Uint' },\r\n        0x7b: { name: 'ReferenceBlock', type: 'Int' },\r\n        0x7d: { name: 'ReferenceVirtual', type: 'Int' },\r\n        0x24: { name: 'CodecState', type: 'Binary' },\r\n        0x35a2: { name: 'DiscardPadding', type: 'Int' },\r\n        0xe: { name: 'Slices', type: 'Container' },\r\n        0x68: { name: 'TimeSlice', type: 'Container' },\r\n        0x4c: { name: 'LaceNumber', type: 'Uint' },\r\n        0x4d: { name: 'FrameNumber', type: 'Uint' },\r\n        0x4b: { name: 'BlockAdditionID', type: 'Uint' },\r\n        0x4e: { name: 'Delay', type: 'Uint' },\r\n        0x4f: { name: 'SliceDuration', type: 'Uint' },\r\n        0x48: { name: 'ReferenceFrame', type: 'Container' },\r\n        0x49: { name: 'ReferenceOffset', type: 'Uint' },\r\n        0x4a: { name: 'ReferenceTimeCode', type: 'Uint' },\r\n        0x2f: { name: 'EncryptedBlock', type: 'Binary' },\r\n        0x654ae6b: { name: 'Tracks', type: 'Container' },\r\n        0x2e: { name: 'TrackEntry', type: 'Container' },\r\n        0x57: { name: 'TrackNumber', type: 'Uint' },\r\n        0x33c5: { name: 'TrackUID', type: 'Uint' },\r\n        0x3: { name: 'TrackType', type: 'Uint' },\r\n        0x39: { name: 'FlagEnabled', type: 'Uint' },\r\n        0x8: { name: 'FlagDefault', type: 'Uint' },\r\n        0x15aa: { name: 'FlagForced', type: 'Uint' },\r\n        0x1c: { name: 'FlagLacing', type: 'Uint' },\r\n        0x2de7: { name: 'MinCache', type: 'Uint' },\r\n        0x2df8: { name: 'MaxCache', type: 'Uint' },\r\n        0x3e383: { name: 'DefaultDuration', type: 'Uint' },\r\n        0x34e7a: { name: 'DefaultDecodedFieldDuration', type: 'Uint' },\r\n        0x3314f: { name: 'TrackTimecodeScale', type: 'Float' },\r\n        0x137f: { name: 'TrackOffset', type: 'Int' },\r\n        0x15ee: { name: 'MaxBlockAdditionID', type: 'Uint' },\r\n        0x136e: { name: 'Name', type: 'String' },\r\n        0x2b59c: { name: 'Language', type: 'String' },\r\n        0x6: { name: 'CodecID', type: 'String' },\r\n        0x23a2: { name: 'CodecPrivate', type: 'Binary' },\r\n        0x58688: { name: 'CodecName', type: 'String' },\r\n        0x3446: { name: 'AttachmentLink', type: 'Uint' },\r\n        0x1a9697: { name: 'CodecSettings', type: 'String' },\r\n        0x1b4040: { name: 'CodecInfoURL', type: 'String' },\r\n        0x6b240: { name: 'CodecDownloadURL', type: 'String' },\r\n        0x2a: { name: 'CodecDecodeAll', type: 'Uint' },\r\n        0x2fab: { name: 'TrackOverlay', type: 'Uint' },\r\n        0x16aa: { name: 'CodecDelay', type: 'Uint' },\r\n        0x16bb: { name: 'SeekPreRoll', type: 'Uint' },\r\n        0x2624: { name: 'TrackTranslate', type: 'Container' },\r\n        0x26fc: { name: 'TrackTranslateEditionUID', type: 'Uint' },\r\n        0x26bf: { name: 'TrackTranslateCodec', type: 'Uint' },\r\n        0x26a5: { name: 'TrackTranslateTrackID', type: 'Binary' },\r\n        0x60: { name: 'Video', type: 'Container' },\r\n        0x1a: { name: 'FlagInterlaced', type: 'Uint' },\r\n        0x13b8: { name: 'StereoMode', type: 'Uint' },\r\n        0x13c0: { name: 'AlphaMode', type: 'Uint' },\r\n        0x13b9: { name: 'OldStereoMode', type: 'Uint' },\r\n        0x30: { name: 'PixelWidth', type: 'Uint' },\r\n        0x3a: { name: 'PixelHeight', type: 'Uint' },\r\n        0x14aa: { name: 'PixelCropBottom', type: 'Uint' },\r\n        0x14bb: { name: 'PixelCropTop', type: 'Uint' },\r\n        0x14cc: { name: 'PixelCropLeft', type: 'Uint' },\r\n        0x14dd: { name: 'PixelCropRight', type: 'Uint' },\r\n        0x14b0: { name: 'DisplayWidth', type: 'Uint' },\r\n        0x14ba: { name: 'DisplayHeight', type: 'Uint' },\r\n        0x14b2: { name: 'DisplayUnit', type: 'Uint' },\r\n        0x14b3: { name: 'AspectRatioType', type: 'Uint' },\r\n        0xeb524: { name: 'ColourSpace', type: 'Binary' },\r\n        0xfb523: { name: 'GammaValue', type: 'Float' },\r\n        0x383e3: { name: 'FrameRate', type: 'Float' },\r\n        0x61: { name: 'Audio', type: 'Container' },\r\n        0x35: { name: 'SamplingFrequency', type: 'Float' },\r\n        0x38b5: { name: 'OutputSamplingFrequency', type: 'Float' },\r\n        0x1f: { name: 'Channels', type: 'Uint' },\r\n        0x3d7b: { name: 'ChannelPositions', type: 'Binary' },\r\n        0x2264: { name: 'BitDepth', type: 'Uint' },\r\n        0x62: { name: 'TrackOperation', type: 'Container' },\r\n        0x63: { name: 'TrackCombinePlanes', type: 'Container' },\r\n        0x64: { name: 'TrackPlane', type: 'Container' },\r\n        0x65: { name: 'TrackPlaneUID', type: 'Uint' },\r\n        0x66: { name: 'TrackPlaneType', type: 'Uint' },\r\n        0x69: { name: 'TrackJoinBlocks', type: 'Container' },\r\n        0x6d: { name: 'TrackJoinUID', type: 'Uint' },\r\n        0x40: { name: 'TrickTrackUID', type: 'Uint' },\r\n        0x41: { name: 'TrickTrackSegmentUID', type: 'Binary' },\r\n        0x46: { name: 'TrickTrackFlag', type: 'Uint' },\r\n        0x47: { name: 'TrickMasterTrackUID', type: 'Uint' },\r\n        0x44: { name: 'TrickMasterTrackSegmentUID', type: 'Binary' },\r\n        0x2d80: { name: 'ContentEncodings', type: 'Container' },\r\n        0x2240: { name: 'ContentEncoding', type: 'Container' },\r\n        0x1031: { name: 'ContentEncodingOrder', type: 'Uint' },\r\n        0x1032: { name: 'ContentEncodingScope', type: 'Uint' },\r\n        0x1033: { name: 'ContentEncodingType', type: 'Uint' },\r\n        0x1034: { name: 'ContentCompression', type: 'Container' },\r\n        0x254: { name: 'ContentCompAlgo', type: 'Uint' },\r\n        0x255: { name: 'ContentCompSettings', type: 'Binary' },\r\n        0x1035: { name: 'ContentEncryption', type: 'Container' },\r\n        0x7e1: { name: 'ContentEncAlgo', type: 'Uint' },\r\n        0x7e2: { name: 'ContentEncKeyID', type: 'Binary' },\r\n        0x7e3: { name: 'ContentSignature', type: 'Binary' },\r\n        0x7e4: { name: 'ContentSigKeyID', type: 'Binary' },\r\n        0x7e5: { name: 'ContentSigAlgo', type: 'Uint' },\r\n        0x7e6: { name: 'ContentSigHashAlgo', type: 'Uint' },\r\n        0xc53bb6b: { name: 'Cues', type: 'Container' },\r\n        0x3b: { name: 'CuePoint', type: 'Container' },\r\n        0x33: { name: 'CueTime', type: 'Uint' },\r\n        0x37: { name: 'CueTrackPositions', type: 'Container' },\r\n        0x77: { name: 'CueTrack', type: 'Uint' },\r\n        0x71: { name: 'CueClusterPosition', type: 'Uint' },\r\n        0x70: { name: 'CueRelativePosition', type: 'Uint' },\r\n        0x32: { name: 'CueDuration', type: 'Uint' },\r\n        0x1378: { name: 'CueBlockNumber', type: 'Uint' },\r\n        0x6a: { name: 'CueCodecState', type: 'Uint' },\r\n        0x5b: { name: 'CueReference', type: 'Container' },\r\n        0x16: { name: 'CueRefTime', type: 'Uint' },\r\n        0x17: { name: 'CueRefCluster', type: 'Uint' },\r\n        0x135f: { name: 'CueRefNumber', type: 'Uint' },\r\n        0x6b: { name: 'CueRefCodecState', type: 'Uint' },\r\n        0x941a469: { name: 'Attachments', type: 'Container' },\r\n        0x21a7: { name: 'AttachedFile', type: 'Container' },\r\n        0x67e: { name: 'FileDescription', type: 'String' },\r\n        0x66e: { name: 'FileName', type: 'String' },\r\n        0x660: { name: 'FileMimeType', type: 'String' },\r\n        0x65c: { name: 'FileData', type: 'Binary' },\r\n        0x6ae: { name: 'FileUID', type: 'Uint' },\r\n        0x675: { name: 'FileReferral', type: 'Binary' },\r\n        0x661: { name: 'FileUsedStartTime', type: 'Uint' },\r\n        0x662: { name: 'FileUsedEndTime', type: 'Uint' },\r\n        0x43a770: { name: 'Chapters', type: 'Container' },\r\n        0x5b9: { name: 'EditionEntry', type: 'Container' },\r\n        0x5bc: { name: 'EditionUID', type: 'Uint' },\r\n        0x5bd: { name: 'EditionFlagHidden', type: 'Uint' },\r\n        0x5db: { name: 'EditionFlagDefault', type: 'Uint' },\r\n        0x5dd: { name: 'EditionFlagOrdered', type: 'Uint' },\r\n        0x36: { name: 'ChapterAtom', type: 'Container' },\r\n        0x33c4: { name: 'ChapterUID', type: 'Uint' },\r\n        0x1654: { name: 'ChapterStringUID', type: 'String' },\r\n        0x11: { name: 'ChapterTimeStart', type: 'Uint' },\r\n        0x12: { name: 'ChapterTimeEnd', type: 'Uint' },\r\n        0x18: { name: 'ChapterFlagHidden', type: 'Uint' },\r\n        0x598: { name: 'ChapterFlagEnabled', type: 'Uint' },\r\n        0x2e67: { name: 'ChapterSegmentUID', type: 'Binary' },\r\n        0x2ebc: { name: 'ChapterSegmentEditionUID', type: 'Uint' },\r\n        0x23c3: { name: 'ChapterPhysicalEquiv', type: 'Uint' },\r\n        0xf: { name: 'ChapterTrack', type: 'Container' },\r\n        0x9: { name: 'ChapterTrackNumber', type: 'Uint' },\r\n        0x0: { name: 'ChapterDisplay', type: 'Container' },\r\n        0x5: { name: 'ChapString', type: 'String' },\r\n        0x37c: { name: 'ChapLanguage', type: 'String' },\r\n        0x37e: { name: 'ChapCountry', type: 'String' },\r\n        0x2944: { name: 'ChapProcess', type: 'Container' },\r\n        0x2955: { name: 'ChapProcessCodecID', type: 'Uint' },\r\n        0x50d: { name: 'ChapProcessPrivate', type: 'Binary' },\r\n        0x2911: { name: 'ChapProcessCommand', type: 'Container' },\r\n        0x2922: { name: 'ChapProcessTime', type: 'Uint' },\r\n        0x2933: { name: 'ChapProcessData', type: 'Binary' },\r\n        0x254c367: { name: 'Tags', type: 'Container' },\r\n        0x3373: { name: 'Tag', type: 'Container' },\r\n        0x23c0: { name: 'Targets', type: 'Container' },\r\n        0x28ca: { name: 'TargetTypeValue', type: 'Uint' },\r\n        0x23ca: { name: 'TargetType', type: 'String' },\r\n        0x23c5: { name: 'TagTrackUID', type: 'Uint' },\r\n        0x23c9: { name: 'TagEditionUID', type: 'Uint' },\r\n        0x23c4: { name: 'TagChapterUID', type: 'Uint' },\r\n        0x23c6: { name: 'TagAttachmentUID', type: 'Uint' },\r\n        0x27c8: { name: 'SimpleTag', type: 'Container' },\r\n        0x5a3: { name: 'TagName', type: 'String' },\r\n        0x47a: { name: 'TagLanguage', type: 'String' },\r\n        0x484: { name: 'TagDefault', type: 'Uint' },\r\n        0x487: { name: 'TagString', type: 'String' },\r\n        0x485: { name: 'TagBinary', type: 'Binary' }\r\n    };\r\n\r\n    function doInherit(newClass, baseClass) {\r\n        newClass.prototype = Object.create(baseClass.prototype);\r\n        newClass.prototype.constructor = newClass;\r\n    }\r\n\r\n    function WebmBase(name, type) {\r\n        this.name = name || 'Unknown';\r\n        this.type = type || 'Unknown';\r\n    }\r\n    WebmBase.prototype.updateBySource = function() { };\r\n    WebmBase.prototype.setSource = function(source) {\r\n        this.source = source;\r\n        this.updateBySource();\r\n    };\r\n    WebmBase.prototype.updateByData = function() { };\r\n    WebmBase.prototype.setData = function(data) {\r\n        this.data = data;\r\n        this.updateByData();\r\n    };\r\n\r\n    function WebmUint(name, type) {\r\n        WebmBase.call(this, name, type || 'Uint');\r\n    }\r\n    doInherit(WebmUint, WebmBase);\r\n    function padHex(hex) {\r\n        return hex.length % 2 === 1 ? '0' + hex : hex;\r\n    }\r\n    WebmUint.prototype.updateBySource = function() {\r\n        // use hex representation of a number instead of number value\r\n        this.data = '';\r\n        for (var i = 0; i < this.source.length; i++) {\r\n            var hex = this.source[i].toString(16);\r\n            this.data += padHex(hex);\r\n        }\r\n    };\r\n    WebmUint.prototype.updateByData = function() {\r\n        var length = this.data.length / 2;\r\n        this.source = new Uint8Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            var hex = this.data.substr(i * 2, 2);\r\n            this.source[i] = parseInt(hex, 16);\r\n        }\r\n    };\r\n    WebmUint.prototype.getValue = function() {\r\n        return parseInt(this.data, 16);\r\n    };\r\n    WebmUint.prototype.setValue = function(value) {\r\n        this.setData(padHex(value.toString(16)));\r\n    };\r\n\r\n    function WebmFloat(name, type) {\r\n        WebmBase.call(this, name, type || 'Float');\r\n    }\r\n    doInherit(WebmFloat, WebmBase);\r\n    WebmFloat.prototype.getFloatArrayType = function() {\r\n        return this.source && this.source.length === 4 ? Float32Array : Float64Array;\r\n    };\r\n    WebmFloat.prototype.updateBySource = function() {\r\n        var byteArray = this.source.reverse();\r\n        var floatArrayType = this.getFloatArrayType();\r\n        var floatArray = new floatArrayType(byteArray.buffer);\r\n        this.data = floatArray[0];\r\n    };\r\n    WebmFloat.prototype.updateByData = function() {\r\n        var floatArrayType = this.getFloatArrayType();\r\n        var floatArray = new floatArrayType([ this.data ]);\r\n        var byteArray = new Uint8Array(floatArray.buffer);\r\n        this.source = byteArray.reverse();\r\n    };\r\n    WebmFloat.prototype.getValue = function() {\r\n        return this.data;\r\n    };\r\n    WebmFloat.prototype.setValue = function(value) {\r\n        this.setData(value);\r\n    };\r\n\r\n    function WebmContainer(name, type) {\r\n        WebmBase.call(this, name, type || 'Container');\r\n    }\r\n    doInherit(WebmContainer, WebmBase);\r\n    WebmContainer.prototype.readByte = function() {\r\n        return this.source[this.offset++];\r\n    };\r\n    WebmContainer.prototype.readUint = function() {\r\n        var firstByte = this.readByte();\r\n        var bytes = 8 - firstByte.toString(2).length;\r\n        var value = firstByte - (1 << (7 - bytes));\r\n        for (var i = 0; i < bytes; i++) {\r\n            // don't use bit operators to support x86\r\n            value *= 256;\r\n            value += this.readByte();\r\n        }\r\n        return value;\r\n    };\r\n    WebmContainer.prototype.updateBySource = function() {\r\n        this.data = [];\r\n        for (this.offset = 0; this.offset < this.source.length; this.offset = end) {\r\n            var id = this.readUint();\r\n            var len = this.readUint();\r\n            var end = Math.min(this.offset + len, this.source.length);\r\n            var data = this.source.slice(this.offset, end);\r\n\r\n            var info = sections[id] || { name: 'Unknown', type: 'Unknown' };\r\n            var ctr = WebmBase;\r\n            switch (info.type) {\r\n                case 'Container':\r\n                    ctr = WebmContainer;\r\n                    break;\r\n                case 'Uint':\r\n                    ctr = WebmUint;\r\n                    break;\r\n                case 'Float':\r\n                    ctr = WebmFloat;\r\n                    break;\r\n            }\r\n            var section = new ctr(info.name, info.type);\r\n            section.setSource(data);\r\n            this.data.push({\r\n                id: id,\r\n                idHex: id.toString(16),\r\n                data: section\r\n            });\r\n        }\r\n    };\r\n    WebmContainer.prototype.writeUint = function(x, draft) {\r\n        for (var bytes = 1, flag = 0x80; x >= flag && bytes < 8; bytes++, flag *= 0x80) { }\r\n\r\n        if (!draft) {\r\n            var value = flag + x;\r\n            for (var i = bytes - 1; i >= 0; i--) {\r\n                // don't use bit operators to support x86\r\n                var c = value % 256;\r\n                this.source[this.offset + i] = c;\r\n                value = (value - c) / 256;\r\n            }\r\n        }\r\n\r\n        this.offset += bytes;\r\n    };\r\n    WebmContainer.prototype.writeSections = function(draft) {\r\n        this.offset = 0;\r\n        for (var i = 0; i < this.data.length; i++) {\r\n            var section = this.data[i],\r\n                content = section.data.source,\r\n                contentLength = content.length;\r\n            this.writeUint(section.id, draft);\r\n            this.writeUint(contentLength, draft);\r\n            if (!draft) {\r\n                this.source.set(content, this.offset);\r\n            }\r\n            this.offset += contentLength;\r\n        }\r\n        return this.offset;\r\n    };\r\n    WebmContainer.prototype.updateByData = function() {\r\n        // run without accessing this.source to determine total length - need to know it to create Uint8Array\r\n        var length = this.writeSections('draft');\r\n        this.source = new Uint8Array(length);\r\n        // now really write data\r\n        this.writeSections();\r\n    };\r\n    WebmContainer.prototype.getSectionById = function(id) {\r\n        for (var i = 0; i < this.data.length; i++) {\r\n            var section = this.data[i];\r\n            if (section.id === id) {\r\n                return section.data;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    function WebmFile(source) {\r\n        WebmContainer.call(this, 'File', 'File');\r\n        this.setSource(source);\r\n    }\r\n    doInherit(WebmFile, WebmContainer);\r\n    WebmFile.prototype.fixDuration = function(duration, options) {\r\n        var logger = options && options.logger;\r\n        if (logger === undefined) {\r\n            logger = function(message) {\r\n                console.log(message);\r\n            };\r\n        } else if (!logger) {\r\n            logger = function() { };\r\n        }\r\n\r\n        var segmentSection = this.getSectionById(0x8538067);\r\n        if (!segmentSection) {\r\n            logger('[fix-webm-duration] Segment section is missing');\r\n            return false;\r\n        }\r\n\r\n        var infoSection = segmentSection.getSectionById(0x549a966);\r\n        if (!infoSection) {\r\n            logger('[fix-webm-duration] Info section is missing');\r\n            return false;\r\n        }\r\n\r\n        var timeScaleSection = infoSection.getSectionById(0xad7b1);\r\n        if (!timeScaleSection) {\r\n            logger('[fix-webm-duration] TimecodeScale section is missing');\r\n            return false;\r\n        }\r\n\r\n        var durationSection = infoSection.getSectionById(0x489);\r\n        if (durationSection) {\r\n            if (durationSection.getValue() <= 0) {\r\n                logger('[fix-webm-duration] Duration section is present, but the value is empty');\r\n                durationSection.setValue(duration);\r\n            } else {\r\n                logger('[fix-webm-duration] Duration section is present');\r\n                return false;\r\n            }\r\n        } else {\r\n            logger('[fix-webm-duration] Duration section is missing');\r\n            // append Duration section\r\n            durationSection = new WebmFloat('Duration', 'Float');\r\n            durationSection.setValue(duration);\r\n            infoSection.data.push({\r\n                id: 0x489,\r\n                data: durationSection\r\n            });\r\n        }\r\n\r\n        // set default time scale to 1 millisecond (1000000 nanoseconds)\r\n        timeScaleSection.setValue(1000000);\r\n        infoSection.updateByData();\r\n        segmentSection.updateByData();\r\n        this.updateByData();\r\n\r\n        return true;\r\n    };\r\n    WebmFile.prototype.toBlob = function(mimeType) {\r\n        return new Blob([ this.source.buffer ], { type: mimeType || 'video/webm' });\r\n    };\r\n\r\n    function fixWebmDuration(blob, duration, callback, options) {\r\n        // The callback may be omitted - then the third argument is options\r\n        if (typeof callback === \"object\") {\r\n            options = callback;\r\n            callback = undefined;\r\n        }\r\n\r\n        if (!callback) {\r\n            return new Promise(function(resolve) {\r\n                fixWebmDuration(blob, duration, resolve, options);\r\n            });\r\n        }\r\n\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onloadend = function() {\r\n                try {\r\n                    var file = new WebmFile(new Uint8Array(reader.result));\r\n                    if (file.fixDuration(duration, options)) {\r\n                        blob = file.toBlob(blob.type);\r\n                    }\r\n                } catch (ex) {\r\n                    // ignore\r\n                }\r\n                callback(blob);\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        } catch (ex) {\r\n            callback(blob);\r\n        }\r\n    }\r\n\r\n    // Support AMD import default\r\n    fixWebmDuration.default = fixWebmDuration;\r\n\r\n    return fixWebmDuration;\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.19.3\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.local;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3_000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262_144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n// Length of a preview of a forwarded message.\nexport const FORWARDED_PREVIEW_LENGTH = 84;\n\n// Minimum duration of an audio recording in milliseconds (2 sec).\nexport const MIN_DURATION = 2_000;\n// Maximum duration of an audio recording in milliseconds (10 min).\nexport const MAX_DURATION = 600_000;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'mailto:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  forward: {\n    id: 'menu_item_forward',\n    defaultMessage: 'Forward',\n    description: 'Forward message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      // 'messages_clear': {\n      //   id: 'messages_clear',\n      //   title: formatMessage(messages.clear_messages),\n      //   handler: (params, errorHandler) => {\n      //     return props.onShowAlert(\n      //       formatMessage(messages.clear_messages), // title\n      //       formatMessage(messages.clear_messages_warning), // content\n      //       (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n      //       null, // \"OK\"\n      //       true, // Show Reject button\n      //       null  // \"Cancel\"\n      //     );\n      //   }\n      // },\n      // 'messages_clear_hard': {\n      //   id: 'messages_clear_hard',\n      //   title: formatMessage(messages.clear_for_all),\n      //   handler: (params, errorHandler) => {\n      //     return props.onShowAlert(\n      //       formatMessage(messages.clear_for_all), // title\n      //       formatMessage(message.delete_messages_warning), // content\n      //       (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n      //       null, // \"OK\"\n      //       true, // Show Reject button\n      //       null  // \"Cancel\"\n      //     );\n      //   }\n      // },\n      // 'message_delete': {\n      //   id: 'message_delete',\n      //   title: formatMessage(messages.delete),\n      //   handler: (params, errorHandler) => {\n      //     return this.deleteMessages(false, false, params, errorHandler);\n      //   }\n      // },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'menu_item_forward': {\n        id: 'menu_item_forward',\n        title: formatMessage(messages.forward),\n        handler: () => {} /* the action is taken directly in tinode-web */\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.warn(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.warn(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.warn(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.warn(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.warn(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.warn(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, params.userFrom, params.userName, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\n// If <code>fixedMins</code> is true, then minutes are represented by at least two digits.\nexport function secondsToTime(seconds, fixedMin) {\n  let min = Math.floor(seconds / 60) | 0;\n  if (fixedMin) {\n    min = min < 10 ? `0${min}` : min;\n  }\n  let sec = (seconds % 60) | 0;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport { Tinode } from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable as a source like <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must must be of the right MIME type such as 'data:{mimeMajor}/XXXX;base64,'.\nexport function sanitizeUrlForMime(url, mimeMajor) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of the appropriate mime type?\n  const re = new RegExp(`data:${mimeMajor}\\/[a-z0-9.-]+;base64,`, 'i');\n  if (re.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n\n// Wraps a promise to make it cancelable.\n// The parameter can be either a promise or an error. If it's an error, the wrapped promise is\n// created in a rejected state.\nexport function cancelablePromise(promise) {\n  let hasCanceled = false;\n\n  const wrappedPromise = promise instanceof Error ?\n    Promise.reject(promise) :\n    new Promise((resolve, reject) => {\n      promise.then(\n        result => hasCanceled ? reject({isCanceled: true}) : resolve(result),\n        error => hasCanceled ? reject({isCanceled: true}) : reject(error)\n      );\n    });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled = true;\n    },\n  };\n};\n","import React from 'react';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeUrlForMime } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = Tinode.isGroupTopicName(this.props.topic);\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor + (this.props.deleted ? ' disabled' : '');\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor + (this.props.deleted ? ' disabled' : '');\n        avatar = isGroup ? <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeUrlForMime(this.props.avatar, 'image'));\n      // If avatar image is invalid, show a placeholder.\n      const className = 'avatar' + (this.props.deleted ? ' deleted' : '');\n      avatar = <img className={className} alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// File and image helper functions.\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.ref) {\n      return photo.ref\n    }\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(img.width, img.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = _ => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!items || !items.length) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n\nexport function intArrayToBase64(arr) {\n  if (!Array.isArray(arr)) {\n    return null;\n  }\n  try {\n    let bin = '';\n    new Uint8Array(arr).forEach(b => bin += String.fromCharCode(b));\n    return window.btoa(bin);\n  } catch (err) {}\n  return null;\n}\n\nexport function base64ToIntArray(b64) {\n  const arr = [];\n  try {\n    const bin =  window.atob(b64);\n    [...bin].forEach(c => {\n      arr.push(c.charCodeAt(0));\n    });\n    return arr;\n  } catch (err) {}\n  return null;\n}\n","// Audio recorder widget.\n\nimport React from 'react';\n\nimport { secondsToTime } from '../lib/strformat';\nimport { base64ToIntArray } from '../lib/blob-helpers';\n\n// Make canvas bigger than the element size to reduce blurring.\nconst CANVAS_UPSCALING = 2.0;\n// Thickness of a visualization bar.\nconst LINE_WIDTH = 3 * CANVAS_UPSCALING;\n// Spacing between two visualization bars.\nconst SPACING = 2 * CANVAS_UPSCALING;\n// Color of histogram bars.\nconst BAR_COLOR = '#888A';\nconst BAR_COLOR_DARK = '#666C';\nconst THUMB_COLOR = '#444E';\n// Minimum number of amplitude bars to draw.\nconst MIN_PREVIEW_LENGTH = 16;\n\nexport default class AudioPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    let preview = base64ToIntArray(this.props.preview);\n    if (!Array.isArray(preview) || preview.length < MIN_PREVIEW_LENGTH) {\n      preview = null;\n    }\n\n    this.state = {\n      canPlay: false,\n      playing: false,\n      currentTime: '0:00',\n      duration: this.props.duration > 0 ? secondsToTime(this.props.duration / 1000) : '-:--',\n      longMin: this.props.duration >= 600000,\n      preview: preview\n    };\n\n    this.initAudio = this.initAudio.bind(this);\n    this.initCanvas = this.initCanvas.bind(this);\n    this.resampleBars = this.resampleBars.bind(this);\n    this.visualize = this.visualize.bind(this);\n\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleSeek = this.handleSeek.bind(this);\n    this.handleError = this.handleError.bind(this);\n\n    this.audioPlayer = null;\n\n    this.viewBuffer = [];\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.src) {\n      this.initAudio();\n    }\n\n    this.initCanvas();\n  }\n\n  componentWillUnmount() {\n    if (this.audioPlayer) {\n      this.audioPlayer.oncanplay = null;\n      this.audioPlayer.ontimeupdate = null;\n      this.audioPlayer.onended = null;\n      this.audioPlayer.pause();\n      this.audioPlayer = null;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.src != prevProps.src) {\n      this.initAudio();\n    }\n\n    if (this.props.preview != prevProps.preview) {\n      let preview = base64ToIntArray(this.props.preview);\n      if (!Array.isArray(preview) || preview.length < MIN_PREVIEW_LENGTH) {\n        preview = null;\n      }\n      this.setState({preview: preview}, this.initCanvas);\n    }\n  }\n\n  initAudio() {\n    this.audioPlayer = new Audio(this.props.src);\n    this.audioPlayer.oncanplay = _ => this.setState({canPlay: true});\n    this.audioPlayer.ontimeupdate = _ => this.setState({\n      currentTime: secondsToTime(this.audioPlayer.currentTime, this.state.longMin)\n    });\n    this.audioPlayer.onended = _ => {\n      this.audioPlayer.currentTime = 0;\n      this.setState({playing: false, currentTime: secondsToTime(0, this.state.longMin)})\n    }\n  }\n\n  initCanvas() {\n    // Force canvas aspect ratio to match one of the element + upscale canvas to reduce blurring.\n    this.canvasRef.current.width = this.canvasRef.current.offsetWidth * CANVAS_UPSCALING;\n    this.canvasRef.current.height = this.canvasRef.current.offsetHeight * CANVAS_UPSCALING;\n\n    this.canvasContext = this.canvasRef.current.getContext('2d');\n    this.canvasContext.lineCap = 'round';\n\n    this.viewBuffer = this.resampleBars(this.state.preview);\n    this.visualize();\n  }\n\n  // Draw amplitude of sound.\n  visualize() {\n    if (!this.canvasRef.current) {\n      return;\n    }\n\n    const width = this.effectiveWidth;\n    const height = this.canvasRef.current.height;\n\n    this.canvasContext.lineWidth = LINE_WIDTH;\n\n    const drawFrame = () => {\n      if (!this.canvasRef.current || !this.audioPlayer) {\n        // The component is unmounted.\n        return;\n      }\n\n      this.canvasContext.clearRect(0, 0, this.canvasRef.current.width, height);\n\n      if (this.viewBuffer) {\n        if (this.state.playing) {\n          window.requestAnimationFrame(drawFrame);\n        }\n\n        // Current playback position.\n        const thumbAt = this.props.duration ?\n          Math.max(0, Math.min(this.audioPlayer.currentTime * 1000 / this.props.duration, 1)) * (width - LINE_WIDTH * 2) : -1;\n\n        // Draw amplitude bars.\n        this.canvasContext.beginPath();\n        this.canvasContext.strokeStyle = BAR_COLOR_DARK;\n        for (let i = 0; i < this.viewBuffer.length; i++) {\n          let x = 1 + i * (LINE_WIDTH + SPACING) + LINE_WIDTH * 0.5;\n          let y = this.viewBuffer[i] * height * 0.9;\n\n          const color = x < thumbAt ? BAR_COLOR_DARK : BAR_COLOR;\n          if (this.canvasContext.strokeStyle != color) {\n            this.canvasContext.stroke();\n            this.canvasContext.beginPath();\n            this.canvasContext.strokeStyle = color;\n          }\n\n          this.canvasContext.moveTo(x, (height - y) * 0.5);\n          this.canvasContext.lineTo(x, height * 0.5 + y * 0.5);\n        }\n        // Actually draw the bars on canvas.\n        this.canvasContext.stroke();\n\n        // Draw thumb.\n        if (this.props.duration) {\n          this.canvasContext.beginPath();\n          this.canvasContext.arc(thumbAt + LINE_WIDTH * 2, height * 0.5, LINE_WIDTH * 2, 0, 2 * Math.PI);\n          this.canvasContext.fillStyle = THUMB_COLOR;\n          this.canvasContext.fill();\n        }\n      }\n    }\n\n    drawFrame();\n  }\n\n  // Quick and dirty downsampling of the original preview bars into a smaller (or equal) number of bars we can display here.\n  resampleBars(original) {\n    const dstCount = ((this.canvasRef.current.width - SPACING) / (LINE_WIDTH + SPACING)) | 0;\n    // Remove extra padding on the right due to fractional bar which is not drawn.\n    this.effectiveWidth = dstCount * (LINE_WIDTH + SPACING) + SPACING;\n\n    if (!Array.isArray(original) || original.length == 0) {\n      return Array.apply(null, Array(dstCount)).map(_ => 0.01);\n    }\n\n    const factor = original.length / dstCount;\n    let amps = [];\n    let maxAmp = -1;\n    for (let i=0; i<dstCount; i++) {\n      let lo = (i * factor) | 0; // low bound;\n      let hi = ((i + 1) * factor) | 0; // high bound;\n      if (hi == lo) {\n        amps[i] = original[lo];\n      } else {\n        let amp = 0.0;\n        for (let j=lo; j<hi; j++) {\n          amp += original[j]\n        }\n        amps[i] = Math.max(0, amp / (hi - lo));\n      }\n      maxAmp = Math.max(amps[i], maxAmp);\n    }\n\n    if (maxAmp > 0) {\n      return amps.map(a => a / maxAmp);\n    }\n    return Array.apply(null, Array(dstCount)).map(_ => 0.01);\n  }\n\n  handlePlay(e) {\n    e.preventDefault();\n    if (!this.state.canPlay) {\n      return;\n    }\n    if (this.state.playing) {\n      this.audioPlayer.pause();\n      this.setState({playing: false});\n    } else {\n      this.audioPlayer.play();\n      this.setState({playing: true}, this.visualize);\n    }\n  }\n\n  handleError(err) {\n    console.error(err);\n  }\n\n  handleSeek(e) {\n    e.preventDefault();\n    if (e.target && this.props.duration) {\n      const rect = e.target.getBoundingClientRect();\n      const offset = (e.clientX - rect.left) / this.effectiveWidth * CANVAS_UPSCALING;\n      this.audioPlayer.currentTime = this.props.duration * offset / 1000;\n      this.setState({currentTime: secondsToTime(this.audioPlayer.currentTime, this.state.longMin)});\n      if (!this.state.playing) {\n        this.visualize();\n      }\n    }\n  }\n\n  render() {\n    const playClass = 'material-icons' +\n      (this.props.short ? '' : ' large') +\n      (this.state.canPlay ? '' : ' disabled');\n    const play = (<a href=\"#\" onClick={this.handlePlay} title=\"Play\">\n        <i className={playClass}>{this.state.playing ? 'pause_circle' :\n          (this.state.canPlay ? 'play_circle' : 'not_interested')}</i>\n      </a>);\n    return (<div className=\"audio-player\">{this.props.short ?\n      <>\n        <canvas className=\"playback\" ref={this.canvasRef} onClick={this.handleSeek} />\n        {play}\n      </>\n    :\n      <>\n        {play}\n        <div>\n          <canvas className=\"playback\" ref={this.canvasRef} onClick={this.handleSeek} />\n          <div className=\"timer\">{this.state.currentTime}/{this.state.duration}</div>\n        </div>\n      </>\n    }\n    </div>);\n  }\n}\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    // whenDone is a wrapper around an actual promise to be able to cancel it.\n    this.props.whenDone\n      .promise\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentWillUnmount() {\n    this.props.whenDone.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .promise\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport AudioPlayer from '../widgets/audio-player.jsx'\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, secondsToTime, shortenFileName } from './strformat.js';\nimport { cancelablePromise, sanitizeUrlForMime } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty'\n  },\n  drafty_unknown: {\n    id: 'drafty_unknown',\n    defaultMessage: 'Unsupported',\n    description: 'Unsupported entity in drafty'\n  }\n});\n\n// Additional processing of image data.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeUrlForMime(attr.src, 'image'));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key, stack) {\n  if (stack.includes('QQ')) {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  let el = Drafty.tagName(style);\n  let attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'AU':\n      // Show audio player.\n      if (attr.src) {\n        attr.src = this.authorizeURL(sanitizeUrlForMime(attr.src, 'audio'));\n        attr.duration = data.duration > 0 ? (data.duration | 0) : undefined;\n        attr.preview = data.preview;\n        attr.loading = 'lazy';\n      }\n      el = AudioPlayer;\n      // Audio element cannot have content.\n      values = null;\n      break;\n    case 'BR':\n      values = null;\n      break;\n    case 'EX':\n      // Ignore.\n      break;\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'HD':\n      el = null;\n      values = null;\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (!el) {\n        // Unknown element.\n        el = React.Fragment;\n        attr = {key: key};\n        // Generate comment for unknown element.\n        let body = values;\n        if (!Array.isArray(values) || !values.join('').trim()) {\n          body = [<span key=\"x1\" className=\"gray\">{this.formatMessage(messages.drafty_unknown)}</span>];\n        }\n        values = [<i key=\"x0\" className=\"material-icons gray\">extension</i>, ' '].concat(body);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n}\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'AU':\n      // Voicemail as '[mic] 0:00'.\n      el = React.Fragment;\n      values = [<i key=\"au\" className=\"material-icons\">mic</i>, ' ', secondsToTime(data.duration/1000)];\n      break;\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, ' ', this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, ' ', this.formatMessage(messages.drafty_attachment)];\n      break;\n    case 'QQ':\n    case 'HD':\n      el = null;\n      values = null;\n      break;\n    default:\n      if (!el) {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i key=\"x0\" className=\"material-icons gray\">extension</i>, ' ', this.formatMessage(messages.drafty_unknown)];\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nfunction quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'BR':\n        values = null;\n        break;\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    if (!blob) {\n      throw new Error(\"Invalid image\");\n    }\n    promise = Promise.resolve(blob);\n  } else if (data.ref) {\n    promise = fetch(this.authorizeURL(sanitizeUrlForMime(data.ref, 'image')))\n      .then(evt => {\n        if (evt.ok) {\n          return evt.blob();\n        } else {\n          throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n        }\n      });\n  } else {\n    throw new Error(\"Missing image data\");\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key, stack) {\n  if (style == 'IM') {\n    const attr = inlineImageAttr.call(this, {key: key}, data);\n    let loadedPromise;\n    try {\n      loadedPromise = cancelablePromise(quoteImage.call(this, data));\n    } catch (error) {\n      loadedPromise = cancelablePromise(error);\n    }\n    attr.whenDone = loadedPromise;\n    values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n    return React.createElement(React.Fragment, {key: key}, values);\n  } else if (style == 'QQ') {\n    if (stack.includes('QQ')) {\n      // Quote inside quote when forwarding a message.\n      return React.createElement('span', {key: key},\n        [<i key=\"qq\" className=\"material-icons\">format_quote</i>, ' ']);\n    }\n\n    const attr = Drafty.attrValue('QQ', data) || {};\n    attr.key = key;\n    attr.className = 'reply-quote'\n    return React.createElement(Drafty.tagName('QQ'), attr, values);\n  }\n  return quoteFormatter.call(this, style, data, values, key);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    // The this.props.preview contains alreay shortened Drafty or string.\n    let preview;\n    if (typeof this.props.preview == 'string') {\n      preview = this.props.preview;\n    } else if (Drafty.isValid(this.props.preview)) {\n      preview = React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n        {formatMessage: this.props.intl.formatMessage}));\n    } else if (this.props.preview) {\n      preview =\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>;\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n    const titleClass = 'contact-title' + (this.props.deleted ? ' deleted' : '');\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item}\n            deleted={this.props.deleted} />\n          {this.props.deleted ? <i className=\"deleted material-icons\">cancel</i> :\n            this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected) ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null}\n        </div>\n        <div className=\"text-box\">\n          <div><span className={titleClass}>{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} />\n            {!this.props.deleted ? <UnreadBadge count={this.props.unread} /> : null}\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{preview || this.props.comment || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty, Tinode } from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let forwarded;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              forwarded = msg.head ? msg.head.forwarded : null;\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              if (msg.content) {\n                preview = typeof msg.content == 'string' ?\n                  msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                  Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n              }\n            }\n          }\n\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              forwarded={forwarded}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              deleted={c._deleted}\n              onSelected={this.props.onTopicSelected}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","import React from 'react';\n\nimport { Tinode } from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <input className=\"search\" type=\"text\"\n              placeholder={this.props.placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          {this.state.search ?\n            <a href=\"#\" onClick={this.handleClear}><i className=\"material-icons\">highlight_off</i></a>\n            :\n            <span><i className=\"material-icons\">&nbsp;</i></span>}\n        </div>\n      </div>\n    );\n  }\n};\n","// Forward Menu: message forwarding popup/dropdown menu.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport ContactList from './contact-list.jsx';\nimport SearchContacts from './search-contacts.jsx';\n\nexport default class ForwardDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: null\n    };\n\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      // Not forwarding the message.\n      this.props.hide(false);\n    }\n  }\n\n  handleClose(e) {\n    e.preventDefault();\n    this.props.hide(false);\n  }\n\n  handleSearchContacts(query) {\n    this.setState({ query: Tinode.isNullValue(query) ? null : query });\n    this.props.onSearchContacts(query);\n  }\n\n  handleContactSelected(uid) {\n    this.props.onTopicSelected(uid);\n    this.props.hide(true);\n  }\n\n  render() {\n    let contacts = this.state.query != null ? this.props.searchResults : this.props.contacts;\n    // Filter out contacts without a 'W' or 'J' permissions as well as the current topic.\n    contacts = contacts.filter((c) => {\n      return (c.name != this.props.topicSelected) && c.acs.isJoiner() && c.acs.isWriter();\n    });\n\n    return (\n      <div className=\"alert-container\">\n        <div className=\"forward-dialog\">\n          <div className=\"title with-control\">\n            <div><FormattedMessage id=\"forward_to\" defaultMessage=\"Forward to\"\n              desription=\"Title of the contact selector dialog when forwarding a message\" /></div>\n            <div><a href=\"#\" onClick={this.handleClose}><i className=\"material-icons\">close</i></a></div>\n          </div>\n          <FormattedMessage id=\"forward_to_search_placeholder\" defaultMessage=\"Search contacts\"\n            description=\"Contact search prompt when forwarding a message.\">{\n            (search_placeholder) => <SearchContacts\n              placeholder={search_placeholder}\n              onSearchContacts={this.handleSearchContacts} />\n          }</FormattedMessage>\n          <FormattedMessage id=\"search_no_results\" defaultMessage=\"Search returned no results\"\n              description=\"Text shown in contacts view when query returned no results.\">{\n            (not_found_placeholder) => <ContactList\n              tinode={this.props.tinode}\n              contacts={contacts}\n              myUserId={this.props.myUserId}\n              emptyListMessage={not_found_placeholder}\n              showOnline={false}\n              showUnread={false}\n              showContextMenu={false}\n              onTopicSelected={this.handleContactSelected} />\n          }</FormattedMessage>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeUrlForMime } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + ('' + Math.random()).substring(0, 4);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeUrlForMime(this.state.source, 'image'))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.inputRef = React.createRef();\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\" onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown}\n          ref={this.inputRef} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.ref = this.selfRef;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE, MAX_TITLE_LENGTH,\n  MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload(scaled))\n        .catch(err => this.props.onError(err, 'err'));\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (_ => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              {!this.props.channel ?\n                <div className=\"group\">\n                  <div>\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                      description=\"Label for default access mode\" />\n                    </label>\n                  </div>\n                  <div className=\"quoted\">\n                    <div>Auth: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('auth');\n                        }\n                      }}>{this.props.auth}</tt>\n                    </div>\n                    <div>Anon: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('anon');\n                        }\n                      }}>{this.props.anon}</tt>\n                    </div>\n                  </div>\n                </div>\n              :\n                null\n              }\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = this.props.timestamp.toLocaleTimeString(this.props.intl.locale, { timeStyle: 'short' });\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Single chat message bubble, sent or received.\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty, Tinode } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter } from '../lib/formatters.js';\nimport { sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = [];\n    if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      menuItems.push('menu_item_send_retry');\n    }\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    menuItems.push('menu_item_forward');\n\n    this.props.showContextMenu({\n      seq: this.props.seq,\n      content: this.props.content,\n      userFrom: this.props.userFrom,\n      userName: this.props.userName,\n      y: e.pageY,\n      x: e.pageX,\n      pickReply: this.props.pickReply\n    }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.sequence + ' ' + (this.props.response ? 'left' : 'right');\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.userAvatar || true;\n    const fullDisplay = (this.props.isGroup && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.isGroup && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.showContextMenu ?\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span> : null\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Audio recorder widget.\n\nimport React from 'react';\n\nimport AudioPlayer from './audio-player.jsx';\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=642012\nimport fixWebmDuration from 'fix-webm-duration';\n\nimport { intArrayToBase64 } from '../lib/blob-helpers.js'\nimport { secondsToTime } from '../lib/strformat';\nimport { MAX_DURATION, MIN_DURATION } from '../config.js';\n\n// FFT resolution.\nconst BUFFER_SIZE = 256;\n// Make canvas bigger than the element size to reduce blurring.\nconst CANVAS_UPSCALING = 2.0;\n// Thickness of a visualization bar.\nconst LINE_WIDTH = 3 * CANVAS_UPSCALING;\n// Spacing between two visualization bars.\nconst SPACING = 2 * CANVAS_UPSCALING;\n// Duration represented by one visualization bar.\nconst MILLIS_PER_BAR = 100;\n// Color of histogram bars\nconst BAR_COLOR = '#BBBD';\n// Vertical scaling for visualization bars.\nconst BAR_SCALE = 64.0;\n// Number of bars in preview.\nconst VISUALIZATION_BARS = 96;\n// Maximum number of samples per bar.\nconst MAX_SAMPLES_PER_BAR = 10;\n\n// Recording format.\nconst AUDIO_MIME_TYPE = 'audio/webm';\n\nexport default class AudioRecorder extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      enabled: true,\n      audioRecord: null,\n      recording: true,\n      paused: false,\n      duration: '0:00',\n      blobUrl: null,\n      preview: null\n    };\n\n    this.visualize = this.visualize.bind(this);\n    this.initMediaRecording = this.initMediaRecording.bind(this);\n    this.initCanvas = this.initCanvas.bind(this);\n    this.getRecording = this.getRecording.bind(this);\n    this.cleanUp = this.cleanUp.bind(this);\n\n    this.handleResume = this.handleResume.bind(this);\n    this.handlePause = this.handlePause.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n\n    this.durationMillis = 0;\n    this.startedOn = null;\n    this.viewBuffer = [];\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.stream = null;\n    this.mediaRecorder = null;\n    this.audioContext = null;\n    this.audioInput = null;\n    this.analyser = null;\n\n    this.audioChunks = [];\n\n    // Start recorder right away.\n    try {\n      navigator.mediaDevices.getUserMedia({audio: true, video: false}).then(this.initMediaRecording, this.props.onError);\n    } catch (err) {\n      this.props.onError(err);\n    }\n  }\n\n  componentWillUnmount() {\n    this.startedOn = null;\n    if (this.stream) {\n      this.cleanUp();\n    }\n  }\n\n  // Draw amplitude of sound.\n  visualize() {\n    this.initCanvas();\n\n    const pcmData = new Uint8Array(this.analyser.frequencyBinCount);\n    const width = this.canvasWidth;\n    const height = this.canvasHeight;\n    // Number of bars.\n    const viewLength = (width / (LINE_WIDTH + SPACING)) | 0;\n    // Duration of audio which fits onto the screen.\n    const viewDuration = MILLIS_PER_BAR * viewLength;\n\n    this.canvasContext.lineWidth = LINE_WIDTH;\n    this.canvasContext.strokeStyle = BAR_COLOR;\n\n    let prevBarCount = 0;\n    let volume = 0.0;\n    let countPerBar = 0;\n    const drawFrame = () => {\n      if (!this.startedOn) {\n        return;\n      }\n      window.requestAnimationFrame(drawFrame);\n\n      const duration = this.durationMillis + (Date.now() - this.startedOn);\n      // Update record length timer.\n      this.setState({duration: secondsToTime(duration / 1000)});\n\n      // Check if record is too long.\n      if (duration > MAX_DURATION) {\n        this.startedOn = null;\n        this.mediaRecorder.pause();\n        this.durationMillis += Date.now() - this.startedOn;\n        this.setState({enabled: false, recording: false, duration: secondsToTime(this.durationMillis / 1000)});\n      }\n\n      // Draw histogram.\n\n      // Get current waveform and calculate its amplitude.\n      this.analyser.getByteTimeDomainData(pcmData);\n      let amp = 0.0;\n      for (const amplitude of pcmData) {\n        amp += (amplitude - 127) ** 2;\n      }\n\n      // Sum the amplitude.\n      volume += Math.sqrt(amp/pcmData.length);\n      countPerBar ++;\n\n      let barCount = (duration / MILLIS_PER_BAR) | 0;\n      // Shift of the histogram along x-axis to make scrolling smooth. No need to shift if recording is too short.\n      const dx = viewDuration > duration ? 0 :\n        (duration - MILLIS_PER_BAR * barCount) / MILLIS_PER_BAR * (LINE_WIDTH + SPACING);\n\n      if (prevBarCount != barCount) {\n        prevBarCount = barCount;\n        // Add new amplitude visualization bar.\n        this.viewBuffer.push(volume/countPerBar);\n        volume = 0.0;\n        countPerBar = 0;\n        if (this.viewBuffer.length > viewLength) {\n          // Keep at most 'viewLength' amplitude bars.\n          this.viewBuffer.shift();\n        }\n      }\n\n      // Clear canvas.\n      this.canvasContext.clearRect(0, 0, width, height);\n\n      // Draw amplitude bars.\n      this.canvasContext.beginPath();\n      for (let i = 0; i < this.viewBuffer.length; i++) {\n        let x = i * (LINE_WIDTH + SPACING) - dx;\n        let y = Math.min(this.viewBuffer[i] / BAR_SCALE, 0.9) * height;\n\n        this.canvasContext.moveTo(x, (height - y) * 0.5);\n        this.canvasContext.lineTo(x, height * 0.5 + y * 0.5);\n      }\n      // Actually draw the bars on canvas.\n      this.canvasContext.stroke();\n    }\n\n    drawFrame();\n  }\n\n  handlePause(e) {\n    e.preventDefault();\n    this.mediaRecorder.pause();\n    this.mediaRecorder.requestData();\n    this.durationMillis += Date.now() - this.startedOn;\n    this.startedOn = null;\n    this.setState({recording: false});\n  }\n\n  handleResume(e) {\n    e.preventDefault();\n    if (this.state.enabled) {\n      this.startedOn = Date.now();\n      this.mediaRecorder.resume();\n      this.setState({recording: true}, this.visualize);\n    }\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n    this.durationMillis = 0;\n    this.startedOn = null;\n    this.mediaRecorder.stop();\n    this.cleanUp();\n    this.setState({recording: false});\n  }\n\n  handleDone(e) {\n    e.preventDefault();\n    this.setState({recording: false});\n    if (this.startedOn) {\n      this.durationMillis += Date.now() - this.startedOn;\n      this.startedOn = null;\n    }\n    // Stop recording and return data.\n    if (this.mediaRecorder) {\n      this.mediaRecorder.stop();\n    }\n  }\n\n  initCanvas() {\n    this.canvasRef.current.width = this.canvasRef.current.offsetWidth * CANVAS_UPSCALING;\n    this.canvasRef.current.height = this.canvasRef.current.offsetHeight * CANVAS_UPSCALING;\n\n    this.canvasContext = this.canvasRef.current.getContext('2d');\n    this.canvasContext.lineCap = 'round';\n    // To reduce line blurring.\n    this.canvasContext.translate(0.5, 0.5);\n    this.canvasWidth = this.canvasRef.current.width;\n    this.canvasHeight = this.canvasRef.current.height;\n  }\n\n  initMediaRecording(stream) {\n    this.stream = stream;\n    this.mediaRecorder = new MediaRecorder(stream, {mimeType: AUDIO_MIME_TYPE});\n\n    // The following code is needed for visualization.\n    this.audioContext = new AudioContext();\n    this.audioInput = this.audioContext.createMediaStreamSource(stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = BUFFER_SIZE;\n    this.audioInput.connect(this.analyser);\n\n    this.mediaRecorder.onstop = _ => {\n      if (this.durationMillis > MIN_DURATION) {\n        this.getRecording(this.mediaRecorder.mimeType, this.durationMillis)\n          .then(result => this.props.onFinished(result.url, result.preview, this.durationMillis));\n      } else {\n        this.props.onDeleted();\n      }\n      this.cleanUp();\n    }\n\n    this.mediaRecorder.ondataavailable = (e) => {\n      if (e.data.size > 0) {\n        this.audioChunks.push(e.data);\n      }\n\n      if (this.mediaRecorder.state != 'inactive') {\n        this.getRecording(this.mediaRecorder.mimeType).then(result => {\n          this.setState({\n            blobUrl: result.url,\n            preview: result.preview\n          });\n        });\n      }\n    }\n\n    this.durationMillis = 0;\n    this.startedOn = Date.now();\n    this.mediaRecorder.start();\n    this.visualize();\n  }\n\n  // Obtain data in a form sutable for sending or playing back.\n  // If duration is valid, apply fix for Chrome's WebM duration bug.\n  getRecording(mimeType, duration) {\n    let blob = new Blob(this.audioChunks, {type: mimeType || AUDIO_MIME_TYPE});\n    return (duration > 0 ? fixWebmDuration(blob, duration, {logger: false}) : Promise.resolve(blob))\n      .then(fixedBlob => { blob = fixedBlob; return fixedBlob.arrayBuffer(); })\n      .then(arrayBuff => this.audioContext.decodeAudioData(arrayBuff))\n      .then(decoded => this.createPreview(decoded))\n      .then(preview => ({url: window.URL.createObjectURL(blob), preview: intArrayToBase64(preview)}));\n  }\n\n  // Preview must be calculated at the source: Chrome does not allow background AudioContext.\n  createPreview(audio) {\n    const data = audio.getChannelData(0);\n    // Number of amplitude bars in preview.\n    const viewLength = Math.min(data.length, VISUALIZATION_BARS);\n    // The number of samples in each bar.\n    const totalSPB = (data.length / viewLength) | 0;\n    // Distance between samples: we are going to take just a fracton of samples.\n    const samplingRate = Math.max(1, (totalSPB / MAX_SAMPLES_PER_BAR) | 0);\n\n    let buffer = [];\n    let max = -1;\n    for (let i = 0; i < viewLength; i++) {\n      let amplitude = 0;\n      let count = 0;\n      for (let j = 0; j < totalSPB; j += samplingRate) {\n        amplitude += data[totalSPB * i + j] ** 2;\n        count ++;\n      }\n      const val = Math.sqrt(amplitude / count);\n      buffer.push(val);\n      max = Math.max(max, val);\n    }\n    // Normalize amplitude to 0..100.\n    if (max > 0) {\n      buffer = buffer.map(a => (100 * a / max) | 0);\n    }\n    return buffer;\n  }\n\n  cleanUp() {\n    this.audioInput.disconnect();\n    this.stream.getTracks().forEach(track => track.stop());\n  }\n\n  render() {\n    const resumeClass = 'material-icons ' + (this.state.enabled ? 'red' : 'gray');\n    return (\n      <div className=\"audio\">\n        <a href=\"#\" onClick={this.handleDelete} title=\"Delete\">\n          <i className=\"material-icons gray\">delete_outline</i>\n        </a>\n        {this.state.recording ?\n          <canvas ref={this.canvasRef} />\n          :\n          <AudioPlayer\n            src={this.state.blobUrl}\n            preview={this.state.preview}\n            duration={this.durationMillis}\n            short={true} />\n        }\n        <div className=\"duration\">{this.state.duration}</div>\n        {this.state.recording ?\n          <a href=\"#\" onClick={this.handlePause} title=\"Pause\">\n            <i className=\"material-icons\">pause_circle_outline</i>\n          </a> :\n          <a href=\"#\" onClick={this.handleResume} title=\"Resume\">\n            <i className={resumeClass}>radio_button_checked</i>\n          </a>\n        }\n        <a href=\"#\" onClick={this.handleDone} title=\"Send\">\n          <i className=\"material-icons\">send</i>\n        </a>\n      </div>\n    );\n  }\n}\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport AudioRecorder from './audio-recorder.jsx';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quote: null,\n      message: '',\n      audioRec: false,\n      audioAvailable: !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia),\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachAudio = this.handleAttachAudio.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatReply = this.formatReply.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n\n    this.setState({quote: this.formatReply()});\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.topicName != this.props.topicName) {\n      this.setState({message: '', audioRec: false, quote: null});\n    }\n    if (prevProps.reply != this.props.reply) {\n      this.setState({quote: this.formatReply()});\n    }\n  }\n\n  formatReply() {\n    return this.props.reply ?\n      Drafty.format(this.props.reply.content, replyFormatter, {\n        formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) : null;\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      file => { this.props.onAttachImage(file); },\n      file => { this.props.onAttachFile(file); },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachAudio(url, preview, duration) {\n    this.setState({audioRec: false});\n    this.props.onAttachAudio(url, preview, duration);\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    if (this.state.audioRec) {\n      // Ignore key presses while audio is being recorded.\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.reply && this.props.onQuoteClick) {\n      const replyToSeq = this.props.reply.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    const quote = this.state.quote ?\n      (<div id=\"reply-quote-preview\">\n        <div className=\"cancel\">\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        {this.state.quote}\n      </div>) : null;\n    const audioEnabled = this.state.audioAvailable && this.props.onAttachAudio;\n    return (\n      <div id=\"send-message-wrapper\">\n        {!this.props.noInput ? quote : null}\n        <div id=\"send-message-panel\">\n          {!this.props.disabled ?\n            <>\n              {this.props.onAttachFile && !this.state.audioRec ?\n                <>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                    <i className=\"material-icons secondary\">photo</i>\n                  </a>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                    <i className=\"material-icons secondary\">attach_file</i>\n                  </a>\n                </>\n                :\n                null}\n              {this.props.noInput ?\n                (quote || <div className=\"hr thin\" />) :\n                (this.state.audioRec ?\n                  <AudioRecorder\n                    onDeleted={_ => this.setState({audioRec: false})}\n                    onFinished={this.handleAttachAudio}/> :\n                  <textarea id=\"sendMessage\" placeholder={prompt}\n                    value={this.state.message} onChange={this.handleMessageTyping}\n                    onKeyPress={this.handleKeyPress}\n                    ref={(ref) => {this.messageEditArea = ref;}}\n                    autoFocus />)}\n              {this.state.message || !audioEnabled ?\n                <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n                  <i className=\"material-icons\">send</i>\n                </a> :\n                !this.state.audioRec ?\n                  <a href=\"#\" onClick={e => {e.preventDefault(); this.setState({audioRec: true})}} title=\"Voice\">\n                    <i className=\"material-icons\">mic</i>\n                  </a> :\n                  null\n              }\n              <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n                onChange={this.handleAttachFile} style={{display: 'none'}} />\n              <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n                onChange={this.handleAttachImage} style={{display: 'none'}} />\n            </>\n            :\n            <div id=\"writing-disabled\">{prompt}</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          reply={this.props.reply}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={true}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            reply={this.props.reply}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Message bubble with non-payload content, such as an indicator of deleted content or a date stamp.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class MetaMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let content = null;\n    let bubbleClass = 'bubble';\n    if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n      bubbleClass += ' deleted';\n    } else if (this.props.date) {\n      // A date badge.\n      content = <>{this.props.date}</>\n      bubbleClass += ' date';\n    }\n\n    if (!content) {\n      return <>{null}</>\n    }\n\n    return (\n      <li className=\"meta\">\n        <div className={bubbleClass}>\n          <div className=\"message-content\">\n            {content}\n          </div>\n        </div>\n      </li>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","// Panel with a chat.\n\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty, Tinode } from 'tinode-sdk';\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport MetaMessage from '../widgets/meta-message.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { blobToBase64, fileToBase64, imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n// Scroll distance before [go to latest message] button is shown.\nconst SHOW_GO_TO_LAST_DIST = 100;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendAudioAttachment = this.sendAudioAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowMessageContextMenu = this.handleShowMessageContextMenu.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n    this.goToLatestMessage = this.goToLatestMessage.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller &&\n      (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount)) {\n      // New message.\n      if (this.state.scrollPosition < SHOW_GO_TO_LAST_DIST) {\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight -\n          this.state.scrollPosition -\n          this.messagesScroller.offsetHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Don't immediately subscribe to a new p2p topic, wait for the first message.\n      if (topic._new && topic.isP2PType()) {\n        topic.getMeta(topic.startMetaQuery().withDesc().build());\n      } else {\n        this.subscribe(topic);\n      }\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        deleted: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null,\n        showGoToLastButton: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        showGoToLastButton: false,\n        deleted: topic._deleted\n      };\n\n      if (nextProps.forwardMessage) {\n        // We are forwarding a message. Show preview.\n        nextState.reply = {\n          content: nextProps.forwardMessage.preview,\n          seq: null\n        };\n      }\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (pub._sending) {\n            return;\n          }\n          if (topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic, err);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  // Don't use React.createRef as the ref.current is not available in componentDidMount in this component.\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages and show/hide [go to latest message] button.\n  handleScrollEvent(event) {\n    const pos = event.target.scrollHeight - event.target.scrollTop - event.target.offsetHeight;\n    this.setState({\n      scrollPosition: pos,\n      // Show [go to latest message] if far enough from bottom and scrolling down.\n      showGoToLastButton: (pos > SHOW_GO_TO_LAST_DIST) && (pos < this.state.scrollPosition),\n    });\n\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  goToLatestMessage() {\n    this.setState({scrollPosition: 0});\n    if (this.messagesScroller) {\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight;\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false}, _ => {\n      // Scroll to the bottom if the message is added to the end of the message\n      // list if already at the bottom, otherwise show [go to latest] button.\n      // Implemented as a callback to be sure the scroll height has been updated.\n      if (topic.isNewMessage(msg.seq)) {\n        if (this.state.scrollPosition > SHOW_GO_TO_LAST_DIST) {\n          this.setState({showGoToLastButton: true});\n        } else {\n          this.goToLatestMessage();\n        }\n      }\n    });\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowMessageContextMenu(params, messageSpecificMenuItems) {\n    if (params.userFrom == 'chan') {\n      params.userFrom = this.state.topic;\n      params.userName = this.state.title;\n    }\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.props.forwardMessage) {\n      // We are forwarding a message.\n      msg = this.props.forwardMessage.msg;\n      head = this.props.forwardMessage.head;\n      this.handleCancelReply();\n    } else if (this.state.reply && this.state.reply.content) {\n      // We are replying to a message in this topic.\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(Drafty.sanitizeEntities(this.state.reply.content), msg);\n      this.handleCancelReply();\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked: launch attachment preview.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({\n        docPreview: {\n          file: file,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked: launch image preview.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  // sendAudioAttachment sends audio bits inband as Drafty message (no preview).\n  sendAudioAttachment(url, preview, duration) {\n    fetch(url)\n      .then(result => result.blob())\n      .then(blob => {\n        // Server-provided limit reduced for base64 encoding and overhead.\n        const maxInbandAttachmentSize = this.props.tinode.getServerLimit('maxMessageSize', MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024;\n        if (blob.size > maxInbandAttachmentSize) {\n          // Too large to send inband - uploading out of band and sending as a link.\n          const uploader = this.props.tinode.getLargeFileHelper();\n          if (!uploader) {\n            this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n            return;\n          }\n          const uploadCompletionPromise = uploader.upload(blob);\n          const msg = Drafty.appendAudio(null, {\n            mime: blob.type,\n            size: blob.size,\n            duration: duration,\n            preview: preview,\n            urlPromise: uploadCompletionPromise\n          });\n          // Pass data and the uploader to the TinodeWeb.\n          this.sendMessage(msg, uploadCompletionPromise, uploader);\n        } else {\n          // Small enough to send inband.\n          blobToBase64(blob)\n            .then(b64 => {\n              this.sendMessage(Drafty.appendAudio(null, {\n                mime: b64.mime,\n                size: blob.size,\n                data: b64.bits,\n                duration: duration,\n                preview: preview,\n              }))\n            })\n        }\n      })\n      .catch(err => {this.props.onError(err)});;\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  // seq: seq ID of the source message\n  // context: message content.\n  // senderId: UID of the sender of the source message.\n  // senderName: full name of the sender of the original message.\n  handlePickReply(seq, content, senderId, senderName) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    content = typeof content == 'string' ? Drafty.init(content) : content;\n    if (Drafty.isValid(content)) {\n      content = Drafty.replyContent(content, QUOTED_REPLY_LENGTH);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n    this.props.onCancelForwardMessage();\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null});\n    this.props.onCancelForwardMessage();\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n\n        const messageNodes = [];\n        let previousFrom = null;\n        let prevDate = null;\n        let chatBoxClass = null;\n        const dateFmt = new Intl.DateTimeFormat(this.props.intl.locale);\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || 'chan') : null;\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userFrom = thisFrom, userName, userAvatar;\n          const user = topic.userDesc(thisFrom);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n          chatBoxClass = groupTopic ? 'chat-box group' : 'chat-box';\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          if (msg.hi) {\n            // Deleted message.\n            messageNodes.push(\n              <MetaMessage\n                deleted={true}\n                key={msg.seq} />\n              );\n          } else {\n            const thisDate = new Date(msg.ts);\n            // This message was sent on a different date than the previous.\n            if (!prevDate || prevDate.toDateString() != thisDate.toDateString()) {\n              messageNodes.push(\n                <MetaMessage\n                  date={dateFmt.format(msg.ts)}\n                  locale={this.props.intl.locale}\n                  key={'date-' + msg.seq} />\n              );\n              prevDate = thisDate;\n            }\n            messageNodes.push(\n              <ChatMessage\n                tinode={this.props.tinode}\n                content={msg.content}\n                mimeType={msg.head ? msg.head.mime : null}\n                timestamp={msg.ts}\n                response={isReply}\n                seq={msg.seq}\n                isGroup={groupTopic}\n                isChan={this.state.channel}\n                userFrom={userFrom}\n                userName={userName}\n                userAvatar={userAvatar}\n                sequence={sequence}\n                received={deliveryStatus}\n                uploader={msg._uploader}\n                viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n                showContextMenu={this.handleShowMessageContextMenu}\n                onImagePreview={this.handleImagePostview}\n                onFormResponse={this.handleFormResponse}\n                onError={this.props.onError}\n                onCancelUpload={this.handleCancelUpload}\n                pickReply={this.handlePickReply}\n                replyToSeq={replyToSeq}\n                onQuoteClick={this.handleQuoteClick}\n                ref={ref}\n                userIsWriter={this.state.isWriter}\n                key={msg.seq} />\n            );\n          }\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.state.deleted ? null :\n          this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        const titleClass = 'panel-title' + (this.state.deleted ? ' deleted' : '');\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title}\n                  deleted={this.state.deleted} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className={titleClass}>{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <button className={'action-button' + (this.state.showGoToLastButton ? '' : ' hidden')}\n                onClick={this.goToLatestMessage}>\n                <i className=\"material-icons\">arrow_downward</i>\n              </button>\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                topicName={this.state.topic}\n                noInput={!!this.props.forwardMessage}\n                disabled={!this.state.isWriter || this.state.deleted}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.props.forwardMessage ? null : this.handleAttachFile}\n                onAttachImage={this.props.forwardMessage ? null : this.handleAttachImage}\n                onAttachAudio={this.props.forwardMessage ? null : this.sendAudioAttachment}\n                onError={this.props.onError}\n                reply={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeUrlForMime } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeUrlForMime(this.props.avatar, 'image'));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {/* <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a> */}\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          {/* <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} /> */}\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          {/* <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" /> */}\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            {/* <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a> */}\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                  description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt >{this.state.auth}</tt></div>\n              <div>Anon: <tt >{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          {/* <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a> */}\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { Tinode } from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  },\n  search_placeholder: {\n    id: \"search_placeholder\",\n    defaultMessage: \"List like email:alice@example.com, tel:17025550003...\",\n    description: \"Placeholder in contacts search field\"\n  },\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'find',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleSearchResultSelected = this.handleSearchResultSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleSearchResultSelected(name) {\n    if (this.state.tabSelected == 'find') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(name);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    const search_placeholder = formatMessage(messages.search_placeholder);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"find\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"find\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                placeholder={search_placeholder}\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleSearchResultSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <><label htmlFor=\"new-password\">\n            <FormattedMessage id=\"label_new_password\"\n              defaultMessage=\"New password\"\n              description=\"Label for entering a new password\" />\n          </label>\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              id=\"new-password\"\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage></>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          // view === 'settings' ?\n          // <SettingsView\n          //   transport={this.props.transport}\n          //   serverAddress={this.props.serverAddress}\n          //   onCancel={this.props.onCancel}\n          //   onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          // view === 'notif' ?\n          // <AccNotificationsView\n          //   messageSounds={this.props.messageSounds}\n          //   desktopAlerts={this.props.desktopAlerts}\n          //   desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n          //   incognitoMode={this.props.incognitoMode}\n          //   onTogglePushNotifications={this.props.onTogglePushNotifications}\n          //   onToggleMessageSounds={this.props.onToggleMessageSounds}\n          //   onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\n// // import { initializeApp as firebaseInitApp } from 'firebase/app';\n// import { getMessaging as firebaseGetMessaging, getToken as firebaseGetToken,\n//   deleteToken as firebaseDelToken, onMessage as firebaseOnMessage } from 'firebase/messaging';\n\nimport { Drafty, Tinode } from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\nimport ForwardDialog from '../widgets/forward-dialog.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, FORWARDED_PREVIEW_LENGTH, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    // this.initFCMessaging = this.initFCMessaging.bind(this);\n    // this.toggleFCMToken = this.toggleFCMToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n\n    this.handleShowForwardDialog = this.handleShowForwardDialog.bind(this);\n    this.handleHideForwardDialog = this.handleHideForwardDialog.bind(this);\n\n    this.sendMessageToTopic = this.sendMessageToTopic.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      // Persistent request to enable alerts.\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      // Enable / disable checkbox.\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebaseInitApp != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      forwardDialogVisible: false,\n      forwardMessage: null,\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      // if (this.state.desktopAlertsEnabled) {\n      //   this.initFCMessaging().then(() => {\n      //     if (this.state.desktopAlerts) {\n      //       this.tinode.setDeviceToken(this.state.firebaseToken);\n      //     }\n      //   }).catch(() => {\n      //     // do nothing: handled earlier.\n      //     // catch needed to pervent unnecessary logging of error.\n      //   });\n      // }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Maybe navigate to home screen.\n      if (!['cred', 'reset', 'register'].includes(parsedNav.path[0])) {\n        // Save possible topic name.\n        this.setState({requestedTopic: parsedNav.path[1]});\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Tinode received a push notification from the server.\n  handlePushMessage(payload) {\n    this.tinode.oobNotification(payload.data || {});\n  }\n\n  // initFCMessaging() {\n  //   const {formatMessage, locale} = this.props.intl;\n  //   const onError = (msg, err) => {\n  //     console.error(msg, err);\n  //     this.handleError(formatMessage(messages.push_init_failed), 'err');\n  //     this.setState({desktopAlertsEnabled: false, firebaseToken: null});\n  //     LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n  //   }\n\n  //   try {\n  //     this.fcm = firebaseGetMessaging(firebaseInitApp(FIREBASE_INIT, APP_NAME));\n  //     return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n  //       this.checkForAppUpdate(reg);\n  //       reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n  //       return reg;\n  //     }).then((reg) => {\n  //       // Request token.\n  //       return TinodeWeb.requestFCMToken(this.fcm, reg);\n  //     }).then((token) => {\n  //       const persist = LocalStorageUtil.getObject('keep-logged-in');\n  //       if (token != this.state.firebaseToken) {\n  //         this.tinode.setDeviceToken(token);\n  //         if (persist) {\n  //           LocalStorageUtil.setObject('firebase-token', token);\n  //         }\n  //       }\n  //       this.setState({firebaseToken: token, desktopAlerts: true});\n  //       if (persist) {\n  //         LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n  //       }\n\n  //       // Handhe FCM pushes\n  //       // (a) for channels always,\n  //       // (b) pushes when the app is in foreground but has no focus.\n  //       firebaseOnMessage(this.fcm, (payload) => { this.handlePushMessage(payload); });\n  //     }).catch((err) => {\n  //       // SW registration or FCM has failed :(\n  //       onError(err);\n  //       throw err;\n  //     });\n  //   } catch (err) {\n  //     onError(err);\n  //     return Promise.reject(err);\n  //   }\n  // }\n\n  // // Google's FCM API is idiotic.\n  // static requestFCMToken(fcm, sw) {\n  //   return firebaseGetToken(fcm, {\n  //     serviceWorkerRegistration: sw,\n  //     vapidKey: FIREBASE_INIT.messagingVapidKey\n  //   }).then((token) => {\n  //     if (token) {\n  //       return token;\n  //     } else {\n  //       // Try to request permissions.\n  //       return Notification.requestPermission().then((permission) => {\n  //         if (permission === 'granted') {\n  //           return firebaseGetToken(fcm, {\n  //             serviceWorkerRegistration: reg,\n  //             vapidKey: FIREBASE_INIT.messagingVapidKey\n  //           }).then((token) => {\n  //             if (token) {\n  //               return token;\n  //             } else {\n  //               throw new Error(\"Failed to initialize notifications\");\n  //             }\n  //           });\n  //         } else {\n  //           throw new Error(\"No permission to send notifications: \" + permission);\n  //         }\n  //       });\n  //     }\n  //   });\n  // }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        this.setState({\n          topicSelected: topicName,\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        _ => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      forwardDialogVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd' || what == 'call') {\n      // upd, call - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\", what, \"in\", cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a topic in the side panel or deleted a topic.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different topic selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName),\n          forwardMessage: null\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined,\n        forwardMessage: null\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploadCompletionPromise - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, uploadCompletionPromise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n    this.sendMessageToTopic(topic, msg, uploadCompletionPromise, uploader, head);\n  }\n\n  sendMessageToTopic(topic, msg, uploadCompletionPromise, uploader, head) {\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    const completion = [];\n    if (uploadCompletionPromise) {\n      completion.push(uploadCompletionPromise);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      const subscribePromise =\n        topic.subscribe()\n          .then(() => {\n            // If there are unsent messages, try sending them now.\n            topic.queuedMessages(pub => {\n              if (pub._sending || pub.seq == msg.seq) {\n                return;\n              }\n              if (topic.isSubscribed()) {\n                topic.publishMessage(pub);\n              }\n            });\n          });\n      completion.push(subscribePromise);\n    }\n\n    topic.publishDraft(msg, Promise.all(completion))\n      .then(_ => {\n        if (topic.isArchived()) {\n          topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // toggleFCMToken(enabled) {\n  //   if (enabled) {\n  //     this.setState({desktopAlerts: null});\n  //     if (!this.state.firebaseToken) {\n  //       // this.initFCMessaging();\n  //     } else {\n  //       this.setState({desktopAlerts: true});\n  //       if (LocalStorageUtil.getObject('keep-logged-in')) {\n  //         LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n  //       }\n  //     }\n  //   } else if (this.state.firebaseToken && this.fcm) {\n  //     firebaseDelToken(this.fcm).catch((err) => {\n  //       console.error(\"Unable to delete token.\", err);\n  //     }).finally(() => {\n  //       LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n  //       localStorage.removeItem('firebase-token');\n  //       this.setState({desktopAlerts: false, firebaseToken: null});\n  //       // Inform the server that the token was deleted.\n  //       this.tinode.setDeviceToken(null);\n  //     });\n  //   } else {\n  //     this.setState({desktopAlerts: false, firebaseToken: null});\n  //     LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n  //   }\n  // }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n      delete parsed.params.scheme;\n      delete parsed.params.token;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      if (newTopicParams) {\n        params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n        params.tags = newTopicParams.tags;\n      }\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      firebaseDelToken(this.fcm);\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    let cleared;\n    if (this.tinode) {\n      cleared = this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    } else {\n      cleared = Promose.resolve();\n    }\n    this.setState(this.getBlankState());\n\n    cleared.then(() => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n        this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'), () => {\n          this.tinode.onConnect = this.handleConnected;\n          this.tinode.onDisconnect = this.handleDisconnect;\n          this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n          HashNavigation.navigateTo('');\n        })\n    });\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then(_ => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.report('report', topicName);\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  //\n  handleShowForwardDialog(params) {\n    if (this.state.sidePanelSelected == 'newtpk') {\n      // If the Find panel is active, close it.\n      this.handleSidepanelCancel();\n    }\n    const header = '➦ ' + params.userName;\n    const content = typeof params.content == 'string' ? Drafty.init(params.content) : Drafty.forwardedContent(params.content);\n    const preview = Drafty.preview(content, FORWARDED_PREVIEW_LENGTH, true);\n    const msg = Drafty.append(Drafty.appendLineBreak(Drafty.mention(header, params.userFrom)), content);\n    const msgPreview = Drafty.quote(header, params.userFrom, preview);\n\n    const head = {\n      forwarded: params.topicName + ':' + params.seq\n    };\n    this.setState({\n      forwardDialogVisible: true,\n      forwardMessage: { head: head, msg: msg, preview: msgPreview }\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    if (topic._deleted) {\n      return [\n        'topic_delete'\n      ];\n    }\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleHideForwardDialog(keepForwardedMessage) {\n    this.setState({\n      forwardDialogVisible: false,\n      forwardMessage: keepForwardedMessage ? this.state.forwardMessage : null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    } else if (action == 'menu_item_forward') {\n      this.handleShowForwardDialog(params);\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        {this.state.forwardDialogVisible ?\n          <ForwardDialog\n            tinode={this.tinode}\n            contacts={this.state.chatList}\n            topicSelected={this.state.topicSelected}\n            myUserId={this.state.myUserId}\n\n            hide={this.handleHideForwardDialog}\n            onInitFind={this.tnInitFind}\n            searchResults={this.state.searchResults}\n            onSearchContacts={this.handleSearchContacts}\n            onTopicSelected={this.handleStartTopicRequest}\n          />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.toggleFCMToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          forwardMessage={this.state.forwardMessage}\n          onCancelForwardMessage={this.handleHideForwardDialog}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// import * as Y from 'yjs'\n// const test = new Y.Doc()\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? language : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n"],"names":["sections","name","type","doInherit","newClass","baseClass","prototype","Object","create","constructor","WebmBase","this","WebmUint","call","padHex","hex","length","WebmFloat","WebmContainer","WebmFile","source","setSource","fixWebmDuration","blob","duration","callback","options","undefined","Promise","resolve","reader","FileReader","onloadend","file","Uint8Array","result","fixDuration","toBlob","ex","readAsArrayBuffer","updateBySource","updateByData","setData","data","i","toString","substr","parseInt","getValue","setValue","value","getFloatArrayType","Float32Array","Float64Array","byteArray","reverse","floatArray","buffer","readByte","offset","readUint","firstByte","bytes","end","id","len","Math","min","slice","info","ctr","section","push","idHex","writeUint","x","draft","flag","c","writeSections","content","contentLength","set","getSectionById","logger","message","console","log","segmentSection","infoSection","timeScaleSection","durationSection","mimeType","Blob","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","React","ReactDOM","ReactIntl","Tinode","Alert","render","props","visible","className","title","onReject","onClick","reject","FormattedMessage","defaultMessage","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","forward","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","deleteMessages","retryMessage","replyToMessage","topicPermissionSetter","onShowAlert","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","warn","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","updateMode","pickReply","userFrom","userName","menu","count","map","vSize","position","left","bounds","right","clickAt","top","bottom","y","style","ref","injectIntl","icon_mapping","ContactBadges","badges","b","color","icon","secondsToTime","seconds","fixedMin","floor","sec","bytesToHumanSize","sizes","bucket","log2","pow","round","toFixed","shortenFileName","filename","maxLength","idToColorClass","light","fg","userId","abs","hash","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","matches","exec","photo","substring","indexOf","arrayEqual","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeUrlForMime","mimeMajor","sanitizedUrl","deliveryMarker","received","cancelablePromise","promise","hasCanceled","Error","isCanceled","cancel","LetterTile","avatar","isGroup","iconColor","letter","charAt","deleted","authorizeURL","alt","src","onerror","UnreadBadge","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","clearRect","createObjectURL","blobToBase64","_","bits","split","readAsDataURL","intArrayToBase64","arr","bin","forEach","String","fromCharCode","window","btoa","base64ToIntArray","b64","atob","BAR_COLOR_DARK","AudioPlayer","preview","state","canPlay","playing","currentTime","longMin","initAudio","initCanvas","resampleBars","visualize","handlePlay","handleSeek","handleError","audioPlayer","viewBuffer","canvasRef","oncanplay","ontimeupdate","onended","pause","componentDidUpdate","prevProps","setState","Audio","offsetWidth","offsetHeight","canvasContext","lineCap","effectiveWidth","lineWidth","drawFrame","requestAnimationFrame","thumbAt","max","LINE_WIDTH","beginPath","strokeStyle","stroke","moveTo","lineTo","arc","PI","fillStyle","fill","original","dstCount","apply","factor","amps","maxAmp","lo","hi","amp","j","play","rect","getBoundingClientRect","clientX","playClass","short","LazyImage","assign","padding","whenDone","FileProgress","progress","onCancel","UploadingImage","onCancelUpload","drafty_form","drafty_attachment","drafty_image","drafty_unknown","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","onImagePreview","loading","fullFormatter","values","stack","quoteFormatter","onFormButtonClick","inner","child","val","onQuoteClick","body","concat","previewFormatter","inlineImageAttr","quoteImage","str","buf","ArrayBuffer","base64ToBlob","fetch","evt","ok","status","statusText","scaled","replyFormatter","loadedPromise","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","now","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","marker","titleClass","showCheckmark","selected","showOnline","isChannel","unread","small","comment","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","forwarded","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","trusted","verified","staff","danger","_deleted","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","SearchContacts","edited","search","handleSearchChange","handleSearch","handleClear","handleKeyDown","onSearchContacts","query","placeholder","onChange","onKeyDown","required","autoFocus","ForwardDialog","handleClose","handleSearchContacts","handleContactSelected","onInitFind","uid","searchResults","isWriter","desription","search_placeholder","not_found_placeholder","LoadSpinner","large","clear","centered","show","AvatarUpload","handleFileReceived","image","files","onImageUpdated","randId","random","readOnly","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","CheckBox","handleChange","checked","MenuCancel","ErrorPanel","level","onClearError","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","tabIndex","onFocus","onBlur","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","VisiblePassword","inputRef","handleVisibility","handeTextChange","handleEditingFinished","focus","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","helperFunc","isUrlRelative","downloadUrl","downloadWidget","message_sending","message_sending_failed","ReceivedMarker","timestamp","toLocaleTimeString","locale","timeStyle","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","resp","act","onFormResponse","userIsWriter","ratio","replyToSeq","sideClass","sequence","response","bubbleClass","fullDisplay","attachments","att","tree","innerRef","IntlChatMessage","MILLIS_PER_BAR","AUDIO_MIME_TYPE","AudioRecorder","enabled","audioRecord","recording","paused","blobUrl","initMediaRecording","getRecording","cleanUp","handleResume","handlePause","handleDelete","handleDone","durationMillis","startedOn","stream","mediaRecorder","audioContext","audioInput","analyser","audioChunks","navigator","mediaDevices","getUserMedia","audio","video","pcmData","frequencyBinCount","canvasWidth","canvasHeight","viewLength","viewDuration","prevBarCount","volume","countPerBar","Date","getByteTimeDomainData","amplitude","barCount","dx","requestData","resume","stop","MediaRecorder","AudioContext","createMediaStreamSource","createAnalyser","fftSize","connect","onstop","onDeleted","ondataavailable","start","fixedBlob","arrayBuffer","arrayBuff","decodeAudioData","decoded","createPreview","getChannelData","totalSPB","samplingRate","disconnect","getTracks","track","resumeClass","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","quote","audioRec","audioAvailable","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleAttachAudio","handleSend","handleKeyPress","handleMessageTyping","formatReply","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","filePasted","onAttachImage","onAttachFile","onAttachAudio","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","audioEnabled","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","MetaMessage","date","HashNavigation","parts","path","part","decodeURIComponent","location","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendAudioAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowMessageContextMenu","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","goToLatestMessage","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollPosition","scrollTop","scrollHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","_new","isP2PType","withDesc","nextState","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","showGoToLastButton","forwardMessage","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","pos","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","searchParams","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","_tempPreview","found","findMessage","_cancelled","senderId","senderName","onCancelForwardMessage","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","prevDate","chatBoxClass","dateFmt","Intl","DateTimeFormat","prev","next","nextFrom","thisFrom","isReply","userDesc","isNaN","thisDate","ts","toDateString","format","isChan","_uploader","lastSeen","cont","getMeTopic","getContact","seen","userLanguage","language","getFullYear","getMonth","getDate","hour12","hour","minute","toLocaleDateString","month","day","year","shortDateFormat","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","parse","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","onImageChanged","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchResultSelected","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","PasswordResetView","sent","token","scheme","onReset","onRequest","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","handleShowForwardDialog","handleHideForwardDialog","sendMessageToTopic","autoLogin","transport","messageSounds","messageSoundsOff","incognitoMode","desktopAlerts","desktopAlertsEnabled","firebaseInitApp","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","forwardDialogVisible","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","viewportHeight","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","parsedNav","expires","setAuthToken","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","payload","oobNotification","mobile","reg","onupdatefound","installingWorker","installing","onstatechange","serviceWorker","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","prom","timeLeft","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withCred","urlHash","setUrlSidePanel","isPresencer","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","completion","subscribePromise","publishMessage","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","updateObject","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","cleared","firebaseDelToken","fcm","Promose","delCurrentUser","report","header","msgPreview","self_blocked","subscribed","keepForwardedMessage","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","base64ReEncode","onGlobalSettings","onTogglePushNotifications","toggleFCMToken","onToggleMessageSounds","onToggleIncognitoMode","myUserName","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","setAttribute","IntlProvider","textComponent"],"sourceRoot":""}